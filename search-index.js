crystal_doc_search_index_callback({"repository_name":"money","body":"# money [![CI](https://github.com/crystal-money/money/actions/workflows/ci.yml/badge.svg)](https://github.com/crystal-money/money/actions/workflows/ci.yml) [![Releases](https://img.shields.io/github/release/crystal-money/money.svg)](https://github.com/crystal-money/money/releases) [![License](https://img.shields.io/github/license/crystal-money/money.svg)](https://github.com/crystal-money/money/blob/master/LICENSE)\n\nHey there! ðŸ‘‹ Welcome to **money**, a Crystal shard for handling money and currency conversion, inspired by [RubyMoney](https://github.com/RubyMoney/money).\n\n## Why Use This Library?\n\nHereâ€™s what you get out of the box:\n\n- A `Money` class to represent amounts and their currencies.\n- A flexible `Money::Currency` class for all your currency info needs.\n- A growing list of 200+ supported currencies (metals, fiat, cryptocurrencies).\n- `BigDecimal`-based values â€” i.e. no more floating point rounding headaches!\n- Easy APIs for currency exchange.\n- Multiple exchange rate providers (use built-in or roll your own).\n- Comprehensive support for formatting and parsing money values.\n- Mathematical operations on `Money` objects:\n  - Arithmetic: addition, subtraction, multiplication, division, etc.\n  - Rounding and truncation helpers.\n  - Allocation and splitting.\n- Money ranges.\n- JSON/YAML serialization and deserialization support.\n- Extensible architecture of exchange rate providers and stores.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  money:\n    github: crystal-money/money\n```\n\nThen run:\n\n```shell\nshards install\n```\n\nAnd require it in your project:\n\n```crystal\nrequire \"money\"\n```\n\n> [!TIP]\n> If you wish to use YAML serialization, remember to `require \"yaml\"`\n> **before** requiring `money`.\n\n## Quick Examples\n\n### Creating Money\n\n> [!NOTE]\n> `Money.new` first positional argument will treat the given value as the `fractional`\n> if it's an integer, and the `amount` otherwise.\n\n```crystal\nmoney = Money.new(10_00, \"USD\")\nmoney.amount        # => 10.0\nmoney.fractional    # => 1000.0\nmoney.currency.code # => \"USD\"\n```\n\n#### From fractional amount\n\n```crystal\nMoney.from_fractional(10_00.0, \"USD\")\nMoney.from_fractional(10_00, \"USD\")\n\nMoney.new(fractional: 10_00.0, currency: \"USD\")\nMoney.new(fractional: 10_00, currency: \"USD\")\nMoney.new(10_00, \"USD\")\n```\n\n#### From whole amount\n\n```crystal\nMoney.from_amount(10.0, \"USD\")\nMoney.from_amount(10, \"USD\")\n\nMoney.new(amount: 10.0, currency: \"USD\")\nMoney.new(amount: 10, currency: \"USD\")\nMoney.new(10.0, \"USD\")\n```\n\n### Comparing Money\n\n> [!NOTE]\n> Performs currency conversion if necessary.\n\n```crystal\nMoney.default_exchange.rate_store[\"EUR\", \"USD\"] = 1\n\nMoney.new(11_00, \"USD\") < Money.new(33_00, \"USD\") # => true\nMoney.new(11_00, \"USD\") > Money.new(33_00, \"EUR\") # => false\n```\n\n#### Strict Comparison (`==` / `!=`)\n\n> [!NOTE]\n> Does **not** perform currency conversion.\n\n```crystal\nMoney.new(11_00, \"USD\") == Money.new(11_00, \"USD\") # => true\nMoney.new(11_00, \"USD\") == Money.new(11_00, \"EUR\") # => false\n```\n\n#### Loose Comparison (`=~` / `!~`)\n\n> [!NOTE]\n> Performs currency conversion if necessary.\n\n```crystal\nMoney.new(11_00, \"USD\") =~ Money.new(11_00, \"USD\") # => true\nMoney.new(11_00, \"USD\") =~ Money.new(11_00, \"EUR\") # => true\n```\n\n> [!CAUTION]\n> Two `Money` objects with `0` amount are considered equal, regardless of their currency.\n\n```crystal\nMoney.zero(\"USD\") =~ Money.zero(\"EUR\") # => true\n```\n\n### Arithmetic\n\n> [!NOTE]\n> Performs currency conversion if necessary.\n\n```crystal\nMoney.new(10_00, \"USD\") + Money.new(5_00, \"USD\") # => Money(@amount=15.0, @currency=\"USD\")\nMoney.new(22_00, \"USD\") - Money.new(2_00, \"USD\") # => Money(@amount=20.0, @currency=\"USD\")\nMoney.new(22_00, \"USD\") / 2                      # => Money(@amount=11.0, @currency=\"USD\")\nMoney.new(11_00, \"USD\") * 5                      # => Money(@amount=55.0, @currency=\"USD\")\n```\n\n### Unit/Subunit Conversions\n\n```crystal\nMoney.from_amount(5, \"USD\").fractional # => 500.0\nMoney.from_amount(5, \"JPY\").fractional # => 5.0\nMoney.from_amount(5, \"TND\").fractional # => 5000.0\n```\n\n### Currency Conversion\n\nIn order to perform currency exchange, you need to set up a `Money::Currency::Exchange::RateProvider` or add the rates manually:\n\n```crystal\nMoney.default_exchange.rate_store[\"USD\", \"EUR\"] = 1.24515\nMoney.default_exchange.rate_store[\"EUR\", \"USD\"] = 0.80311\n```\n\nThen you can perform the exchange:\n\n```crystal\nMoney.new(1_00, \"USD\").exchange_to(\"EUR\") # => Money(@amount=1.24, @currency=\"EUR\")\nMoney.new(1_00, \"EUR\").exchange_to(\"USD\") # => Money(@amount=0.8, @currency=\"USD\")\n```\n\nComparison and arithmetic operations work as expected:\n\n```crystal\nMoney.new(10_00, \"EUR\") =~ Money.new(10_00, \"USD\") # => false\nMoney.new(10_00, \"EUR\") + Money.new(10_00, \"USD\")  # => Money(@amount=22.45, @currency=\"EUR\")\n```\n\n### Formatting\n\n```crystal\nMoney.new(1_00, \"USD\").format # => \"$1.00\"\nMoney.new(1_00, \"EUR\").format # => \"â‚¬1.00\"\nMoney.new(1_00, \"PLN\").format # => \"1,00 zÅ‚\"\n```\n\n### Money Ranges\n\n```crystal\nrange = Money.new(1_00, \"USD\")..Money.new(3_00, \"USD\")\nrange.to_a(&.format)\n# => [\"$1.00\", \"$1.01\", \"$1.02\", ..., \"$2.99\", \"$3.00\"]\n```\n\n#### Steppable Ranges\n\n```crystal\nrange = Money.new(1_00, \"USD\")..Money.new(3_00, \"USD\")\nrange\n  .step(by: Money.new(1_00, \"USD\"))\n  .to_a(&.format)\n# => [\"$1.00\", \"$2.00\", \"$3.00\"]\n```\n\n#### Clamping\n\n```crystal\nMoney.new(10_00, \"USD\").clamp(\n  min: Money.new(1_00, \"USD\"),\n  max: Money.new(9_00, \"USD\"),\n) # => Money(@amount=9.0, @currency=\"USD\")\n\n# or\n\nMoney.new(10_00, \"USD\").clamp(\n  Money.new(1_00, \"USD\")..Money.new(9_00, \"USD\"),\n) # => Money(@amount=9.0, @currency=\"USD\")\n```\n\n## Infinite Precision\n\nBy default, `Money` objects are rounded to the nearest cent and the extra precision\nis **not** preserved:\n\n```crystal\nMoney.new(2.34567, \"USD\").format # => \"$2.35\"\n```\n\nIf you want to keep all the digits, you can enable infinite precision globally:\n\n```crystal\nMoney.infinite_precision = true\nMoney.new(2.34567, \"USD\").format # => \"$2.34567\"\n```\n\nOr use the block-scoped `Money.with_infinite_precision`:\n\n```crystal\nMoney.with_infinite_precision do\n  Money.new(2.34567, \"USD\").format # => \"$2.34567\"\nend\n```\n\n## Currencies\n\nA `Money::Currency` instance holds all the info about the currency:\n\n```crystal\ncurrency = Money::Currency.find(\"USD\")\ncurrency.code   # => \"USD\"\ncurrency.name   # => \"United States Dollar\"\ncurrency.symbol # => \"$\"\ncurrency.fiat?  # => true\n```\n\nMost APIs let you use a `String`, `Symbol`, or a `Money::Currency`:\n\n```crystal\n# All of the following are equivalent:\n\nMoney.default_currency = Money::Currency.find(\"CAD\")\nMoney.default_currency = \"CAD\"\nMoney.default_currency = :cad\n```\n\n### Currency Lookup\n\n`Money::Currency.find` and `Money::Currency.[]` methods let you find a currency by its code:\n\n```crystal\nMoney::Currency.find(\"USD\") # => #<Money::Currency @code=\"USD\">\nMoney::Currency[:usd]       # => #<Money::Currency @code=\"USD\">\nMoney::Currency[:foo]       # raises Money::Currency::NotFoundError\n```\n\nThere are also `Money::Currency.find?` and `Money::Currency.[]?` non-raising methods:\n\n```crystal\nMoney::Currency.find?(\"USD\") # => #<Money::Currency @code=\"USD\">\nMoney::Currency[:usd]?       # => #<Money::Currency @code=\"USD\">\nMoney::Currency[:foo]?       # => nil\n```\n\n### Currency Enumeration\n\n> [!TIP]\n> `Money::Currency` class implements `Enumerable` module, so you can use all of its\n> methods like `each`, `map`, `find`, `select`, etc.\n\nFor example, to find a currency by ISO 4217 numeric code:\n\n```crystal\nMoney::Currency.find(&.iso_numeric.==(978)) # => #<Money::Currency @code=\"EUR\">\n```\n\nOr to select all the ISO currencies:\n\n```crystal\nMoney::Currency.select(&.iso?)\n# => [#<Money::Currency @code=\"USD\">, #<Money::Currency @code=\"EUR\">, ...]\n```\n\nIn addition, there are `Money::Currency.metal`, `Money::Currency.fiat` and\n`Money::Currency.crypto` methods to get all the currencies of a particular `type`:\n\n```crystal\nMoney::Currency.metal\n# => [#<Money::Currency @code=\"XAG\">, #<Money::Currency @code=\"XAU\">, ...]\nMoney::Currency.fiat\n# => [#<Money::Currency @code=\"USD\">, #<Money::Currency @code=\"EUR\">, ...]\nMoney::Currency.crypto\n# => [#<Money::Currency @code=\"BTC\">, #<Money::Currency @code=\"ETH\">, ...]\n\n# or\nMoney::Currency.reject(&.metal?)\n# => [#<Money::Currency @code=\"USD\">, #<Money::Currency @code=\"EUR\">, ...]\n```\n\nTo return an array of registered currencies (ordered by their priority),\ncall `Money::Currency.all` or `.to_a`:\n\n```crystal\nMoney::Currency.all # => [#<Money::Currency @code=\"USD\">, #<Money::Currency @code=\"EUR\">, ...]\n```\n\n### Registering a New Currency\n\n```crystal\ncurrency = Money::Currency.new(\n  type:                :fiat,\n  priority:            1,\n  code:                \"USD\",\n  iso_numeric:         840,\n  name:                \"United States Dollar\",\n  symbol:              \"$\",\n  symbol_first:        true,\n  subunit:             \"Cent\",\n  subunit_to_unit:     100,\n  decimal_mark:        \".\",\n  thousands_separator: \",\"\n)\n\nMoney::Currency.register(currency)\n```\n\n#### Currency Attributes\n\n- `:type` â€” a `Money::Currency::Type` - either `Metal`, `Fiat` or `Crypto`\n- `:priority` â€” a numerical value you can use to sort/group the currency list\n- `:code` â€” the international 3-letter code as defined by the ISO 4217 standard\n- `:iso_numeric` â€” the international 3-digit code as defined by the ISO 4217 standard\n- `:name` â€” the currency name\n- `:symbol` â€” the currency symbol (UTF-8 encoded)\n- `:symbol_first` â€” whether a money symbol should go before the amount\n- `:subunit` â€” the name of the fractional monetary unit\n- `:subunit_to_unit` â€” the proportion between the unit and the subunit\n- `:decimal_mark` â€” character between the whole and fraction amounts\n- `:thousands_separator` â€” character between each thousands place\n- `:format` â€” a format string passed to `Money#format`\n\nAll attributes except `:code` and `:subunit_to_unit` are optional.\n\n#### Priority\n\nYou can use the `priority` attribute to sort or group currencies:\n\n```crystal\n# Returns an array of currencies where priority is less than 10\ndef major_currencies(currencies)\n  currencies.take_while(&.priority.try(&.<(10)))\nend\n\nmajor_currencies(Money::Currency)\n# => [#<Money::Currency @code=\"USD\">, #<Money::Currency @code=\"EUR\">, ...]\n```\n\n### Default Currency\n\nBy default, `Money` does not have a default currency. You can set it like so:\n\n```crystal\nMoney.default_currency = :xag\n```\n\n### Currency Exponent\n\nThe exponent of a money value is the number of digits after the decimal\nseparator (which separates the major unit from the minor unit). See e.g.\n[ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) for more information.\n\n```crystal\nMoney::Currency.find(\"USD\").exponent # => 2\nMoney::Currency.find(\"JPY\").exponent # => 0\nMoney::Currency.find(\"MGA\").exponent # => 1\n```\n\n## Currency Exchange\n\nExchanging money is performed through a `Money::Currency::Exchange` object.\nThis is done by fetching the exchange rate from a `#rate_store` first.\nIf the rate is not available (or stale), it is then fetched from a `#rate_provider`.\n\nThe default `Money::Currency::Exchange` object uses `Memory` rate store\nin conjunction with `Null` rate provider, which requires one to manually\nspecify the exchange rate.\n\nHere's an example of how it works:\n\n```crystal\nMoney.default_exchange.rate_store[\"USD\", \"EUR\"] = 1.24515\nMoney.default_exchange.rate_store[\"EUR\", \"USD\"] = 0.80311\n\nMoney.new(1_00, \"USD\").exchange_to(\"EUR\") # => Money(@amount=1.24, @currency=\"EUR\")\nMoney.new(1_00, \"EUR\").exchange_to(\"USD\") # => Money(@amount=0.8, @currency=\"USD\")\n```\n\n### Exchange Rate Stores\n\nThe default exchange uses an in-memory store:\n\n```crystal\nMoney.default_exchange = Money::Currency::Exchange.new(\n  rate_store: Money::Currency::RateStore::Memory.new\n)\n```\n\nRate stores can be configured with `Time::Span` controlling the time-to-live (TTL)\nof the exchange rates:\n\n```crystal\nMoney.default_exchange = Money::Currency::Exchange.new(\n  rate_store: Money::Currency::RateStore::Memory.new(ttl: 1.hour)\n)\n```\n\nOr use your own store (database, file, cache, etc):\n\n```crystal\nMoney.default_exchange.rate_store = MyCustomStore.new\n```\n\nThe store can be used directly:\n\n```crystal\n# Add to the underlying store\nMoney.default_exchange.rate_store[\"USD\", \"CAD\"] = 0.9\n\n# Retrieve from the underlying store\nMoney.default_exchange.rate_store[\"USD\", \"CAD\"] # => 0.9\n```\n\nAs long as the store holds the exchange rates, `Money` will use them.\n\n```crystal\nMoney.new(10_00, \"USD\").exchange_to(\"CAD\")        # => Money(@amount=9.0 @currency=\"CAD\")\nMoney.new(10_00, \"CAD\") + Money.new(10_00, \"USD\") # => Money(@amount=19.0 @currency=\"CAD\")\n```\n\n### Exchange Rate Providers\n\nBy default, the exchange uses a `Null` provider, which returns `nil` for all rates.\n\n```crystal\nMoney.default_exchange = Money::Currency::Exchange.new(\n  rate_provider: Money::Currency::RateProvider::Null.new\n)\n```\n\nThere are multiple providers available under the `Money::Currency::RateProvider`\n[namespace](https://github.com/crystal-money/money/tree/master/src/money/currency/rate_provider)\nwhich can be used OOTB to fetch exchange rates from different sources.\n\nYou can choose one of them, roll your own, or combine them with the `Compound` provider:\n\n```crystal\nMoney.default_exchange.rate_provider =\n  Money::Currency::RateProvider::Compound.new([\n    Money::Currency::RateProvider::ECB.new,\n    Money::Currency::RateProvider::FloatRates.new,\n    Money::Currency::RateProvider::UniRateAPI.new(\n      api_key: \"valid-api-key\"\n    ),\n  ])\n```\n\n> [!TIP]\n> `Compound` rate provider takes an array of `Money::Currency::RateProvider` instances\n> which are used in order to fetch the exchange rate.\n\n### Disabling Currency Conversion\n\nIf you want to prevent automatic currency conversion, you can do so globally:\n\n```crystal\nMoney.disallow_currency_conversion!\n```\n\nOr use the block-scoped version:\n\n```crystal\nMoney.disallow_currency_conversion do\n  # ...\nend\n```\n\n## Rounding\n\nBy default, `Money` rounds to the nearest cent:\n\n```crystal\nMoney.new(2.34567, \"USD\").format # => \"$2.35\"\n```\n\nYou can change the rounding precision:\n\n```crystal\nMoney.new(2.34567, \"USD\").round(1).format # => \"$2.30\"\n```\n\nYou can change the rounding mode:\n\n```crystal\nMoney.new(2.34567, \"USD\").round(1, :to_positive).format # => \"$2.40\"\nMoney.new(2.34567, \"USD\").round(1, :to_negative).format # => \"$2.30\"\n```\n\nTo keep extra digits, enable infinite precision:\n\n```crystal\nMoney.infinite_precision = true\n\nMoney.new(2.34567, \"USD\").format                    # => \"$2.34567\"\nMoney.new(2.34567, \"USD\").round(4).format           # => \"$2.3457\"\nMoney.new(2.34567, \"USD\").round(4, :to_zero).format # => \"$2.3456\"\n\n# or\n\nMoney.with_rounding_mode(:to_zero) do\n  Money.new(2.34567, \"USD\").round(4).format         # => \"$2.3456\"\nend\n```\n\n### Nearest Cash Value\n\nIf you want to round to the nearest cash value, use `Money#round_to_nearest_cash_value`:\n\n```crystal\nMoney.new(10_07, \"CHF\").round_to_nearest_cash_value\n# => Money(@amount=10.05, @currency=\"CHF\")\n\nMoney.new(10_08, \"CHF\").round_to_nearest_cash_value\n# => Money(@amount=10.1, @currency=\"CHF\")\n```\n\n## JSON/YAML Serialization\n\n`Money`, `Money::Currency`, `Money::Currency::Exchange`, `Money::Currency::Rate`, `Money::Currency::RateStore` and `Money::Currency::RateProvider` implements `JSON::Serializable` and `YAML::Serializable`:\n\n### `Money`\n\n```crystal\nMoney.new(10_00, \"USD\").to_json # => \"{\\\"amount\\\":10.0,\\\"currency\\\":\\\"USD\\\"}\"\nMoney.new(10_00, \"USD\").to_yaml # => \"---\\namount: 10.0\\ncurrency: USD\\n\"\n\nMoney.from_json(%({\"amount\": 10.0, \"currency\": \"USD\"}))\n# => Money(@amount=10.0, @currency=\"USD\")\n\nMoney.from_yaml(\"{ amount: 10.0, currency: USD }\")\n# => Money(@amount=10.0, @currency=\"USD\")\n```\n\n### `Money::Currency`\n\n```crystal\n# Serialize existing `Money::Currency`\n\nMoney::Currency.find(\"USD\").to_json # => \"{\\\"code\\\":\\\"USD\\\", ...}\"\nMoney::Currency.find(\"USD\").to_yaml # => \"---\\ncode: USD\\n ...\"\n\n# Instantiate new `Money::Currency`\n\nMoney::Currency.from_json(%({\"code\": \"FOO\", ...})) # => #<Money::Currency @code=\"FOO\">\nMoney::Currency.from_yaml(\"{ code: FOO, ... }\")    # => #<Money::Currency @code=\"FOO\">\n\n# Lookup existing `Money::Currency`\n\nMoney::Currency.from_json(%(\"USD\")) # => #<Money::Currency @code=\"USD\">\nMoney::Currency.from_yaml(\"USD\")    # => #<Money::Currency @code=\"USD\">\n```\n\n### `Money::Currency::Exchange`\n\n```crystal\nexchange = Money::Currency::Exchange.from_yaml <<-YAML\n  rate_store:\n    name: File\n    options:\n      path: ~/.cache/money/currency-rates.json\n      ttl: 1 hour, 11 minutes\n\n  rate_provider:\n    name: Compound\n    options:\n      providers:\n      - name: ECB\n      - name: FloatRates\n      - name: UniRateAPI\n        options:\n          api_key: valid-api-key\n  YAML\n```\n\n### `Money::Currency::Rate`\n\n```crystal\nrate = Money::Currency::Rate.new(\n  Money::Currency.find(\"USD\"),\n  Money::Currency.find(\"EUR\"),\n  1.25.to_big_d,\n  Time.parse_utc(\"2025-05-22\", \"%F\"),\n)\n\nrate.to_json # => \"{\\\"base\\\":\\\"USD\\\",\\\"target\\\":\\\"EUR\\\",\\\"value\\\":1.25,\\\"updated_at\\\":\\\"2025-05-22T00:00:00.000Z\\\"}\"\nrate.to_yaml # => \"---\\nbase: USD\\ntarget: EUR\\nvalue: 1.25\\nupdated_at: 2025-05-22\\n\"\n```\n\n### `Money::Currency::RateStore`\n\nYou can use `.from_json` and `.from_yaml` methods to deserialize generic\nrate store instances providing the `name` (in _CamelCase_ or _snake_case_)\nand `options` - optional hash that's being passed to the store initializer.\n\n```crystal\nstore = Money::Currency::RateStore.from_yaml <<-YAML\n  name: File\n  options:\n    path: ~/.cache/money/currency-rates.json\n    ttl: 1 hour, 11 minutes\n  YAML\n\ntypeof(store) # => Money::Currency::RateStore\nstore.class   # => Money::Currency::RateStore::File\n```\n\nFor specific stores you pass the `options` directly:\n\n```crystal\nfile_store = Money::Currency::RateStore::File.from_yaml <<-YAML\n  path: ~/.cache/money/currency-rates.json\n  ttl: 1 hour, 11 minutes\n  YAML\n```\n\n#### Using with `JSON::Serializable` and `YAML::Serializable`\n\nIn order to (de)serialize generic `Money::Currency::RateStore` instances,\nyou need to add a `JSON/YAML::Field` annotation with a custom converter â€”\n`Money::Currency::RateStore::Converter`.\n\n```crystal\nclass FooWithGenericStore\n  include JSON::Serializable\n  include YAML::Serializable\n\n  @[JSON::Field(converter: Money::Currency::RateStore::Converter)]\n  @[YAML::Field(converter: Money::Currency::RateStore::Converter)]\n  property store : Money::Currency::RateStore\n\n  def initialize(@store)\n  end\nend\n\nfoo = FooWithGenericStore.from_yaml <<-YAML\n  store:\n    name: File\n    options:\n      path: ~/.cache/money/currency-rates.json\n      ttl: 1 hour, 11 minutes\n  YAML\n\nfoo.store.class # => Money::Currency::RateStore::File\n```\n\n### `Money::Currency::RateProvider`\n\nYou can use `.from_json` and `.from_yaml` methods to deserialize generic\nrate provider instances providing the `name` (in _CamelCase_ or _snake_case_)\nand `options` - optional hash that's being passed to the provider initializer.\n\n```crystal\nprovider = Money::Currency::RateProvider.from_yaml <<-YAML\n  name: Compound\n  options:\n    providers:\n    - name: ECB\n    - name: FloatRates\n    - name: UniRateAPI\n      options:\n        api_key: valid-api-key\n  YAML\n\ntypeof(provider) # => Money::Currency::RateProvider\nprovider.class   # => Money::Currency::RateProvider::Compound\n```\n\nFor specific providers you pass the `options` directly:\n\n```crystal\ncompound_provider = Money::Currency::RateProvider::Compound.from_yaml <<-YAML\n  providers:\n  - name: ECB\n  - name: FloatRates\n  YAML\n\ncompound_provider.providers << Money::Currency::RateProvider::UniRateAPI.from_yaml <<-YAML\n  api_key: valid-api-key\n  YAML\n\ncompound_provider.providers.size # => 3\n```\n\n#### Using with `JSON::Serializable` and `YAML::Serializable`\n\nIn order to (de)serialize generic `Money::Currency::RateProvider` instances,\nyou need to add a `JSON/YAML::Field` annotation with a custom converter â€”\n`Money::Currency::RateProvider::Converter`.\n\n```crystal\nclass FooWithGenericProvider\n  include JSON::Serializable\n  include YAML::Serializable\n\n  @[JSON::Field(converter: Money::Currency::RateProvider::Converter)]\n  @[YAML::Field(converter: Money::Currency::RateProvider::Converter)]\n  property provider : Money::Currency::RateProvider\n\n  def initialize(@provider)\n  end\nend\n\nfoo = FooWithGenericProvider.from_yaml <<-YAML\n  provider:\n    name: Compound\n    options:\n      providers:\n      - name: ECB\n      - name: FloatRates\n      - name: UniRateAPI\n        options:\n          api_key: valid-api-key\n  YAML\n\nfoo.provider.class # => Money::Currency::RateProvider::Compound\n```\n\n## Working with Fibers\n\nGlobal settings are being kept in a single, fiber-local `Money.context` object,\nand are not shared between fibers by default.\n\nUse this to `spawn` a fiber with the same settings as the current one:\n\n```crystal\nMoney.default_currency = \"EUR\"\n\nMoney.spawn_with_same_context do\n  Money.default_currency.code # => \"EUR\"\nend\n```\n\nAll of the `Money` APIs and classes are (or at least should be) fiber-safe.\n\n> [!CAUTION]\n> `Money.spawn_with_same_context` duplicates the `Money.context` instance,\n> by calling `#dup` on it and thus only the values are being duplicated,\n> references are shared.\n\n## Formatting\n\nThere are several formatting rules for when `Money#format` is called. For more info, check out the [formatting module source](https://github.com/crystal-money/money/blob/master/src/money/money/formatting.cr), or the [docs](https://crystal-money.github.io/money/Money/Formatting.html).\n\nHere are some examples:\n\n```crystal\nmoney = Money.new(1_23, \"USD\")    # => Money(@amount=1.23 @currency=\"USD\")\nmoney.format                      # => \"$1.23\"\nmoney.format(sign_positive: true) # => \"+$1.23\"\nmoney.format(no_cents: true)      # => \"$1\"\nmoney.format(disambiguate: true)  # => \"US$1.23\"\nmoney.to_s                        # => \"1.23 USD\"\n```\n\nIf you want to format money according to the EU's [Rules for expressing monetary units](https://style-guide.europa.eu/en/content/-/isg/topic?identifier=7.3.3-rules-for-expressing-monetary-units#id370303__id370303_PositionISO):\n\n```crystal\nmoney = Money.new(1_23, \"GBP\")               # => Money(@amount=1.23 @currency=\"GBP\")\nmoney.format(\"%{currency} %{sign}%{amount}\") # => \"GBP 1.23\"\n```\n\n## Parsing\n\nYou can parse a string with an amount and currency code or symbol:\n\n```crystal\nMoney.parse(\"$12.34\")    # => Money(@amount=12.34, @currency=\"USD\")\nMoney.parse(\"12.34 USD\") # => Money(@amount=12.34, @currency=\"USD\")\n```\n\n## Contributors\n\n- [Sija](https://github.com/Sija) Sijawusz Pur Rahnama (creator & maintainer)\n","program":{"html_id":"money/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"money","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"money/Fiber","path":"Fiber.html","kind":"class","full_name":"Fiber","name":"Fiber","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/core_ext/fiber.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/fiber.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"doc":"A `Fiber` is a light-weight execution unit managed by the Crystal runtime.\n\nIt is conceptually similar to an operating system thread but with less\noverhead and completely internal to the Crystal process. The runtime includes\na scheduler which schedules execution of fibers.\n\nA `Fiber` has a stack size of `8 MiB` which is usually also assigned\nto an operating system thread. But only `4KiB` are actually allocated at first\nso the memory footprint is very small.\n\nCommunication between fibers is usually passed through `Channel`.\n\n## Cooperative\n\nFibers are cooperative. That means execution can only be drawn from a fiber\nwhen it offers it. It can't be interrupted in its execution at random.\nIn order to make concurrency work, fibers must make sure to occasionally\nprovide hooks for the scheduler to swap in other fibers.\nIO operations like reading from a file descriptor are natural implementations\nfor this and the developer does not need to take further action on that. When\nIO access can't be served immediately by a buffer, the fiber will\nautomatically wait and yield execution. When IO is ready it's going to be\nresumed through the event loop.\n\nWhen a computation-intensive task has none or only rare IO operations, a fiber\nshould explicitly offer to yield execution from time to time using\n`Fiber.yield` to break up tight loops. The frequency of this call depends on\nthe application and concurrency model.\n\n## Event loop\n\nThe event loop is responsible for keeping track of sleeping fibers waiting for\nnotifications that IO is ready or a timeout reached. When a fiber can be woken,\nthe event loop enqueues it in the scheduler","summary":"<p>A <code><a href=\"Fiber.html\">Fiber</a></code> is a light-weight execution unit managed by the Crystal runtime.</p>","instance_methods":[{"html_id":"money_context:Money::Context-instance-method","name":"money_context","doc":"`Money::Context` object holding global settings for `Money` objects.","summary":"<p><code><a href=\"Money/Context.html\">Money::Context</a></code> object holding global settings for <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"location":{"filename":"src/core_ext/fiber.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/fiber.cr#L3"},"def":{"name":"money_context","return_type":"Money::Context","visibility":"Public","body":"if (__temp_111 = @money_context).nil?\n  @money_context = (Money::Context.new)\nelse\n  __temp_111\nend"},"external_var":false},{"html_id":"money_context=(money_context:Money::Context)-instance-method","name":"money_context=","doc":"`Money::Context` object holding global settings for `Money` objects.","summary":"<p><code><a href=\"Money/Context.html\">Money::Context</a></code> object holding global settings for <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"money_context","external_name":"money_context","restriction":"Money::Context"}],"args_string":"(money_context : Money::Context)","args_html":"(money_context : <a href=\"Money/Context.html\">Money::Context</a>)","location":{"filename":"src/core_ext/fiber.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/fiber.cr#L3"},"def":{"name":"money_context=","args":[{"name":"money_context","external_name":"money_context","restriction":"Money::Context"}],"visibility":"Public","body":"@money_context = money_context"},"external_var":false}]},{"html_id":"money/Money","path":"Money.html","kind":"struct","full_name":"Money","name":"Money","abstract":false,"superclass":{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"money/Money/Rounding","kind":"module","full_name":"Money::Rounding","name":"Rounding"},{"html_id":"money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"},{"html_id":"money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money.cr#L9"},{"filename":"src/money/context.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L1"},{"filename":"src/money/currency.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L12"},{"filename":"src/money/error.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L1"},{"filename":"src/money/money.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L17"},{"filename":"src/money/money/allocate.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/allocate.cr#L1"},{"filename":"src/money/money/arithmetic.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L1"},{"filename":"src/money/money/casting.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/casting.cr#L1"},{"filename":"src/money/money/constructors.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L1"},{"filename":"src/money/money/exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/exchange.cr#L1"},{"filename":"src/money/money/formatting.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/formatting.cr#L3"},{"filename":"src/money/money/json.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/json.cr#L5"},{"filename":"src/money/money/parse.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/parse.cr#L1"},{"filename":"src/money/money/rounding.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L1"},{"filename":"src/money/money/yaml.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/yaml.cr#L5"},{"filename":"src/money/registry.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry.cr#L1"},{"filename":"src/money/registry/converter/json.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/json.cr#L3"},{"filename":"src/money/registry/converter/yaml.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/yaml.cr#L3"},{"filename":"src/money/version.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/version.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version \\\"/home/runner/work/money/money/src/money\\\"`).chomp.stringify }}"}],"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"},{"html_id":"money/Money/Rounding","kind":"module","full_name":"Money::Rounding","name":"Rounding"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"money/Money/Constructors","kind":"module","full_name":"Money::Constructors","name":"Constructors"},{"html_id":"money/Money/Context/Delegators","kind":"module","full_name":"Money::Context::Delegators","name":"Delegators"},{"html_id":"money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"}],"doc":"\"Money is any object or record that is generally accepted as payment for\ngoods and services and repayment of debts in a given socio-economic context\nor country.\" - [Wikipedia](https://en.wikipedia.org/wiki/Money)\n\nAn instance of `Money` represents an amount of a specific currency.\n\n`Money` is a value object and should be treated as immutable.","summary":"<p>&quot;Money is any object or record that is generally accepted as payment for goods and services and repayment of debts in a given socio-economic context or country.&quot; - <a href=\"https://en.wikipedia.org/wiki/Money\">Wikipedia</a></p>","class_methods":[{"html_id":"configure(&:Money::Context->):Nil-class-method","name":"configure","doc":"Yields the given block with the current `Money.context` as an argument.\n\n```\nMoney.configure do |context|\n  context.infinite_precision = true\n  context.default_currency = \"EUR\"\nend\n```","summary":"<p>Yields the given block with the current <code>Money.context</code> as an argument.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L41"},"def":{"name":"configure","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Money::Context ->)"},"return_type":"Nil","visibility":"Public","body":"yield context"},"external_var":false},{"html_id":"disallow_currency_conversion!-class-method","name":"disallow_currency_conversion!","doc":"Sets the default exchange to be a `Currency::Exchange::SingleCurrency` exchange that raises\non currency exchange. Useful when apps operate in a single currency at a time.","summary":"<p>Sets the default exchange to be a <code><a href=\"Money/Currency/Exchange/SingleCurrency.html\">Currency::Exchange::SingleCurrency</a></code> exchange that raises on currency exchange.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":127,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L127"},"def":{"name":"disallow_currency_conversion!","visibility":"Public","body":"self.default_exchange = Currency::Exchange::SingleCurrency.new"},"external_var":false},{"html_id":"spawn_with_same_context(**options,&block:->):Nil-class-method","name":"spawn_with_same_context","doc":"Spawns a new fiber with the `Money::Context` copied from the current fiber.\n\n```\nMoney.default_currency.code # => \"USD\"\nMoney.default_currency = \"PLN\"\n\nspawn do\n  Money.default_currency.code # => \"USD\"\nend\n\n# vs\n\nMoney.spawn_with_same_context do\n  Money.default_currency.code # => \"PLN\"\nend\n```\n\nNOTE: References to the `#default_{currency, exchange, rate_store}` properties\nwill be shared between the current fiber and the spawned fiber.","summary":"<p>Spawns a new fiber with the <code><a href=\"Money/Context.html\">Money::Context</a></code> copied from the current fiber.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":64,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L64"},"def":{"name":"spawn_with_same_context","double_splat":{"name":"options","external_name":"options","restriction":""},"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"(->)"},"return_type":"Nil","visibility":"Public","body":"current_context = context.dup\nwrapper = -> do\n  self.context = current_context\n  block.call\nend\nspawn(*Tuple.new, **options, &wrapper)\n"},"external_var":false},{"html_id":"with_default_exchange(exchange:Currency::Exchange,&)-class-method","name":"with_default_exchange","doc":"Sets the given currency *exchange* within the lifetime of the given block.\n\nSee also `Money.default_exchange`.","summary":"<p>Sets the given currency <em>exchange</em> within the lifetime of the given block.</p>","abstract":false,"args":[{"name":"exchange","external_name":"exchange","restriction":"Currency::Exchange"}],"args_string":"(exchange : Currency::Exchange, &)","args_html":"(exchange : <a href=\"Money/Currency/Exchange.html\">Currency::Exchange</a>, &)","location":{"filename":"src/money/money.cr","line_number":102,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L102"},"def":{"name":"with_default_exchange","args":[{"name":"exchange","external_name":"exchange","restriction":"Currency::Exchange"}],"yields":0,"block_arity":0,"visibility":"Public","body":"prev_default_exchange = default_exchange\nself.default_exchange = exchange\nbegin\n  yield\nensure\n  self.default_exchange = prev_default_exchange\nend\n"},"external_var":false},{"html_id":"with_infinite_precision(enabled:Bool=true,&)-class-method","name":"with_infinite_precision","doc":"Sets the given infinite precision value within the lifetime of the given block.\n\nSee also `Money.infinite_precision?`.","summary":"<p>Sets the given infinite precision value within the lifetime of the given block.</p>","abstract":false,"args":[{"name":"enabled","default_value":"true","external_name":"enabled","restriction":"Bool"}],"args_string":"(enabled : Bool = true, &)","args_html":"(enabled : Bool = <span class=\"n\">true</span>, &)","location":{"filename":"src/money/money.cr","line_number":76,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L76"},"def":{"name":"with_infinite_precision","args":[{"name":"enabled","default_value":"true","external_name":"enabled","restriction":"Bool"}],"yields":0,"block_arity":0,"visibility":"Public","body":"prev_infinite_precision = infinite_precision?\nself.infinite_precision = enabled\nbegin\n  yield\nensure\n  self.infinite_precision = prev_infinite_precision\nend\n"},"external_var":false},{"html_id":"with_rounding_mode(mode:Number::RoundingMode,&)-class-method","name":"with_rounding_mode","doc":"Sets the given rounding *mode* within the lifetime of the given block.\n\nSee also `Money.rounding_mode`.","summary":"<p>Sets the given rounding <em>mode</em> within the lifetime of the given block.</p>","abstract":false,"args":[{"name":"mode","external_name":"mode","restriction":"Number::RoundingMode"}],"args_string":"(mode : Number::RoundingMode, &)","args_html":"(mode : Number::RoundingMode, &)","location":{"filename":"src/money/money.cr","line_number":89,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L89"},"def":{"name":"with_rounding_mode","args":[{"name":"mode","external_name":"mode","restriction":"Number::RoundingMode"}],"yields":0,"block_arity":0,"visibility":"Public","body":"prev_rounding_mode = rounding_mode\nself.rounding_mode = mode\nbegin\n  yield\nensure\n  self.rounding_mode = prev_rounding_mode\nend\n"},"external_var":false},{"html_id":"without_currency_conversion(&)-class-method","name":"without_currency_conversion","doc":"Disallows currency conversion within the lifetime of the given block.\n\nSee also `Money.disallow_currency_conversion!`.","summary":"<p>Disallows currency conversion within the lifetime of the given block.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":115,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L115"},"def":{"name":"without_currency_conversion","yields":0,"block_arity":0,"visibility":"Public","body":"prev_exchange = default_exchange\ndisallow_currency_conversion!\nbegin\n  yield\nensure\n  self.default_exchange = prev_exchange\nend\n"},"external_var":false}],"constructors":[{"html_id":"new(value:Int=0,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of *value* given as an fractional amount\nof the given *currency*.\n\n```\nMoney.new(0, \"USD\")    # => Money(@amount=0.0 @currency=\"USD\")\nMoney.new(1_50, \"USD\") # => Money(@amount=1.5 @currency=\"USD\")\n```\n\nSee also `Money.from_fractional`.","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of <em>value</em> given as an fractional amount of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"value","default_value":"0","external_name":"value","restriction":"Int"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(value : Int = 0, currency = Money.default_currency)","args_html":"(value : Int = <span class=\"n\">0</span>, currency = <span class=\"t\">Money</span>.default_currency)","location":{"filename":"src/money/money.cr","line_number":140,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L140"},"def":{"name":"new","args":[{"name":"value","default_value":"0","external_name":"value","restriction":"Int"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"visibility":"Public","body":"new(fractional: value, currency: currency)"},"external_var":false},{"html_id":"new(value:Number,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of *value* given as an whole amount\nof the given *currency*.\n\n```\nMoney.new(1.5, \"USD\")          # => Money(@amount=1.5 @currency=\"USD\")\nMoney.new(1.5.to_big_d, \"USD\") # => Money(@amount=1.5 @currency=\"USD\")\n```\n\nWARNING: Floating points cannot guarantee precision. Therefore, they\nshould only be used when you no longer need to represent currency or\nworking with another system that requires floats.\n\nSee also `Money.from_amount`.","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of <em>value</em> given as an whole amount of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(value : Number, currency = Money.default_currency)","args_html":"(value : <a href=\"Number.html\">Number</a>, currency = <span class=\"t\">Money</span>.default_currency)","location":{"filename":"src/money/money.cr","line_number":160,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L160"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"visibility":"Public","body":"new(amount: value, currency: currency)"},"external_var":false},{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/money/yaml.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/yaml.cr#L8"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\n  parse(node.value)\nelse\n  previous_def(ctx, node)\nend"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/money/json.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/json.cr#L8"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"if pull.kind.string?\n  parse(pull.read_string)\nelse\n  previous_def(pull)\nend"},"external_var":false},{"html_id":"new(*,amount:Number,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of value given as an *amount*\nof the given *currency*.\n\n```\nMoney.new(amount: 13.37) # => Money(@amount=13.37)\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given as an <em>amount</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"amount","external_name":"amount","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(*, amount : Number, currency = Money.default_currency)","args_html":"(*, amount : <a href=\"Number.html\">Number</a>, currency = <span class=\"t\">Money</span>.default_currency)","location":{"filename":"src/money/money.cr","line_number":181,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L181"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"amount","external_name":"amount","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(amount: amount, currency: currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,fractional:Number,currency=Money.default_currency)-class-method","name":"new","doc":"Creates a new `Money` object of value given as a *fractional*\nof the given *currency*.\n\n```\nMoney.new(fractional: 13_37) # => Money(@amount=13.37)\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given as a <em>fractional</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fractional","external_name":"fractional","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(*, fractional : Number, currency = Money.default_currency)","args_html":"(*, fractional : <a href=\"Number.html\">Number</a>, currency = <span class=\"t\">Money</span>.default_currency)","location":{"filename":"src/money/money.cr","line_number":192,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L192"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"fractional","external_name":"fractional","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(fractional: fractional, currency: currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/money/money/json.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/json.cr#L6"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","location":{"filename":"src/money/money/yaml.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/yaml.cr#L6"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Money):Int32-instance-method","name":"<=>","doc":"Compares two `Money` objects.\n\nReturns `0` if the two objects are equal,\na negative number if this object is considered less than *other* or\na positive number if this object is considered greater than *other*.\n\nNOTE: Two `Money` objects with `0` amount are considered equal,\nregardless of their currency.\n\nNOTE: Performs currency conversion if necessary.","summary":"<p>Compares two <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Int32","args_html":"(other : <a href=\"Money.html\">Money</a>) : Int32","location":{"filename":"src/money/money.cr","line_number":218,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L218"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Int32","visibility":"Public","body":"if zero? && other.zero?\n  return 0\nend\n\nwith_same_currency(other) do |converted_other|\n  amount <=> converted_other.amount\nend\n"},"external_var":false},{"html_id":"==(other:self)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if amount == other.amount\nelse\n  return false\nend\n\nif currency == other.currency\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"=~(other:Money):Bool-instance-method","name":"=~","doc":"Loosely compares two `Money` objects.\n\nReturns `true` if `self` is equal to *other*,\n`false` otherwise.\n\nNOTE: Two `Money` objects with `0` amount are considered equal,\nregardless of their currency.\n\nNOTE: Performs currency conversion if necessary.","summary":"<p>Loosely compares two <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Bool","args_html":"(other : <a href=\"Money.html\">Money</a>) : Bool","location":{"filename":"src/money/money.cr","line_number":235,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L235"},"def":{"name":"=~","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Bool","visibility":"Public","body":"(self <=> other).zero?"},"external_var":false},{"html_id":"amount:BigDecimal-instance-method","name":"amount","doc":"Returns the numerical value of the money.\n\n```\nMoney.new(1_00, \"USD\").amount # => 1.0\n```\n\nSee also `#fractional`, `Money.infinite_precision?` and `Money.rounding_mode`.","summary":"<p>Returns the numerical value of the money.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":268,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L268"},"def":{"name":"amount","return_type":"BigDecimal","visibility":"Public","body":"if Money.infinite_precision?\n  @amount\nelse\n  @amount.round(currency.exponent, mode: Money.rounding_mode)\nend"},"external_var":false},{"html_id":"cents:BigDecimal-instance-method","name":"cents","doc":"Alias of `#fractional`.","summary":"<p>Alias of <code><a href=\"Money.html#fractional%3ABigDecimal-instance-method\">#fractional</a></code>.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":295,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L295"},"def":{"name":"cents","return_type":"BigDecimal","visibility":"Public","body":"fractional"},"external_var":false},{"html_id":"currency:Currency-instance-method","name":"currency","abstract":false,"location":{"filename":"src/money/money.cr","line_number":173,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L173"},"def":{"name":"currency","return_type":"Currency","visibility":"Public","body":"@currency"},"external_var":false},{"html_id":"fractional:BigDecimal-instance-method","name":"fractional","doc":"The value of the monetary amount represented in the fractional or subunit\nof the currency.\n\nFor example, in the US dollar currency the fractional unit is cents, and\nthere are 100 cents in one US dollar. So given the `Money` representation of\none US dollar, the fractional interpretation is 100.\n\nAnother example is that of the Kuwaiti dinar. In this case the fractional\nunit is the fils and there 1000 fils to one Kuwaiti dinar. So given the\n`Money` representation of one Kuwaiti dinar, the fractional interpretation\nis 1000.\n\nSee also `Money.infinite_precision?` and `Money.rounding_mode`.","summary":"<p>The value of the monetary amount represented in the fractional or subunit of the currency.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":289,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L289"},"def":{"name":"fractional","return_type":"BigDecimal","visibility":"Public","body":"amount * currency.subunit_to_unit"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = amount.hash(hasher)\n\nhasher = currency.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"succ:Money-instance-method","name":"succ","doc":"Returns a new `Money` instance with incremented `fractional` value.\n\n```\nMoney.new(1_00, \"USD\").succ # => Money(@amount=1.01 @currency=\"USD\")\nMoney.new(1, \"JPY\").succ    # => Money(@amount=2.0 @currency=\"JPY\")\n```","summary":"<p>Returns a new <code><a href=\"Money.html\">Money</a></code> instance with incremented <code><a href=\"Money.html#fractional%3ABigDecimal-instance-method\">#fractional</a></code> value.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":245,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L245"},"def":{"name":"succ","return_type":"Money","visibility":"Public","body":"copy_with(fractional: fractional + 1)"},"external_var":false},{"html_id":"with_currency(new_currency:String|Symbol|Currency):Money-instance-method","name":"with_currency","doc":"Returns a new `Money` instance in a given currency - if it's different\nfrom the current `#currency` - or `self` otherwise, leaving the amount\nintact and **not** performing currency conversion.","summary":"<p>Returns a new <code><a href=\"Money.html\">Money</a></code> instance in a given currency - if it's different from the current <code><a href=\"Money.html#currency%3ACurrency-instance-method\">#currency</a></code> - or <code>self</code> otherwise, leaving the amount intact and <strong>not</strong> performing currency conversion.</p>","abstract":false,"args":[{"name":"new_currency","external_name":"new_currency","restriction":"String | Symbol | Currency"}],"args_string":"(new_currency : String | Symbol | Currency) : Money","args_html":"(new_currency : <a href=\"String.html\">String</a> | Symbol | <a href=\"Money/Currency.html\">Currency</a>) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/money/money.cr","line_number":252,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money.cr#L252"},"def":{"name":"with_currency","args":[{"name":"new_currency","external_name":"new_currency","restriction":"String | Symbol | Currency"}],"return_type":"Money","visibility":"Public","body":"new_currency = Currency[new_currency]\nif new_currency == currency\n  self\nelse\n  copy_with(currency: new_currency, amount: @amount)\nend\n"},"external_var":false}],"types":[{"html_id":"money/Money/AggregateError","path":"Money/AggregateError.html","kind":"class","full_name":"Money::AggregateError","name":"AggregateError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L7"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Exception class for aggregating individual errors.","summary":"<p>Exception class for aggregating individual errors.</p>","constructors":[{"html_id":"new(message:String,errors:Array(Exception)=[]ofException)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"errors","default_value":"[] of Exception","external_name":"errors","restriction":"::Array(::Exception)"}],"args_string":"(message : String, errors : Array(Exception) = [] of Exception)","args_html":"(message : <a href=\"../String.html\">String</a>, errors : Array(Exception) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Exception</span>)","location":{"filename":"src/money/error.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L10"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"errors","default_value":"[] of Exception","external_name":"errors","restriction":"::Array(::Exception)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(errors:Array(Exception),message:String=\"AggregateError\")-class-method","name":"new","abstract":false,"args":[{"name":"errors","external_name":"errors","restriction":"::Array(::Exception)"},{"name":"message","default_value":"\"Aggregate Error\"","external_name":"message","restriction":"String"}],"args_string":"(errors : Array(Exception), message : String = \"Aggregate Error\")","args_html":"(errors : Array(Exception), message : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;Aggregate Error&quot;</span>)","location":{"filename":"src/money/error.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L14"},"def":{"name":"new","args":[{"name":"errors","external_name":"errors","restriction":"::Array(::Exception)"},{"name":"message","default_value":"\"Aggregate Error\"","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(errors, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"errors:Array(Exception)-instance-method","name":"errors","abstract":false,"location":{"filename":"src/money/error.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L8"},"def":{"name":"errors","return_type":"Array(Exception)","visibility":"Public","body":"@errors"},"external_var":false},{"html_id":"inspect_with_backtrace(io:IO):Nil-instance-method","name":"inspect_with_backtrace","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/error.cr","line_number":29,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L29"},"def":{"name":"inspect_with_backtrace","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"super(io)\nif errors.empty?\n  return\nend\n\nio << \"\\n\"\nerrors.each_with_index do |error, index|\n  if index.zero?\n  else\n    io << \"\\n\"\n  end\n  error.inspect_with_backtrace(io)\nend\n"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/error.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L18"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"super(io)\nif errors.empty?\n  return\nend\n\nio << \": \"\nerrors.each_with_index do |error, index|\n  if index.zero?\n  else\n    io << \", \"\n  end\n  error.to_s(io)\nend\n"},"external_var":false}]},{"html_id":"money/Money/Allocate","path":"Money/Allocate.html","kind":"module","full_name":"Money::Allocate","name":"Allocate","abstract":false,"locations":[{"filename":"src/money/money/allocate.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/allocate.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"allocate(parts:Enumerable(Number)):Array(Money)-instance-method","name":"allocate","doc":"Splits a given amount in parts without losing pennies.\n\nThe left-over pennies will be distributed round-robin amongst the parties.\nThis means that parts listed first will likely receive more pennies than\nones listed later.\n\nPass `{2, 1, 1}` as input to give twice as much to _part1_ as _part2_ or _part3_\nwhich results in **50%** of the cash assigned to _part1_, **25%** to _part2_,\nand **25%** to _part3_.\n\nThe results should always add up to the original amount.\n\n```\nMoney.new(5, \"USD\").allocate(3, 7).map(&.cents)      # => [2, 3]\nMoney.new(100, \"USD\").allocate(1, 1, 1).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits a given amount in parts without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Enumerable(Number)"}],"args_string":"(parts : Enumerable(Number)) : Array(Money)","args_html":"(parts : Enumerable(<a href=\"../Number.html\">Number</a>)) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":53,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/allocate.cr#L53"},"def":{"name":"allocate","args":[{"name":"parts","external_name":"parts","restriction":"Enumerable(Number)"}],"return_type":"Array(Money)","visibility":"Public","body":"(Money::Allocate\n  .generate(fractional, parts, whole_amounts: !Money.infinite_precision?))\n  .map do |amount| copy_with(fractional: amount) end"},"external_var":false},{"html_id":"allocate(*parts:Number):Array(Money)-instance-method","name":"allocate","doc":"Splits a given amount in parts without losing pennies.\n\nThe left-over pennies will be distributed round-robin amongst the parties.\nThis means that parts listed first will likely receive more pennies than\nones listed later.\n\nPass `{2, 1, 1}` as input to give twice as much to _part1_ as _part2_ or _part3_\nwhich results in **50%** of the cash assigned to _part1_, **25%** to _part2_,\nand **25%** to _part3_.\n\nThe results should always add up to the original amount.\n\n```\nMoney.new(5, \"USD\").allocate(3, 7).map(&.cents)      # => [2, 3]\nMoney.new(100, \"USD\").allocate(1, 1, 1).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits a given amount in parts without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Number"}],"args_string":"(*parts : Number) : Array(Money)","args_html":"(*parts : <a href=\"../Number.html\">Number</a>) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":60,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/allocate.cr#L60"},"def":{"name":"allocate","args":[{"name":"parts","external_name":"parts","restriction":"Number"}],"splat_index":0,"return_type":"Array(Money)","visibility":"Public","body":"allocate(parts)"},"external_var":false},{"html_id":"split(parts:Int):Array(Money)-instance-method","name":"split","doc":"Splits money evenly amongst parties without losing pennies.\n\n```\nMoney.new(100, \"USD\").split(2).map(&.cents) # => [50, 50]\nMoney.new(100, \"USD\").split(3).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits money evenly amongst parties without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Int"}],"args_string":"(parts : Int) : Array(Money)","args_html":"(parts : Int) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":70,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/allocate.cr#L70"},"def":{"name":"split","args":[{"name":"parts","external_name":"parts","restriction":"Int"}],"return_type":"Array(Money)","visibility":"Public","body":"if parts.positive?\nelse\n  raise(ArgumentError.new(\"Need at least one part\"))\nend\nallocate(Array.new(parts, 1))\n"},"external_var":false}]},{"html_id":"money/Money/Arithmetic","path":"Money/Arithmetic.html","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic","abstract":false,"locations":[{"filename":"src/money/money/arithmetic.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"%(other:Number|Money):Money-instance-method","name":"%","doc":"Alias of `#modulo`.","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"args_string":"(other : Number | Money) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a> | <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":175,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L175"},"def":{"name":"%","args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"return_type":"Money","visibility":"Public","body":"modulo(other)"},"external_var":false},{"html_id":"*(other:Number):Money-instance-method","name":"*","doc":"Multiplies the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(1_00) * 2 # => Money(@amount=2.0)\n```","summary":"<p>Multiplies the monetary value with the given <em>other</em> <code><a href=\"../Number.html\">Number</a></code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":113,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L113"},"def":{"name":"*","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: amount * other)"},"external_var":false},{"html_id":"+(other:Money):Money-instance-method","name":"+","doc":"Returns a new `Money` object containing the sum of the two\noperands' monetary values.\n\n```\nMoney.new(1_00) + Money.new(1_00) # => Money(@amount=2.0)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the sum of the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","args_html":"(other : <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":85,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L85"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Money","visibility":"Public","body":"if other.zero?\n  return self\nend\n\nwith_same_currency(other) do |converted_other|\n  copy_with(amount: amount + converted_other.amount)\nend\n"},"external_var":false},{"html_id":"+:Money-instance-method","name":"+","doc":"Alias of `#abs`.\n\n```\n+Money.new(-1_00) # => Money(@amount=1.0)\n```","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#abs%3AMoney-instance-method\">#abs</a></code>.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":66,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L66"},"def":{"name":"+","return_type":"Money","visibility":"Public","body":"abs"},"external_var":false},{"html_id":"-(other:Money):Money-instance-method","name":"-","doc":"Returns a new `Money` object containing the difference between the two\noperands' monetary values.\n\n```\nMoney.new(1_00) - Money.new(99) # => Money(@amount=0.01)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the difference between the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","args_html":"(other : <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":99,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L99"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Money","visibility":"Public","body":"if other.zero?\n  return self\nend\n\nwith_same_currency(other) do |converted_other|\n  copy_with(amount: amount - converted_other.amount)\nend\n"},"external_var":false},{"html_id":"-:Money-instance-method","name":"-","doc":"Returns a new `Money` object with changed polarity.\n\n```\n-Money.new(1_00) # => Money(@amount=-1.0)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object with changed polarity.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":75,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L75"},"def":{"name":"-","return_type":"Money","visibility":"Public","body":"copy_with(amount: -amount)"},"external_var":false},{"html_id":"/(other:Number):Money-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(1_00) / 10 # => Money(@amount=0.1)\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code><a href=\"../Number.html\">Number</a></code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":123,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L123"},"def":{"name":"/","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: amount / other)"},"external_var":false},{"html_id":"/(other:Money):BigDecimal-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Money` object and\nreturns a ratio.\n\n```\nMoney.new(1_00) / Money.new(10) # => 10.0\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object and returns a ratio.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : BigDecimal","args_html":"(other : <a href=\"../Money.html\">Money</a>) : BigDecimal","location":{"filename":"src/money/money/arithmetic.cr","line_number":133,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L133"},"def":{"name":"/","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"BigDecimal","visibility":"Public","body":"with_same_currency(other) do |converted_other|\n  amount / converted_other.amount\nend"},"external_var":false},{"html_id":"abs:Money-instance-method","name":"abs","doc":"Returns absolute value of `self` as a new `Money` object.\n\n```\nMoney.new(-1_00).abs # => Money(@amount=1.0)\n```","summary":"<p>Returns absolute value of <code>self</code> as a new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L56"},"def":{"name":"abs","return_type":"Money","visibility":"Public","body":"copy_with(amount: amount.abs)"},"external_var":false},{"html_id":"divmod(other:Money):Tuple(BigDecimal,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(1_00).divmod(9)            # => {Money(@amount=0.11), Money(@amount=0.01)}\nMoney.new(1_00).divmod(Money.new(9)) # => {11.0, Money(@amount=0.01)}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code><a href=\"../Number.html\">Number</a></code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Tuple(BigDecimal, Money)","args_html":"(other : <a href=\"../Money.html\">Money</a>) : Tuple(BigDecimal, <a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/arithmetic.cr","line_number":146,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L146"},"def":{"name":"divmod","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"::Tuple(BigDecimal, Money)","visibility":"Public","body":"with_same_currency(other) do |converted_other|\n  quotient, remainder = fractional.divmod(converted_other.fractional)\n\n  {quotient, copy_with(fractional: remainder)}\nend"},"external_var":false},{"html_id":"divmod(other:Number):Tuple(Money,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(1_00).divmod(9)            # => {Money(@amount=0.11), Money(@amount=0.01)}\nMoney.new(1_00).divmod(Money.new(9)) # => {11.0, Money(@amount=0.01)}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code><a href=\"../Number.html\">Number</a></code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Tuple(Money, Money)","args_html":"(other : <a href=\"../Number.html\">Number</a>) : Tuple(<a href=\"../Money.html\">Money</a>, <a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/arithmetic.cr","line_number":156,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L156"},"def":{"name":"divmod","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"::Tuple(Money, Money)","visibility":"Public","body":"quotient, remainder = fractional.divmod(other.to_big_d)\n\n{copy_with(fractional: quotient), copy_with(fractional: remainder)}\n"},"external_var":false},{"html_id":"modulo(other:Number|Money):Money-instance-method","name":"modulo","doc":"Equivalent to `#divmod(other)[1]`.\n\n```\nMoney.new(1_00).modulo(9)            # => Money(@amount=0.01)\nMoney.new(1_00).modulo(Money.new(9)) # => Money(@amount=0.01)\n```","summary":"<p>Equivalent to <code><a href=\"../Money/Arithmetic.html#divmod%28other%3AMoney%29%3ATuple%28BigDecimal%2CMoney%29-instance-method\">#divmod(other)</a>[1]</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"args_string":"(other : Number | Money) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a> | <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":169,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L169"},"def":{"name":"modulo","args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"return_type":"Money","visibility":"Public","body":"(divmod(other))[1]"},"external_var":false},{"html_id":"negative?-instance-method","name":"negative?","doc":"Returns `true` if the money amount is less than 0, `false` otherwise.\n\n```\nMoney.new(-100).negative? # => true\nMoney.new(0).negative?    # => false\nMoney.new(100).negative?  # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is less than 0, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":36,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L36"},"def":{"name":"negative?","visibility":"Public","body":"amount.negative?"},"external_var":false},{"html_id":"percentage(value:Number):Money-instance-method","name":"percentage","doc":"Returns a new `Money` object containing the percentage of the\nmonetary value.\n\n```\nMoney.new(1_00).percentage(10) # => Money(@amount=0.1)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the percentage of the monetary value.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"}],"args_string":"(value : Number) : Money","args_html":"(value : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":198,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L198"},"def":{"name":"percentage","args":[{"name":"value","external_name":"value","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"self * (value / 100)"},"external_var":false},{"html_id":"positive?-instance-method","name":"positive?","doc":"Returns `true` if the money amount is greater than 0, `false` otherwise.\n\n```\nMoney.new(-100).positive? # => false\nMoney.new(0).positive?    # => false\nMoney.new(100).positive?  # => true\n```","summary":"<p>Returns <code>true</code> if the money amount is greater than 0, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":25,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L25"},"def":{"name":"positive?","visibility":"Public","body":"amount.positive?"},"external_var":false},{"html_id":"remainder(other:Number):Money-instance-method","name":"remainder","doc":"If different signs `#modulo(other) - other`, otherwise `#modulo(other)`.\n\n```\nMoney.new(1_00).remainder(9) # => Money(@amount=0.01)\n```","summary":"<p>If different signs <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo(other)</a> - other</code>, otherwise <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo(other)</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":184,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L184"},"def":{"name":"remainder","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"if (negative? && other.negative?) || (positive? && other.positive?)\n  modulo(other)\nelse\n  (modulo(other)) - copy_with(fractional: other)\nend"},"external_var":false},{"html_id":"sign:Int32-instance-method","name":"sign","doc":"Returns the sign of the money amount.\n\n- `-1` if the money amount is negative\n- `0` if the money amount is zero\n- `1` if the money amount is positive\n\n```\nMoney.new(-100).sign # => -1\nMoney.new(0).sign    # => 0\nMoney.new(100).sign  # => 1\n```","summary":"<p>Returns the sign of the money amount.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L14"},"def":{"name":"sign","return_type":"Int32","visibility":"Public","body":"amount.sign"},"external_var":false},{"html_id":"zero?-instance-method","name":"zero?","doc":"Returns `true` if the money amount is zero.\n\n```\nMoney.new(-100).zero? # => false\nMoney.new(0).zero?    # => true\nMoney.new(100).zero?  # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is zero.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":47,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/arithmetic.cr#L47"},"def":{"name":"zero?","visibility":"Public","body":"amount.zero?"},"external_var":false}]},{"html_id":"money/Money/Casting","path":"Money/Casting.html","kind":"module","full_name":"Money::Casting","name":"Casting","abstract":false,"locations":[{"filename":"src/money/money/casting.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/casting.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"to_big_d:BigDecimal-instance-method","name":"to_big_d","doc":"Returns the amount of money as a `BigDecimal`.\n\n```\nMoney.us_dollar(1_00).to_big_d # => BigDecimal.new(\"1.0\")\n```","summary":"<p>Returns the amount of money as a <code>BigDecimal</code>.</p>","abstract":false,"location":{"filename":"src/money/money/casting.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/casting.cr#L8"},"def":{"name":"to_big_d","return_type":"BigDecimal","visibility":"Public","body":"amount"},"external_var":false},{"html_id":"to_big_f:BigFloat-instance-method","name":"to_big_f","doc":"Returns the amount of money as a `BigFloat`.\n\nWARNING: Floating points cannot guarantee precision. Therefore, this\nfunction should only be used when you no longer need to represent\ncurrency or working with another system that requires floats.\n\n```\nMoney.us_dollar(1_00).to_big_f # => BigFloat.new(\"1.0\")\n```","summary":"<p>Returns the amount of money as a <code>BigFloat</code>.</p>","abstract":false,"location":{"filename":"src/money/money/casting.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/casting.cr#L21"},"def":{"name":"to_big_f","return_type":"BigFloat","visibility":"Public","body":"amount.to_big_f"},"external_var":false}]},{"html_id":"money/Money/Constructors","path":"Money/Constructors.html","kind":"module","full_name":"Money::Constructors","name":"Constructors","abstract":false,"locations":[{"filename":"src/money/money/constructors.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"bitcoin(value):Money-instance-method","name":"bitcoin","doc":"Creates a new `Money` object of the given value, using the\nBitcoin cryptocurrency.\n\n```\nMoney.bitcoin(100) # => Money(@amount=0.000001 @currency=\"BTC\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Bitcoin cryptocurrency.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : Money","args_html":"(value) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":71,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L71"},"def":{"name":"bitcoin","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(value, \"BTC\")"},"external_var":false},{"html_id":"euro(value):Money-instance-method","name":"euro","doc":"Creates a new `Money` object of the given value, using the\nEuro currency.\n\n```\nMoney.euro(1_00) # => Money(@amount=1.0 @currency=\"EUR\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Euro currency.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : Money","args_html":"(value) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L61"},"def":{"name":"euro","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(value, \"EUR\")"},"external_var":false},{"html_id":"from_amount(amount:Number|String,currency=Money.default_currency):Money-instance-method","name":"from_amount","doc":"Creates a new `Money` object of value given in the *unit* of the given\n*currency*.\n\n```\nMoney.from_amount(23.45, \"USD\") # => Money(@amount=23.45 @currency=\"USD\")\nMoney.from_amount(23.45, \"JPY\") # => Money(@amount=23.0 @currency=\"JPY\")\n```\n\nSee also `#initialize`.","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of value given in the <em>unit</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"amount","external_name":"amount","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(amount : Number | String, currency = Money.default_currency) : Money","args_html":"(amount : <a href=\"../Number.html\">Number</a> | <a href=\"../String.html\">String</a>, currency = <span class=\"t\">Money</span>.default_currency) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L12"},"def":{"name":"from_amount","args":[{"name":"amount","external_name":"amount","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(amount: amount.to_big_d, currency: currency)"},"external_var":false},{"html_id":"from_fractional(fractional:Number|String,currency=Money.default_currency):Money-instance-method","name":"from_fractional","doc":"Creates a new `Money` object of value given in the fractional *unit* of\nthe given *currency*.\n\n```\nMoney.from_fractional(23_45.67, \"USD\") # => Money(@amount=23.4567 @currency=\"USD\")\nMoney.from_fractional(23_45, \"USD\")    # => Money(@amount=23.45 @currency=\"USD\")\n```\n\nSee also `#initialize`.","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of value given in the fractional <em>unit</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"fractional","external_name":"fractional","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(fractional : Number | String, currency = Money.default_currency) : Money","args_html":"(fractional : <a href=\"../Number.html\">Number</a> | <a href=\"../String.html\">String</a>, currency = <span class=\"t\">Money</span>.default_currency) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L28"},"def":{"name":"from_fractional","args":[{"name":"fractional","external_name":"fractional","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(fractional: fractional.to_big_d, currency: currency)"},"external_var":false},{"html_id":"us_dollar(value):Money-instance-method","name":"us_dollar","doc":"Creates a new `Money` object of the given value, using the\nAmerican dollar currency.\n\n```\nMoney.us_dollar(1_00) # => Money(@amount=1.0 @currency=\"USD\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the American dollar currency.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : Money","args_html":"(value) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":51,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L51"},"def":{"name":"us_dollar","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(value, \"USD\")"},"external_var":false},{"html_id":"zero(currency=Money.default_currency):Money-instance-method","name":"zero","doc":"Creates a new `Money` object with value `0`.\n\n```\nMoney.zero       # => Money(@amount=0.0)\nMoney.zero(:pln) # => Money(@amount=0.0 @currency=\"PLN\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object with value <code>0</code>.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(currency = Money.default_currency) : Money","args_html":"(currency = <span class=\"t\">Money</span>.default_currency) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/constructors.cr#L41"},"def":{"name":"zero","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(0, currency)"},"external_var":false}]},{"html_id":"money/Money/Context","path":"Money/Context.html","kind":"class","full_name":"Money::Context","name":"Context","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/context.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"`Context` class holding global settings for `Money` objects.\nEach `Fiber` has its own `Fiber#money_context` instance.\n\nSee also `Money.spawn_with_same_context`.","summary":"<p><code><a href=\"../Money/Context.html\">Context</a></code> class holding global settings for <code><a href=\"../Money.html\">Money</a></code> objects.</p>","instance_methods":[{"html_id":"default_currency:Currency-instance-method","name":"default_currency","doc":"Default currency for creating new `Money` object.\nRaises `UndefinedCurrencyError` if not set.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":39,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L39"},"def":{"name":"default_currency","return_type":"Currency","visibility":"Public","body":"if (__temp_112 = @default_currency).nil?\n  @default_currency = (raise(UndefinedCurrencyError.new))\nelse\n  __temp_112\nend"},"external_var":false},{"html_id":"default_currency=(currency_code:String|Symbol)-instance-method","name":"default_currency=","doc":"Default currency for creating new `Money` object.\nRaises `UndefinedCurrencyError` if not set.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"currency_code","external_name":"currency_code","restriction":"String | Symbol"}],"args_string":"(currency_code : String | Symbol)","args_html":"(currency_code : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/money/context.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L42"},"def":{"name":"default_currency=","args":[{"name":"currency_code","external_name":"currency_code","restriction":"String | Symbol"}],"visibility":"Public","body":"self.default_currency = Currency.find(currency_code)"},"external_var":false},{"html_id":"default_currency=(default_currency:Nil)-instance-method","name":"default_currency=","doc":"Default currency for creating new `Money` object.\nRaises `UndefinedCurrencyError` if not set.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"default_currency","external_name":"default_currency","restriction":"Nil"}],"args_string":"(default_currency : Nil)","args_html":"(default_currency : Nil)","location":{"filename":"src/money/context.cr","line_number":47,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L47"},"def":{"name":"default_currency=","args":[{"name":"default_currency","external_name":"default_currency","restriction":"Nil"}],"visibility":"Public","body":"@default_currency = default_currency"},"external_var":false},{"html_id":"default_currency=(default_currency:Currency)-instance-method","name":"default_currency=","doc":"Default currency for creating new `Money` object.\nRaises `UndefinedCurrencyError` if not set.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"default_currency","external_name":"default_currency","restriction":"Currency"}],"args_string":"(default_currency : Currency)","args_html":"(default_currency : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/context.cr","line_number":39,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L39"},"def":{"name":"default_currency=","args":[{"name":"default_currency","external_name":"default_currency","restriction":"Currency"}],"visibility":"Public","body":"@default_currency = default_currency"},"external_var":false},{"html_id":"default_exchange:Currency::Exchange-instance-method","name":"default_exchange","doc":"Each `Money` object is associated to a currency exchange object.\nThis property allows you to specify the default exchange object.\nThe default value for this property is an instance of\n`Currency::Exchange`, which allows one to specify custom exchange rates.","summary":"<p>Each <code><a href=\"../Money.html\">Money</a></code> object is associated to a currency exchange object.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":54,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L54"},"def":{"name":"default_exchange","return_type":"Currency::Exchange","visibility":"Public","body":"if (__temp_113 = @default_exchange).nil?\n  @default_exchange = (Currency::Exchange.new)\nelse\n  __temp_113\nend"},"external_var":false},{"html_id":"default_exchange=(default_exchange:Currency::Exchange)-instance-method","name":"default_exchange=","doc":"Each `Money` object is associated to a currency exchange object.\nThis property allows you to specify the default exchange object.\nThe default value for this property is an instance of\n`Currency::Exchange`, which allows one to specify custom exchange rates.","summary":"<p>Each <code><a href=\"../Money.html\">Money</a></code> object is associated to a currency exchange object.</p>","abstract":false,"args":[{"name":"default_exchange","external_name":"default_exchange","restriction":"Currency::Exchange"}],"args_string":"(default_exchange : Currency::Exchange)","args_html":"(default_exchange : <a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a>)","location":{"filename":"src/money/context.cr","line_number":54,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L54"},"def":{"name":"default_exchange=","args":[{"name":"default_exchange","external_name":"default_exchange","restriction":"Currency::Exchange"}],"visibility":"Public","body":"@default_exchange = default_exchange"},"external_var":false},{"html_id":"default_rate_provider:Currency::RateProvider-instance-method","name":"default_rate_provider","doc":"Default currency rate provider used by `Currency::Exchange` objects.","summary":"<p>Default currency rate provider used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":66,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L66"},"def":{"name":"default_rate_provider","return_type":"Currency::RateProvider","visibility":"Public","body":"if (__temp_115 = @default_rate_provider).nil?\n  @default_rate_provider = (Currency::RateProvider::Null.new)\nelse\n  __temp_115\nend"},"external_var":false},{"html_id":"default_rate_provider=(default_rate_provider:Currency::RateProvider)-instance-method","name":"default_rate_provider=","doc":"Default currency rate provider used by `Currency::Exchange` objects.","summary":"<p>Default currency rate provider used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"args":[{"name":"default_rate_provider","external_name":"default_rate_provider","restriction":"Currency::RateProvider"}],"args_string":"(default_rate_provider : Currency::RateProvider)","args_html":"(default_rate_provider : <a href=\"../Money/Currency/RateProvider.html\">Currency::RateProvider</a>)","location":{"filename":"src/money/context.cr","line_number":66,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L66"},"def":{"name":"default_rate_provider=","args":[{"name":"default_rate_provider","external_name":"default_rate_provider","restriction":"Currency::RateProvider"}],"visibility":"Public","body":"@default_rate_provider = default_rate_provider"},"external_var":false},{"html_id":"default_rate_store:Currency::RateStore-instance-method","name":"default_rate_store","doc":"Default currency rate store used by `Currency::Exchange` objects.\nIt defaults to using an in-memory, concurrency-safe, store instance for\nstoring exchange rates.","summary":"<p>Default currency rate store used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L61"},"def":{"name":"default_rate_store","return_type":"Currency::RateStore","visibility":"Public","body":"if (__temp_114 = @default_rate_store).nil?\n  @default_rate_store = (Currency::RateStore::Memory.new)\nelse\n  __temp_114\nend"},"external_var":false},{"html_id":"default_rate_store=(default_rate_store:Currency::RateStore)-instance-method","name":"default_rate_store=","doc":"Default currency rate store used by `Currency::Exchange` objects.\nIt defaults to using an in-memory, concurrency-safe, store instance for\nstoring exchange rates.","summary":"<p>Default currency rate store used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"args":[{"name":"default_rate_store","external_name":"default_rate_store","restriction":"Currency::RateStore"}],"args_string":"(default_rate_store : Currency::RateStore)","args_html":"(default_rate_store : <a href=\"../Money/Currency/RateStore.html\">Currency::RateStore</a>)","location":{"filename":"src/money/context.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L61"},"def":{"name":"default_rate_store=","args":[{"name":"default_rate_store","external_name":"default_rate_store","restriction":"Currency::RateStore"}],"visibility":"Public","body":"@default_rate_store = default_rate_store"},"external_var":false},{"html_id":"infinite_precision=(infinite_precision:Bool)-instance-method","name":"infinite_precision=","doc":"Use this to control infinite precision cents.","summary":"<p>Use this to control infinite precision cents.</p>","abstract":false,"args":[{"name":"infinite_precision","external_name":"infinite_precision","restriction":"Bool"}],"args_string":"(infinite_precision : Bool)","args_html":"(infinite_precision : Bool)","location":{"filename":"src/money/context.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L32"},"def":{"name":"infinite_precision=","args":[{"name":"infinite_precision","external_name":"infinite_precision","restriction":"Bool"}],"visibility":"Public","body":"@infinite_precision = infinite_precision"},"external_var":false},{"html_id":"infinite_precision?:Bool-instance-method","name":"infinite_precision?","doc":"Use this to control infinite precision cents.","summary":"<p>Use this to control infinite precision cents.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L32"},"def":{"name":"infinite_precision?","return_type":"Bool","visibility":"Public","body":"@infinite_precision"},"external_var":false},{"html_id":"rounding_mode:Number::RoundingMode-instance-method","name":"rounding_mode","doc":"Default rounding mode.","summary":"<p>Default rounding mode.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":35,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L35"},"def":{"name":"rounding_mode","return_type":"Number::RoundingMode","visibility":"Public","body":"@rounding_mode"},"external_var":false},{"html_id":"rounding_mode=(rounding_mode:Number::RoundingMode)-instance-method","name":"rounding_mode=","doc":"Default rounding mode.","summary":"<p>Default rounding mode.</p>","abstract":false,"args":[{"name":"rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode)","args_html":"(rounding_mode : Number::RoundingMode)","location":{"filename":"src/money/context.cr","line_number":35,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/context.cr#L35"},"def":{"name":"rounding_mode=","args":[{"name":"rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"visibility":"Public","body":"@rounding_mode = rounding_mode"},"external_var":false}]},{"html_id":"money/Money/Currency","path":"Money/Currency.html","kind":"class","full_name":"Money::Currency","name":"Currency","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Money/Currency/Validation","kind":"module","full_name":"Money::Currency::Validation","name":"Validation"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L16"},{"filename":"src/money/currency/converter.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L1"},{"filename":"src/money/currency/enumeration.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L1"},{"filename":"src/money/currency/error.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/error.cr#L1"},{"filename":"src/money/currency/exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L1"},{"filename":"src/money/currency/exchange/single_currency.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange/single_currency.cr#L1"},{"filename":"src/money/currency/json.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L6"},{"filename":"src/money/currency/loader.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/loader.cr#L3"},{"filename":"src/money/currency/rate.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L1"},{"filename":"src/money/currency/rate_provider.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L1"},{"filename":"src/money/currency/rate_provider/error.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L1"},{"filename":"src/money/currency/rate_provider/http.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/http.cr#L6"},{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L1"},{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L1"},{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L4"},{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L4"},{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L4"},{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L1"},{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L3"},{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L3"},{"filename":"src/money/currency/rate_store.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L1"},{"filename":"src/money/currency/rate_store/file.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L3"},{"filename":"src/money/currency/rate_store/memory.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/memory.cr#L1"},{"filename":"src/money/currency/type.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/type.cr#L1"},{"filename":"src/money/currency/validation.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/validation.cr#L1"},{"filename":"src/money/currency/yaml.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Money/Currency/Validation","kind":"module","full_name":"Money::Currency::Validation","name":"Validation"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"money/Money/Currency/Enumeration","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration"},{"html_id":"money/Money/Currency/Loader","kind":"module","full_name":"Money::Currency::Loader","name":"Loader"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Represents a specific currency unit.\n\nSee [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).","summary":"<p>Represents a specific currency unit.</p>","class_methods":[{"html_id":"crypto:Array(Currency)-class-method","name":"crypto","doc":"Returns an array of currencies of type `Crypto`.","summary":"<p>Returns an array of currencies of type <code>Crypto</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"crypto","return_type":"Array(Currency)","visibility":"Public","body":"self.select(&.crypto?)"},"external_var":false},{"html_id":"fiat:Array(Currency)-class-method","name":"fiat","doc":"Returns an array of currencies of type `Fiat`.","summary":"<p>Returns an array of currencies of type <code>Fiat</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"fiat","return_type":"Array(Currency)","visibility":"Public","body":"self.select(&.fiat?)"},"external_var":false},{"html_id":"metal:Array(Currency)-class-method","name":"metal","doc":"Returns an array of currencies of type `Metal`.","summary":"<p>Returns an array of currencies of type <code>Metal</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"metal","return_type":"Array(Currency)","visibility":"Public","body":"self.select(&.metal?)"},"external_var":false},{"html_id":"registry:Hash(String,Currency)-class-method","name":"registry","doc":"List of known currencies.","summary":"<p>List of known currencies.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L28"},"def":{"name":"registry","return_type":"Hash(String, Currency)","visibility":"Public","body":"@@registry_mutex.synchronize do\n  @@registry || (@@registry = load_defaults)\nend"},"external_var":false},{"html_id":"reset!:Nil-class-method","name":"reset!","doc":"Resets all registered currencies to their defaults.","summary":"<p>Resets all registered currencies to their defaults.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":51,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L51"},"def":{"name":"reset!","return_type":"Nil","visibility":"Public","body":"@@registry_mutex.synchronize do\n  @@registry = load_defaults\nend"},"external_var":false},{"html_id":"unregister(currency:String|Symbol|Currency):Currency|Nil-class-method","name":"unregister","doc":"Unregisters a currency.","summary":"<p>Unregisters a currency.</p>","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"String | Symbol | Currency"}],"args_string":"(currency : String | Symbol | Currency) : Currency | Nil","args_html":"(currency : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L42"},"def":{"name":"unregister","args":[{"name":"currency","external_name":"currency","restriction":"String | Symbol | Currency"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"if currency = self[currency]?\n  @@registry_mutex.synchronize do\n    registry.delete(currency.code)\n  end\nend"},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L9"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\n  find(node.value)\nelse\n  previous_def(ctx, node)\nend"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L9"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"if pull.kind.string?\n  find(pull.read_string)\nelse\n  previous_def(pull)\nend"},"external_var":false},{"html_id":"new(*,archived_at:Time|Nil=nil,type:Money::Currency::Type|Nil=nil,priority:Int32|Nil=nil,iso_numeric:Int32|Nil=nil,code:String,name:Nil|String=nil,symbol:Nil|String=nil,disambiguate_symbol:Nil|String=nil,alternate_symbols:Nil|Array(String)=nil,subunit:Nil|String=nil,subunit_to_unit:UInt64,symbol_first:Bool|Nil=nil,decimal_mark:Nil|String=nil,thousands_separator:Nil|String=nil,smallest_denomination:Int32|Nil=nil,format:Nil|String=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"archived_at","default_value":"nil","external_name":"archived_at","restriction":"::Time | ::Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Money::Currency::Type | ::Nil"},{"name":"priority","default_value":"nil","external_name":"priority","restriction":"::Int32 | ::Nil"},{"name":"iso_numeric","default_value":"nil","external_name":"iso_numeric","restriction":"::Int32 | ::Nil"},{"name":"code","external_name":"code","restriction":"::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"symbol","default_value":"nil","external_name":"symbol","restriction":"::Nil | ::String"},{"name":"disambiguate_symbol","default_value":"nil","external_name":"disambiguate_symbol","restriction":"::Nil | ::String"},{"name":"alternate_symbols","default_value":"nil","external_name":"alternate_symbols","restriction":"::Nil | ::Array(::String)"},{"name":"subunit","default_value":"nil","external_name":"subunit","restriction":"::Nil | ::String"},{"name":"subunit_to_unit","external_name":"subunit_to_unit","restriction":"::UInt64"},{"name":"symbol_first","default_value":"nil","external_name":"symbol_first","restriction":"::Bool | ::Nil"},{"name":"decimal_mark","default_value":"nil","external_name":"decimal_mark","restriction":"::Nil | ::String"},{"name":"thousands_separator","default_value":"nil","external_name":"thousands_separator","restriction":"::Nil | ::String"},{"name":"smallest_denomination","default_value":"nil","external_name":"smallest_denomination","restriction":"::Int32 | ::Nil"},{"name":"format","default_value":"nil","external_name":"format","restriction":"::Nil | ::String"}],"args_string":"(*, archived_at : Time | Nil = nil, type : Money::Currency::Type | Nil = nil, priority : Int32 | Nil = nil, iso_numeric : Int32 | Nil = nil, code : String, name : Nil | String = nil, symbol : Nil | String = nil, disambiguate_symbol : Nil | String = nil, alternate_symbols : Nil | Array(String) = nil, subunit : Nil | String = nil, subunit_to_unit : UInt64, symbol_first : Bool | Nil = nil, decimal_mark : Nil | String = nil, thousands_separator : Nil | String = nil, smallest_denomination : Int32 | Nil = nil, format : Nil | String = nil)","args_html":"(*, archived_at : Time | Nil = <span class=\"n\">nil</span>, type : <a href=\"../Money/Currency/Type.html\">Money::Currency::Type</a> | Nil = <span class=\"n\">nil</span>, priority : Int32 | Nil = <span class=\"n\">nil</span>, iso_numeric : Int32 | Nil = <span class=\"n\">nil</span>, code : <a href=\"../String.html\">String</a>, name : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, symbol : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, disambiguate_symbol : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, alternate_symbols : Nil | Array(<a href=\"../String.html\">String</a>) = <span class=\"n\">nil</span>, subunit : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, subunit_to_unit : UInt64, symbol_first : Bool | Nil = <span class=\"n\">nil</span>, decimal_mark : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, thousands_separator : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, smallest_denomination : Int32 | Nil = <span class=\"n\">nil</span>, format : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency.cr","line_number":110,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L110"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"archived_at","default_value":"nil","external_name":"archived_at","restriction":"::Time | ::Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Money::Currency::Type | ::Nil"},{"name":"priority","default_value":"nil","external_name":"priority","restriction":"::Int32 | ::Nil"},{"name":"iso_numeric","default_value":"nil","external_name":"iso_numeric","restriction":"::Int32 | ::Nil"},{"name":"code","external_name":"code","restriction":"::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"symbol","default_value":"nil","external_name":"symbol","restriction":"::Nil | ::String"},{"name":"disambiguate_symbol","default_value":"nil","external_name":"disambiguate_symbol","restriction":"::Nil | ::String"},{"name":"alternate_symbols","default_value":"nil","external_name":"alternate_symbols","restriction":"::Nil | ::Array(::String)"},{"name":"subunit","default_value":"nil","external_name":"subunit","restriction":"::Nil | ::String"},{"name":"subunit_to_unit","external_name":"subunit_to_unit","restriction":"::UInt64"},{"name":"symbol_first","default_value":"nil","external_name":"symbol_first","restriction":"::Bool | ::Nil"},{"name":"decimal_mark","default_value":"nil","external_name":"decimal_mark","restriction":"::Nil | ::String"},{"name":"thousands_separator","default_value":"nil","external_name":"thousands_separator","restriction":"::Nil | ::String"},{"name":"smallest_denomination","default_value":"nil","external_name":"smallest_denomination","restriction":"::Int32 | ::Nil"},{"name":"format","default_value":"nil","external_name":"format","restriction":"::Nil | ::String"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(archived_at: archived_at, type: type, priority: priority, iso_numeric: iso_numeric, code: code, name: name, symbol: symbol, disambiguate_symbol: disambiguate_symbol, alternate_symbols: alternate_symbols, subunit: subunit, subunit_to_unit: subunit_to_unit, symbol_first: symbol_first, decimal_mark: decimal_mark, thousands_separator: thousands_separator, smallest_denomination: smallest_denomination, format: format)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L7"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L7"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"register(currency:Currency):Currency-class-method","name":"register","doc":"Registers a new currency.","summary":"<p>Registers a new currency.</p>","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency) : Currency","args_html":"(currency : <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency.cr","line_number":35,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L35"},"def":{"name":"register","args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"return_type":"Currency","visibility":"Public","body":"@@registry_mutex.synchronize do\n  registry[currency.code] = currency\nend"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Currency):Int32-instance-method","name":"<=>","doc":"Compares `self` with *other* currency against the value of\n`priority` and `code` attributes.","summary":"<p>Compares <code>self</code> with <em>other</em> currency against the value of <code><a href=\"../Money/Currency.html#priority%3AInt32%7CNil-instance-method\">#priority</a></code> and <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code> attributes.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Currency"}],"args_string":"(other : Currency) : Int32","args_html":"(other : <a href=\"../Money/Currency.html\">Currency</a>) : Int32","location":{"filename":"src/money/currency.cr","line_number":207,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L207"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Currency"}],"return_type":"Int32","visibility":"Public","body":"case {(priority = self.priority), (other_priority = other.priority)}\nin {Int32, Int32}\n  {priority, code} <=> {other_priority, other.code}\nin {Int32, nil}\n  -1\nin {nil, Int32}\n  1\nin {nil, nil}\n  code <=> other.code\nend"},"external_var":false},{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if same?(other)\n  return true\nend\n\n\nif code == other.code\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"alternate_symbols:Array(String)|Nil-instance-method","name":"alternate_symbols","doc":"Alternate symbols.","summary":"<p>Alternate symbols.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":87,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L87"},"def":{"name":"alternate_symbols","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@alternate_symbols"},"external_var":false},{"html_id":"archived_at:Time|Nil-instance-method","name":"archived_at","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":60,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L60"},"def":{"name":"archived_at","return_type":"Time | ::Nil","visibility":"Public","body":"@archived_at"},"external_var":false},{"html_id":"cents_based?:Bool-instance-method","name":"cents_based?","doc":"Returns `true` if a subunit is cents-based.\n\n````\nMoney::Currency.find(:usd).cents_based? # => true\nMoney::Currency.find(:btc).cents_based? # => false\n````","summary":"<p>Returns <code>true</code> if a subunit is cents-based.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":201,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L201"},"def":{"name":"cents_based?","return_type":"Bool","visibility":"Public","body":"subunit_to_unit == 100"},"external_var":false},{"html_id":"code:String-instance-method","name":"code","doc":"Currency code.","summary":"<p>Currency code.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":75,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L75"},"def":{"name":"code","return_type":"String","visibility":"Public","body":"@code"},"external_var":false},{"html_id":"crypto?:Bool-instance-method","name":"crypto?","doc":"Returns `true` if the currency `#type` is `Crypto`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>Crypto</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"crypto?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.crypto?)"},"external_var":false},{"html_id":"decimal_mark:String|Nil-instance-method","name":"decimal_mark","doc":"Decimal mark.","summary":"<p>Decimal mark.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":99,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L99"},"def":{"name":"decimal_mark","return_type":"String | ::Nil","visibility":"Public","body":"@decimal_mark"},"external_var":false},{"html_id":"decimal_places:Int32-instance-method","name":"decimal_places","doc":"Alias of `#exponent`.","summary":"<p>Alias of <code><a href=\"../Money/Currency.html#exponent%3AInt32-instance-method\">#exponent</a></code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":167,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L167"},"def":{"name":"decimal_places","return_type":"Int32","visibility":"Public","body":"exponent"},"external_var":false},{"html_id":"disambiguate_symbol:String|Nil-instance-method","name":"disambiguate_symbol","doc":"Disambiguation symbol.","summary":"<p>Disambiguation symbol.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":84,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L84"},"def":{"name":"disambiguate_symbol","return_type":"String | ::Nil","visibility":"Public","body":"@disambiguate_symbol"},"external_var":false},{"html_id":"exponent:Int32-instance-method","name":"exponent","doc":"Returns the relation between subunit and unit as a base 10 exponent.\n\n```\nMoney::Currency.find(:usd).exponent # => 2\nMoney::Currency.find(:btc).exponent # => 8\n```\n\nNOTE: MGA and MRU are exceptions and are rounded to 1.\n\nSee [Active_codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).","summary":"<p>Returns the relation between subunit and unit as a base 10 exponent.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":161,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L161"},"def":{"name":"exponent","return_type":"Int32","visibility":"Public","body":"(Math.log10(subunit_to_unit)).round.to_i"},"external_var":false},{"html_id":"fiat?:Bool-instance-method","name":"fiat?","doc":"Returns `true` if the currency `#type` is `Fiat`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>Fiat</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"fiat?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.fiat?)"},"external_var":false},{"html_id":"format:String|Nil-instance-method","name":"format","doc":"Format string.","summary":"<p>Format string.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":108,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L108"},"def":{"name":"format","return_type":"String | ::Nil","visibility":"Public","body":"@format"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = code.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"historical?:Bool-instance-method","name":"historical?","doc":"Returns `true` if the currency is historical.\n\n```\nMoney::Currency.find(:usd).historical? # => false\nMoney::Currency.find(:vef).historical? # => true\n```\n\nSee also `#archived_at`.","summary":"<p>Returns <code>true</code> if the currency is historical.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":179,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L179"},"def":{"name":"historical?","return_type":"Bool","visibility":"Public","body":"!(!archived_at)"},"external_var":false},{"html_id":"iso?:Bool-instance-method","name":"iso?","doc":"Returns `true` if iso currency.\n\n```\nMoney::Currency.find(:usd).iso? # => true\nMoney::Currency.find(:btc).iso? # => false\n```\n\nSee also `#iso_numeric`.","summary":"<p>Returns <code>true</code> if iso currency.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":191,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L191"},"def":{"name":"iso?","return_type":"Bool","visibility":"Public","body":"!(!iso_numeric)"},"external_var":false},{"html_id":"iso_numeric:Int32|Nil-instance-method","name":"iso_numeric","doc":"ISO 4217 numeric code.","summary":"<p>ISO 4217 numeric code.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":72,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L72"},"def":{"name":"iso_numeric","return_type":"Int32 | ::Nil","visibility":"Public","body":"@iso_numeric"},"external_var":false},{"html_id":"metal?:Bool-instance-method","name":"metal?","doc":"Returns `true` if the currency `#type` is `Metal`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>Metal</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":139,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L139"},"def":{"name":"metal?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.metal?)"},"external_var":false},{"html_id":"name:String|Nil-instance-method","name":"name","doc":"Currency name.","summary":"<p>Currency name.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":78,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L78"},"def":{"name":"name","return_type":"String | ::Nil","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"priority:Int32|Nil-instance-method","name":"priority","doc":"Currency priority (used for sorting).","summary":"<p>Currency priority (used for sorting).</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":69,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L69"},"def":{"name":"priority","return_type":"Int32 | ::Nil","visibility":"Public","body":"@priority"},"external_var":false},{"html_id":"replaced_by:String|Nil-instance-method","name":"replaced_by","doc":"Currency code that replaced this currency.","summary":"<p>Currency code that replaced this currency.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":63,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L63"},"def":{"name":"replaced_by","return_type":"String | ::Nil","visibility":"Public","body":"@replaced_by"},"external_var":false},{"html_id":"smallest_denomination:Int32|Nil-instance-method","name":"smallest_denomination","doc":"Smallest denomination.","summary":"<p>Smallest denomination.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":105,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L105"},"def":{"name":"smallest_denomination","return_type":"Int32 | ::Nil","visibility":"Public","body":"@smallest_denomination"},"external_var":false},{"html_id":"subunit:String|Nil-instance-method","name":"subunit","doc":"Currency subunit.","summary":"<p>Currency subunit.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":90,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L90"},"def":{"name":"subunit","return_type":"String | ::Nil","visibility":"Public","body":"@subunit"},"external_var":false},{"html_id":"subunit_to_unit:UInt64-instance-method","name":"subunit_to_unit","doc":"Subunit to unit value.","summary":"<p>Subunit to unit value.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":93,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L93"},"def":{"name":"subunit_to_unit","return_type":"UInt64","visibility":"Public","body":"@subunit_to_unit"},"external_var":false},{"html_id":"symbol:String|Nil-instance-method","name":"symbol","doc":"Currency symbol.","summary":"<p>Currency symbol.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":81,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L81"},"def":{"name":"symbol","return_type":"String | ::Nil","visibility":"Public","body":"@symbol"},"external_var":false},{"html_id":"symbol_first?:Bool|Nil-instance-method","name":"symbol_first?","doc":"Should the symbol be placed before the amount?","summary":"<p>Should the symbol be placed before the amount?</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":96,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L96"},"def":{"name":"symbol_first?","return_type":"Bool | ::Nil","visibility":"Public","body":"@symbol_first"},"external_var":false},{"html_id":"thousands_separator:String|Nil-instance-method","name":"thousands_separator","doc":"Thousands separator.","summary":"<p>Thousands separator.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":102,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L102"},"def":{"name":"thousands_separator","return_type":"String | ::Nil","visibility":"Public","body":"@thousands_separator"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a string representation corresponding to the `#code` property\nto the given *io*.\n\n```\nMoney::Currency.find(:usd).to_s # => \"USD\"\nMoney::Currency.find(:btc).to_s # => \"BTC\"\n```","summary":"<p>Appends a string representation corresponding to the <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code> property to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/currency.cr","line_number":225,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L225"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << code"},"external_var":false},{"html_id":"type:Type|Nil-instance-method","name":"type","doc":"Currency type.","summary":"<p>Currency type.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":66,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency.cr#L66"},"def":{"name":"type","return_type":"Type | ::Nil","visibility":"Public","body":"@type"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/Converter","path":"Money/Currency/Converter.html","kind":"module","full_name":"Money::Currency::Converter","name":"Converter","abstract":false,"locations":[{"filename":"src/money/currency/converter.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L22"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"money/Money/Currency/Converter","kind":"module","full_name":"Money::Currency::Converter","name":"Converter"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":"Currency converter to be used with JSON and YAML serialization.\n\n```\nrequire \"json\"\nrequire \"yaml\"\nrequire \"money\"\n\nrecord FooWithCurrency, currency : Money::Currency do\n  include JSON::Serializable\n  include YAML::Serializable\n\n  @[JSON::Field(converter: Money::Currency::Converter)]\n  @[YAML::Field(converter: Money::Currency::Converter)]\n  @currency : Money::Currency\nend\n\nfoo = FooWithCurrency.new(Money::Currency.find(\"USD\"))\nfoo.to_json # => \"{\\\"currency\\\":\\\"USD\\\"}\"\nfoo.to_yaml # => \"---\\ncurrency: USD\\n\"\n```","summary":"<p>Currency converter to be used with JSON and YAML serialization.</p>","instance_methods":[{"html_id":"from_json(pull:JSON::PullParser):Currency-instance-method","name":"from_json","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser) : Currency","args_html":"(pull : JSON::PullParser) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/converter.cr","line_number":26,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L26"},"def":{"name":"from_json","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"return_type":"Currency","visibility":"Public","body":"Currency.find(pull.read_string)"},"external_var":false},{"html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):Currency-instance-method","name":"from_yaml","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : Currency","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/converter.cr","line_number":36,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L36"},"def":{"name":"from_yaml","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"return_type":"Currency","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.kind}\")\nend\nCurrency.find(node.value)\n"},"external_var":false},{"html_id":"to_json(currency:Currency,json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(currency : Currency, json : JSON::Builder)","args_html":"(currency : <a href=\"../../Money/Currency.html\">Currency</a>, json : JSON::Builder)","location":{"filename":"src/money/currency/converter.cr","line_number":30,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L30"},"def":{"name":"to_json","args":[{"name":"currency","external_name":"currency","restriction":"Currency"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"json.string(currency.code)"},"external_var":false},{"html_id":"to_yaml(currency:Currency,yaml:YAML::Nodes::Builder)-instance-method","name":"to_yaml","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"},{"name":"yaml","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(currency : Currency, yaml : YAML::Nodes::Builder)","args_html":"(currency : <a href=\"../../Money/Currency.html\">Currency</a>, yaml : YAML::Nodes::Builder)","location":{"filename":"src/money/currency/converter.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/converter.cr#L43"},"def":{"name":"to_yaml","args":[{"name":"currency","external_name":"currency","restriction":"Currency"},{"name":"yaml","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"visibility":"Public","body":"yaml.scalar(currency.code)"},"external_var":false}]},{"html_id":"money/Money/Currency/Enumeration","path":"Money/Currency/Enumeration.html","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration","abstract":false,"ancestors":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/money/currency/enumeration.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"instance_methods":[{"html_id":"[](key:String|Symbol):Currency-instance-method","name":"[]","doc":"Alias of `#find`.","summary":"<p>Alias of <code><a href=\"../../Money/Currency/Enumeration.html#find%28key%3AString%7CSymbol%29%3ACurrency-instance-method\">#find</a></code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/enumeration.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L44"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency","visibility":"Public","body":"find(key)"},"external_var":false},{"html_id":"[](key:Currency):Currency-instance-method","name":"[]","doc":"Returns given `Currency` instance.","summary":"<p>Returns given <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Currency"}],"args_string":"(key : Currency) : Currency","args_html":"(key : <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/enumeration.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L50"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"Currency"}],"return_type":"Currency","visibility":"Public","body":"key"},"external_var":false},{"html_id":"[]?(key:String|Symbol):Currency|Nil-instance-method","name":"[]?","doc":"Alias of `#find?`.","summary":"<p>Alias of <code><a href=\"../../Money/Currency/Enumeration.html#find%3F%28key%3AString%7CSymbol%29%3ACurrency%7CNil-instance-method\">#find?</a></code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency | Nil","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency/enumeration.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L20"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"find?(key)"},"external_var":false},{"html_id":"[]?(key:Currency):Currency|Nil-instance-method","name":"[]?","doc":"Returns given `Currency` instance.","summary":"<p>Returns given <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Currency"}],"args_string":"(key : Currency) : Currency | Nil","args_html":"(key : <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency/enumeration.cr","line_number":26,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L26"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"Currency"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"key"},"external_var":false},{"html_id":"all:Array(Currency)-instance-method","name":"all","doc":"Returns a sorted list of all registered currencies.","summary":"<p>Returns a sorted list of all registered currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/enumeration.cr","line_number":55,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L55"},"def":{"name":"all","return_type":"Array(Currency)","visibility":"Public","body":"@@registry_mutex.synchronize do\n  registry.values.sort!\nend"},"external_var":false},{"html_id":"each(&:Currency->):Nil-instance-method","name":"each","doc":"Iterates over all registered currencies.","summary":"<p>Iterates over all registered currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/enumeration.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L62"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Currency ->)"},"return_type":"Nil","visibility":"Public","body":"all.each do |currency|\n  yield currency\nend"},"external_var":false},{"html_id":"find(key:String|Symbol):Currency-instance-method","name":"find","doc":"Looks up a currency with the given *key* and returns a `Currency` instance\non success, raises `NotFoundError` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @code=\"EUR\">\nMoney::Currency.find(\"FOO\") # raises Money::Currency::NotFoundError\n```","summary":"<p>Looks up a currency with the given <em>key</em> and returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, raises <code>NotFoundError</code> otherwise.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/enumeration.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L37"},"def":{"name":"find","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency","visibility":"Public","body":"(find?(key)) ||\n(raise(Currency::NotFoundError.new(key.to_s)))"},"external_var":false},{"html_id":"find?(key:String|Symbol):Currency|Nil-instance-method","name":"find?","doc":"Looks up a currency with the given *key* and returns a `Currency` instance\non success, `nil` otherwise.\n\n```\nMoney::Currency.find?(\"EUR\") # => #<Money::Currency @code=\"EUR\">\nMoney::Currency.find?(\"FOO\") # => nil\n```","summary":"<p>Looks up a currency with the given <em>key</em> and returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency | Nil","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency/enumeration.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/enumeration.cr#L12"},"def":{"name":"find?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"@@registry_mutex.synchronize do\n  registry[key.to_s.upcase]?\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/Exchange","path":"Money/Currency/Exchange.html","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L2"},{"filename":"src/money/currency/json.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L31"},{"filename":"src/money/currency/yaml.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L21"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"subclasses":[{"html_id":"money/Money/Currency/Exchange/SingleCurrency","kind":"class","full_name":"Money::Currency::Exchange::SingleCurrency","name":"SingleCurrency"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L22"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L32"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(rate_store:Money::Currency::RateStore|Nil=nil,rate_provider:Money::Currency::RateProvider|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"rate_store","default_value":"nil","external_name":"rate_store","restriction":"::Money::Currency::RateStore | ::Nil"},{"name":"rate_provider","default_value":"nil","external_name":"rate_provider","restriction":"::Money::Currency::RateProvider | ::Nil"}],"args_string":"(rate_store : Money::Currency::RateStore | Nil = nil, rate_provider : Money::Currency::RateProvider | Nil = nil)","args_html":"(rate_store : <a href=\"../../Money/Currency/RateStore.html\">Money::Currency::RateStore</a> | Nil = <span class=\"n\">nil</span>, rate_provider : <a href=\"../../Money/Currency/RateProvider.html\">Money::Currency::RateProvider</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/exchange.cr","line_number":33,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L33"},"def":{"name":"new","args":[{"name":"rate_store","default_value":"nil","external_name":"rate_store","restriction":"::Money::Currency::RateStore | ::Nil"},{"name":"rate_provider","default_value":"nil","external_name":"rate_provider","restriction":"::Money::Currency::RateProvider | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(rate_store, rate_provider)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L32"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L22"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currencies:Array(Currency)-instance-method","name":"base_currencies","doc":"Returns an array of supported (registered) base currencies.","summary":"<p>Returns an array of supported (registered) base currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L37"},"def":{"name":"base_currencies","return_type":"Array(Currency)","visibility":"Public","body":"currency_codes = @mutex.synchronize do rate_provider.base_currency_codes end\ncurrency_codes.compact_map do |code|\n  Currency.find?(code)\nend\n"},"external_var":false},{"html_id":"exchange(from:Money,to:String|Symbol|Currency):Money-instance-method","name":"exchange","doc":"Exchanges the given `Money` object to a new `Money` object in\n*to* `Currency`.","summary":"<p>Exchanges the given <code><a href=\"../../Money.html\">Money</a></code> object to a new <code><a href=\"../../Money.html\">Money</a></code> object in <em>to</em> <code><a href=\"../../Money/Currency.html\">Currency</a></code>.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"String | Symbol | Currency"}],"args_string":"(from : Money, to : String | Symbol | Currency) : Money","args_html":"(from : <a href=\"../../Money.html\">Money</a>, to : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money.html\">Money</a>","location":{"filename":"src/money/currency/exchange.cr","line_number":54,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L54"},"def":{"name":"exchange","args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"String | Symbol | Currency"}],"return_type":"Money","visibility":"Public","body":"amount = from.amount * (exchange_rate(from.currency, to))\n\nMoney.new(amount: amount, currency: to)\n"},"external_var":false},{"html_id":"exchange_rate(base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal-instance-method","name":"exchange_rate","doc":"Returns the exchange rate between *base* and *target* currency,\nor raises `UnknownRateError` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or raises <code><a href=\"../../Money/UnknownRateError.html\">UnknownRateError</a></code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal","location":{"filename":"src/money/currency/exchange.cr","line_number":77,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L77"},"def":{"name":"exchange_rate","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal","visibility":"Public","body":"(exchange_rate?(base, target)) ||\n(raise(UnknownRateError.new(base, target)))"},"external_var":false},{"html_id":"exchange_rate?(base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency,\nor `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal | Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal | Nil","location":{"filename":"src/money/currency/exchange.cr","line_number":63,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L63"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal | ::Nil","visibility":"Public","body":"base, target = Currency[base], Currency[target]\n\nif base == target\n  return 1.to_big_d\nend\n\n@mutex.synchronize do\n  rate_store[base, target]? ||\n  (update_rate(base, target))\nend\n"},"external_var":false},{"html_id":"rate_provider:RateProvider-instance-method","name":"rate_provider","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L23"},"def":{"name":"rate_provider","return_type":"RateProvider","visibility":"Public","body":"@rate_provider || Money.default_rate_provider"},"external_var":false},{"html_id":"rate_provider=(rate_provider:RateProvider|Nil)-instance-method","name":"rate_provider=","abstract":false,"args":[{"name":"rate_provider","external_name":"rate_provider","restriction":"RateProvider | ::Nil"}],"args_string":"(rate_provider : RateProvider | Nil)","args_html":"(rate_provider : <a href=\"../../Money/Currency/RateProvider.html\">RateProvider</a> | Nil)","location":{"filename":"src/money/currency/exchange.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L20"},"def":{"name":"rate_provider=","args":[{"name":"rate_provider","external_name":"rate_provider","restriction":"RateProvider | ::Nil"}],"visibility":"Public","body":"@rate_provider = rate_provider"},"external_var":false},{"html_id":"rate_store:RateStore-instance-method","name":"rate_store","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L11"},"def":{"name":"rate_store","return_type":"RateStore","visibility":"Public","body":"@rate_store || Money.default_rate_store"},"external_var":false},{"html_id":"rate_store=(rate_store:RateStore|Nil)-instance-method","name":"rate_store=","abstract":false,"args":[{"name":"rate_store","external_name":"rate_store","restriction":"RateStore | ::Nil"}],"args_string":"(rate_store : RateStore | Nil)","args_html":"(rate_store : <a href=\"../../Money/Currency/RateStore.html\">RateStore</a> | Nil)","location":{"filename":"src/money/currency/exchange.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L8"},"def":{"name":"rate_store=","args":[{"name":"rate_store","external_name":"rate_store","restriction":"RateStore | ::Nil"}],"visibility":"Public","body":"@rate_store = rate_store"},"external_var":false},{"html_id":"target_currencies:Array(Currency)-instance-method","name":"target_currencies","doc":"Returns an array of supported (registered) target currencies.","summary":"<p>Returns an array of supported (registered) target currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":45,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange.cr#L45"},"def":{"name":"target_currencies","return_type":"Array(Currency)","visibility":"Public","body":"currency_codes = @mutex.synchronize do rate_provider.target_currency_codes end\ncurrency_codes.compact_map do |code|\n  Currency.find?(code)\nend\n"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/Exchange/SingleCurrency","path":"Money/Currency/Exchange/SingleCurrency.html","kind":"class","full_name":"Money::Currency::Exchange::SingleCurrency","name":"SingleCurrency","abstract":false,"superclass":{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},"ancestors":[{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/exchange/single_currency.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange/single_currency.cr#L9"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},"doc":"Class to ensure client code is operating in a single currency\nby raising if an exchange attempts to happen.\n\nThis is useful when an application uses multiple currencies but\nit usually deals with only one currency at a time so any arithmetic\nwhere exchanges happen are erroneous. Using this as the default exchange\nmeans that that these mistakes don't silently do the wrong thing.","summary":"<p>Class to ensure client code is operating in a single currency by raising if an exchange attempts to happen.</p>","instance_methods":[{"html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":"Raises a `DifferentCurrencyError` to remove possibility of accidentally\nexchanging currencies.","summary":"<p>Raises a <code><a href=\"../../../Money/DifferentCurrencyError.html\">DifferentCurrencyError</a></code> to remove possibility of accidentally exchanging currencies.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","args_html":"(from : <a href=\"../../../Money.html\">Money</a>, to : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money.html\">Money</a>","location":{"filename":"src/money/currency/exchange/single_currency.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/exchange/single_currency.cr#L12"},"def":{"name":"exchange","args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"return_type":"Money","visibility":"Public","body":"raise(DifferentCurrencyError.new(from.currency, to))"},"external_var":false}]}]},{"html_id":"money/Money/Currency/Loader","path":"Money/Currency/Loader.html","kind":"module","full_name":"Money::Currency::Loader","name":"Loader","abstract":false,"locations":[{"filename":"src/money/currency/loader.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/loader.cr#L12"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"instance_methods":[{"html_id":"load_defaults:Hash(String,Currency)-instance-method","name":"load_defaults","doc":"Loads and returns the currencies stored in JSON files\ninside of `data/currencies` directory.","summary":"<p>Loads and returns the currencies stored in JSON files inside of <code>data/currencies</code> directory.</p>","abstract":false,"location":{"filename":"src/money/currency/loader.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/loader.cr#L15"},"def":{"name":"load_defaults","return_type":"Hash(String, Currency)","visibility":"Public","body":"currency_table = {} of String => Currency\n\nif_defined?(:JSON) do\n  FileStorage.files.each do |file|\n    begin\n      currency = Currency.from_json(file)\n      currency_table[currency.code] = currency\n    ensure\n      file.rewind\n    end\n  end\nend\ncurrency_table\n"},"external_var":false}]},{"html_id":"money/Money/Currency/NotFoundError","path":"Money/Currency/NotFoundError.html","kind":"class","full_name":"Money::Currency::NotFoundError","name":"NotFoundError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/error.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/error.cr#L3"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":"Raised when trying to find an unknown currency.","summary":"<p>Raised when trying to find an unknown currency.</p>","constructors":[{"html_id":"new(key)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/money/currency/error.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/error.cr#L4"},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Currency/Rate","path":"Money/Currency/Rate.html","kind":"struct","full_name":"Money::Currency::Rate","name":"Rate","abstract":false,"superclass":{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/json.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L27"},{"filename":"src/money/currency/rate.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L2"},{"filename":"src/money/currency/yaml.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L17"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"constructors":[{"html_id":"new(base:Currency,target:Currency,value,updated_at=Time.utc):Rate-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"},{"name":"value","external_name":"value","restriction":""},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":""}],"args_string":"(base : Currency, target : Currency, value, updated_at = Time.utc) : Rate","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>, value, updated_at = <span class=\"t\">Time</span>.utc) : <a href=\"../../Money/Currency/Rate.html\">Rate</a>","location":{"filename":"src/money/currency/rate.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L15"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"},{"name":"value","external_name":"value","restriction":""},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":""}],"return_type":"Rate","visibility":"Public","body":"new(base.code, target.code, value, updated_at)"},"external_var":false},{"html_id":"new(base:String,target:String,value:BigDecimal,updated_at:Time=Time.utc)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"::String"},{"name":"target","external_name":"target","restriction":"::String"},{"name":"value","external_name":"value","restriction":"::BigDecimal"},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":"::Time"}],"args_string":"(base : String, target : String, value : BigDecimal, updated_at : Time = Time.utc)","args_html":"(base : <a href=\"../../String.html\">String</a>, target : <a href=\"../../String.html\">String</a>, value : BigDecimal, updated_at : Time = <span class=\"t\">Time</span>.utc)","location":{"filename":"src/money/currency/rate.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L24"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":"::String"},{"name":"target","external_name":"target","restriction":"::String"},{"name":"value","external_name":"value","restriction":"::BigDecimal"},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":"::Time"}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target, value, updated_at)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L18"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L28"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/json.cr#L28"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/yaml.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/yaml.cr#L18"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Rate):Int32-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greater than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Rate"}],"args_string":"(other : Rate) : Int32","args_html":"(other : <a href=\"../../Money/Currency/Rate.html\">Rate</a>) : Int32","location":{"filename":"src/money/currency/rate.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L38"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Rate"}],"return_type":"Int32","visibility":"Public","body":"{base, target, other.updated_at, other.value} <=> {other.base, other.target, updated_at, value}"},"external_var":false},{"html_id":"==(other:self)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if base == other.base\nelse\n  return false\nend\n\nif target == other.target\nelse\n  return false\nend\n\nif value == other.value\nelse\n  return false\nend\n\nif updated_at == other.updated_at\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"base:String-instance-method","name":"base","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L19"},"def":{"name":"base","return_type":"String","visibility":"Public","body":"@base"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = base.hash(hasher)\n\nhasher = target.hash(hasher)\n\nhasher = value.hash(hasher)\n\nhasher = updated_at.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"target:String-instance-method","name":"target","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L20"},"def":{"name":"target","return_type":"String","visibility":"Public","body":"@target"},"external_var":false},{"html_id":"to_s(io:IO,*,include_updated_at=false):Nil-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"args_string":"(io : IO, *, include_updated_at = false) : Nil","args_html":"(io : IO, *, include_updated_at = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/money/currency/rate.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L49"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"splat_index":1,"return_type":"Nil","visibility":"Public","body":"((((io << base) << \" -> \") << target) << \": \") << value\nif include_updated_at\n  ((io << \" (\") << updated_at) << ')'\nend\n"},"external_var":false},{"html_id":"to_s(*,include_updated_at=false):String-instance-method","name":"to_s","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"args_string":"(*, include_updated_at = false) : String","args_html":"(*, include_updated_at = <span class=\"n\">false</span>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/money/currency/rate.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L43"},"def":{"name":"to_s","args":[{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"splat_index":0,"return_type":"String","visibility":"Public","body":"String.build do |io|\n  to_s(io, include_updated_at: include_updated_at)\nend"},"external_var":false},{"html_id":"updated_at:Time-instance-method","name":"updated_at","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L22"},"def":{"name":"updated_at","return_type":"Time","visibility":"Public","body":"@updated_at"},"external_var":false},{"html_id":"value:BigDecimal-instance-method","name":"value","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate.cr#L21"},"def":{"name":"value","return_type":"BigDecimal","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider","path":"Money/Currency/RateProvider.html","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider","abstract":true,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L2"},{"filename":"src/money/currency/rate_provider/error.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"money/Money/Registry","kind":"module","full_name":"Money::Registry","name":"Registry"}],"subclasses":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI"},{"html_id":"money/Money/Currency/RateProvider/BitPay","kind":"class","full_name":"Money::Currency::RateProvider::BitPay","name":"BitPay"},{"html_id":"money/Money/Currency/RateProvider/CBR","kind":"class","full_name":"Money::Currency::RateProvider::CBR","name":"CBR"},{"html_id":"money/Money/Currency/RateProvider/Coinbase","kind":"class","full_name":"Money::Currency::RateProvider::Coinbase","name":"Coinbase"},{"html_id":"money/Money/Currency/RateProvider/CoinGecko","kind":"class","full_name":"Money::Currency::RateProvider::CoinGecko","name":"CoinGecko"},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer"},{"html_id":"money/Money/Currency/RateProvider/CoinMarketCap","kind":"class","full_name":"Money::Currency::RateProvider::CoinMarketCap","name":"CoinMarketCap"},{"html_id":"money/Money/Currency/RateProvider/Compound","kind":"class","full_name":"Money::Currency::RateProvider::Compound","name":"Compound"},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon"},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer"},{"html_id":"money/Money/Currency/RateProvider/ECB","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB"},{"html_id":"money/Money/Currency/RateProvider/Exchangerate","kind":"class","full_name":"Money::Currency::RateProvider::Exchangerate","name":"Exchangerate"},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI"},{"html_id":"money/Money/Currency/RateProvider/Fixer","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer"},{"html_id":"money/Money/Currency/RateProvider/FloatRates","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates"},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/FXFeed","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed"},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI"},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI"},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph"},{"html_id":"money/Money/Currency/RateProvider/NBP","kind":"class","full_name":"Money::Currency::RateProvider::NBP","name":"NBP"},{"html_id":"money/Money/Currency/RateProvider/Null","kind":"class","full_name":"Money::Currency::RateProvider::Null","name":"Null"},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates"},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"class_methods":[{"html_id":"find(name:String|Symbol):Money::Currency::RateProvider.class-class-method","name":"find","doc":"Returns the `Money::Currency::RateProvider.class` for the given *name* if found,\nraises `Money::Registry::NotFoundError` otherwise.","summary":"<p>Returns the <code>Money::Currency::RateProvider.class</code> for the given <em>name</em> if found, raises <code><a href=\"../../Money/Registry/NotFoundError.html\">Money::Registry::NotFoundError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol) : Money::Currency::RateProvider.class","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol) : <span class=\"t\">Money</span><span class=\"t\">::</span><span class=\"t\">Currency</span><span class=\"t\">::</span><span class=\"t\">RateProvider</span>.<span class=\"k\">class</span>","def":{"name":"find","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"return_type":"Money::Currency::RateProvider.class","visibility":"Public","body":"(find?(name)) ||\n(\n  {% if @type.has_constant?(:NotFoundError) %}\n              raise NotFoundError.new(key: name.to_s)\n            {% else %}\n              raise Money::Registry::NotFoundError.new(key: name.to_s)\n            {% end %}\n)"},"external_var":false},{"html_id":"find?(name:String|Symbol):Money::Currency::RateProvider.class|Nil-class-method","name":"find?","doc":"Returns the `Money::Currency::RateProvider.class` for the given *name* if found,\n`nil` otherwise.","summary":"<p>Returns the <code>Money::Currency::RateProvider.class</code> for the given <em>name</em> if found, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol) : Money::Currency::RateProvider.class | Nil","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol) : <span class=\"t\">Money</span><span class=\"t\">::</span><span class=\"t\">Currency</span><span class=\"t\">::</span><span class=\"t\">RateProvider</span>.<span class=\"k\">class</span> | Nil","def":{"name":"find?","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"return_type":"Money::Currency::RateProvider.class | Nil","visibility":"Public","body":"registry[name.to_s.underscore]?"},"external_var":false},{"html_id":"registry-class-method","name":"registry","doc":"All registered objects.","summary":"<p>All registered objects.</p>","abstract":false,"def":{"name":"registry","visibility":"Public","body":"@@registry"},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Alias of `Converter.from_yaml`.","summary":"<p>Alias of <code>Converter.from_yaml</code>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"Converter.from_yaml(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Alias of `Converter.from_json`.","summary":"<p>Alias of <code>Converter.from_json</code>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"Converter.from_json(pull)"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":true,"location":{"filename":"src/money/currency/rate_provider.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":""},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":true,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider.cr","line_number":29,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L29"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"supports_currency_pair?(base:Currency,target:Currency):Bool-instance-method","name":"supports_currency_pair?","doc":"Returns `true` if the provider supports the given currency pair.","summary":"<p>Returns <code>true</code> if the provider supports the given currency pair.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Bool","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : Bool","location":{"filename":"src/money/currency/rate_provider.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L32"},"def":{"name":"supports_currency_pair?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Bool","visibility":"Public","body":"(base_currency_codes.includes?(base.code)) &&\n(target_currency_codes.includes?(target.code))"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L24"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"base_currency_codes"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","path":"Money/Currency/RateProvider/AbstractAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Abstract API](https://www.abstractapi.com/api/exchange-rate-api) currency rate provider.","summary":"<p><a href=\"https://www.abstractapi.com/api/exchange-rate-api\">Abstract API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"abstract_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Abstract API](https://www.abstractapi.com/api/exchange-rate-api) currency rate provider.","summary":"<p><a href=\"https://www.abstractapi.com/api/exchange-rate-api\">Abstract API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Abstract API](https://www.abstractapi.com/api/exchange-rate-api) currency rate provider.","summary":"<p><a href=\"https://www.abstractapi.com/api/exchange-rate-api\">Abstract API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_146 = @api_key).nil?\n  @api_key = (option_from_env(\"ABSTRACT_API_KEY\"))\nelse\n  __temp_146\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://docs.abstractapi.com/exchange-rates/live>","summary":"<p><a href=\"https://docs.abstractapi.com/exchange-rates/live\">https://docs.abstractapi.com/exchange-rates/live</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_148 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n      base: \"USD\",\n    }\n    request(\"/v1/live/\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"exchange_rates\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_148\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://docs.abstractapi.com/exchange-rates/live>","summary":"<p><a href=\"https://docs.abstractapi.com/exchange-rates/live\">https://docs.abstractapi.com/exchange-rates/live</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L38"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  target: target.code,\n}\nrequest(\"/v1/live/\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"exchange_rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/abstract_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/abstract_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_147 = @host).nil?\n  @host = (URI.parse(\"https://exchange-rates.abstractapi.com\"))\nelse\n  __temp_147\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/BitPay","path":"Money/Currency/RateProvider/BitPay.html","kind":"class","full_name":"Money::Currency::RateProvider::BitPay","name":"BitPay","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"},{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L7"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[BitPay](https://www.bitpay.com/) currency rate provider.\n\nNOTE: Supports only some of the crypto-based conversions.","summary":"<p><a href=\"https://www.bitpay.com/\">BitPay</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L7"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"bit_pay\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[BitPay](https://www.bitpay.com/) currency rate provider.\n\nNOTE: Supports only some of the crypto-based conversions.","summary":"<p><a href=\"https://www.bitpay.com/\">BitPay</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L7"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[BitPay](https://www.bitpay.com/) currency rate provider.\n\nNOTE: Supports only some of the crypto-based conversions.","summary":"<p><a href=\"https://www.bitpay.com/\">BitPay</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,base_currency_code:String=\"BTC\",host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"base_currency_code","default_value":"\"BTC\"","external_name":"base_currency_code","restriction":"::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, base_currency_code : String = \"BTC\", host : Nil | URI = nil)","args_html":"(*, base_currency_code : <a href=\"../../../String.html\">String</a> = <span class=\"s\">&quot;BTC&quot;</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L22"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"base_currency_code","default_value":"\"BTC\"","external_name":"base_currency_code","restriction":"::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(base_currency_code: base_currency_code, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_code:String-instance-method","name":"base_currency_code","doc":"Supported values: `BTC`, `BCH`, `ETH`, `XRP`, `DOGE`, `LTC`.\n\nSee <https://www.bitpay.com/exchange-rates>","summary":"<p>Supported values: <code>BTC</code>, <code>BCH</code>, <code>ETH</code>, <code>XRP</code>, <code>DOGE</code>, <code>LTC</code>.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L16"},"def":{"name":"base_currency_code","return_type":"String","visibility":"Public","body":"@base_currency_code"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/bitpay.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/bitpay.cr#L18"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_149 = @host).nil?\n  @host = (URI.parse(\"https://bitpay.com\"))\nelse\n  __temp_149\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CBR","path":"Money/Currency/RateProvider/CBR.html","kind":"class","full_name":"Money::Currency::RateProvider::CBR","name":"CBR","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/ManyToOne","kind":"module","full_name":"Money::Currency::RateProvider::ManyToOne","name":"ManyToOne"},{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L9"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider/ManyToOne","kind":"module","full_name":"Money::Currency::RateProvider::ManyToOne","name":"ManyToOne"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider using data sourced from a daily feed of\n[Bank of Russia](https://www.cbr.ru/).\n\nNOTE: Supports only `RUB`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.cbr.ru/\">Bank of Russia</a>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L9"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"cbr\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[Bank of Russia](https://www.cbr.ru/).\n\nNOTE: Supports only `RUB`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.cbr.ru/\">Bank of Russia</a>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L9"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[Bank of Russia](https://www.cbr.ru/).\n\nNOTE: Supports only `RUB`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.cbr.ru/\">Bank of Russia</a>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L9"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L23"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L19"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_151 = @host).nil?\n  @host = (URI.parse(\"https://www.cbr.ru\"))\nelse\n  __temp_151\nend"},"external_var":false},{"html_id":"target_currency_code:String-instance-method","name":"target_currency_code","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/cbr.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/cbr.cr#L15"},"def":{"name":"target_currency_code","return_type":"String","visibility":"Public","body":"\"RUB\""},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Coinbase","path":"Money/Currency/RateProvider/Coinbase.html","kind":"class","full_name":"Money::Currency::RateProvider::Coinbase","name":"Coinbase","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Coinbase](https://www.coinbase.com/) currency rate provider.","summary":"<p><a href=\"https://www.coinbase.com/\">Coinbase</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"coinbase\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Coinbase](https://www.coinbase.com/) currency rate provider.","summary":"<p><a href=\"https://www.coinbase.com/\">Coinbase</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Coinbase](https://www.coinbase.com/) currency rate provider.","summary":"<p><a href=\"https://www.coinbase.com/\">Coinbase</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L14"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L17"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_158 = @base_currency_codes).nil?\n  @base_currency_codes = (fiat_currency_codes + crypto_currency_codes)\nelse\n  __temp_158\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://docs.cdp.coinbase.com/coinbase-app/track-apis/exchange-rates#data-api-exchange-rates>","summary":"<p><a href=\"https://docs.cdp.coinbase.com/coinbase-app/track-apis/exchange-rates#data-api-exchange-rates\">https://docs.cdp.coinbase.com/coinbase-app/track-apis/exchange-rates#data-api-exchange-rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  currency: base.code,\n}\nrequest(\"/v2/exchange-rates\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", \"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinbase.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinbase.cr#L10"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_157 = @host).nil?\n  @host = (URI.parse(\"https://api.coinbase.com\"))\nelse\n  __temp_157\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CoinGecko","path":"Money/Currency/RateProvider/CoinGecko.html","kind":"class","full_name":"Money::Currency::RateProvider::CoinGecko","name":"CoinGecko","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"},{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L7"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CoinGecko](https://www.coingecko.com/) currency rate provider.\n\nNOTE: Supports only `BTC`-based conversions.","summary":"<p><a href=\"https://www.coingecko.com/\">CoinGecko</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L7"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"coin_gecko\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[CoinGecko](https://www.coingecko.com/) currency rate provider.\n\nNOTE: Supports only `BTC`-based conversions.","summary":"<p><a href=\"https://www.coingecko.com/\">CoinGecko</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L7"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CoinGecko](https://www.coingecko.com/) currency rate provider.\n\nNOTE: Supports only `BTC`-based conversions.","summary":"<p><a href=\"https://www.coingecko.com/\">CoinGecko</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L21"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_code:String-instance-method","name":"base_currency_code","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L13"},"def":{"name":"base_currency_code","return_type":"String","visibility":"Public","body":"\"BTC\""},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coingecko.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coingecko.cr#L17"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_159 = @host).nil?\n  @host = (URI.parse(\"https://api.coingecko.com\"))\nelse\n  __temp_159\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","path":"Money/Currency/RateProvider/Coinlayer.html","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Coinlayer](https://coinlayer.com/) currency rate provider.","summary":"<p><a href=\"https://coinlayer.com/\">Coinlayer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"coinlayer\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Coinlayer](https://coinlayer.com/) currency rate provider.","summary":"<p><a href=\"https://coinlayer.com/\">Coinlayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Coinlayer](https://coinlayer.com/) currency rate provider.","summary":"<p><a href=\"https://coinlayer.com/\">Coinlayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_160 = @access_key).nil?\n  @access_key = (option_from_env(\"COINLAYER_ACCESS_KEY\"))\nelse\n  __temp_160\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L20"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes[0]"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://coinlayer.com/documentation#live>","summary":"<p><a href=\"https://coinlayer.com/documentation#live\">https://coinlayer.com/documentation#live</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":52,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L52"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  target: target.code,\n  symbols: base.code,\n}\nrequest(\"/live\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n  end\n\n  rate = (result.dig(\"rates\", base.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_161 = @host).nil?\n  @host = (URI.parse(\"https://api.coinlayer.com\"))\nelse\n  __temp_161\nend"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coinlayer.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coinlayer.cr#L24"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes[0] + currency_codes[1]"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CoinMarketCap","path":"Money/Currency/RateProvider/CoinMarketCap.html","kind":"class","full_name":"Money::Currency::RateProvider::CoinMarketCap","name":"CoinMarketCap","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CoinMarketCap](https://coinmarketcap.com/) currency rate provider.","summary":"<p><a href=\"https://coinmarketcap.com/\">CoinMarketCap</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"coin_market_cap\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[CoinMarketCap](https://coinmarketcap.com/) currency rate provider.","summary":"<p><a href=\"https://coinmarketcap.com/\">CoinMarketCap</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CoinMarketCap](https://coinmarketcap.com/) currency rate provider.","summary":"<p><a href=\"https://coinmarketcap.com/\">CoinMarketCap</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil,use_fiat:Bool=true,use_crypto:Bool=true)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"use_fiat","default_value":"true","external_name":"use_fiat","restriction":"::Bool"},{"name":"use_crypto","default_value":"true","external_name":"use_crypto","restriction":"::Bool"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil, use_fiat : Bool = true, use_crypto : Bool = true)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>, use_fiat : Bool = <span class=\"n\">true</span>, use_crypto : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L20"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"use_fiat","default_value":"true","external_name":"use_fiat","restriction":"::Bool"},{"name":"use_crypto","default_value":"true","external_name":"use_crypto","restriction":"::Bool"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host, use_fiat: use_fiat, use_crypto: use_crypto)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_152 = @api_key).nil?\n  @api_key = (option_from_env(\"COIN_MARKET_CAP_API_KEY\"))\nelse\n  __temp_152\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L23"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_154 = @base_currency_codes).nil?\n  @base_currency_codes = (([] of ::String).tap do |codes|\n    if use_fiat?\n      fiat_currency_map.each_key do |key| codes << key end\n    end\n    if use_crypto?\n      crypto_currency_map.each_key do |key| codes << key end\n    end\n  end)\nelse\n  __temp_154\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://coinmarketcap.com/api/documentation/v1/#operation/getV2ToolsPriceconversion>","summary":"<p><a href=\"https://coinmarketcap.com/api/documentation/v1/#operation/getV2ToolsPriceconversion\">https://coinmarketcap.com/api/documentation/v1/#operation/getV2ToolsPriceconversion</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":68,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L68"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"if base_id = currency_id(base)\nelse\n  return\nend\nif target_id = currency_id(target)\nelse\n  return\nend\n\nLog.debug(&.emit(\"Fetching rate for #{base} -> #{target}\", base_id: base_id, target_id: target_id))\n\nparams = {\n  CMC_PRO_API_KEY: api_key,\n  amount: \"1\",\n  id: base_id.to_s,\n  convert_id: target_id.to_s,\n}\nrequest(\"/v2/tools/price-conversion\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", \"quote\", target_id.to_s, \"price\")).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_153 = @host).nil?\n  @host = (URI.parse(\"https://pro-api.coinmarketcap.com\"))\nelse\n  __temp_153\nend"},"external_var":false},{"html_id":"use_crypto?:Bool-instance-method","name":"use_crypto?","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L18"},"def":{"name":"use_crypto?","return_type":"Bool","visibility":"Public","body":"@use_crypto"},"external_var":false},{"html_id":"use_fiat?:Bool-instance-method","name":"use_fiat?","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/coin_market_cap.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/coin_market_cap.cr#L17"},"def":{"name":"use_fiat?","return_type":"Bool","visibility":"Public","body":"@use_fiat"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Compound","path":"Money/Currency/RateProvider/Compound.html","kind":"class","full_name":"Money::Currency::RateProvider::Compound","name":"Compound","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider composed of multiple other rate providers.","summary":"<p>Currency rate provider composed of multiple other rate providers.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"compound\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Currency rate provider composed of multiple other rate providers.","summary":"<p>Currency rate provider composed of multiple other rate providers.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider composed of multiple other rate providers.","summary":"<p>Currency rate provider composed of multiple other rate providers.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(providers:Array(Money::Currency::RateProvider)=[]ofRateProvider)-class-method","name":"new","abstract":false,"args":[{"name":"providers","default_value":"[] of RateProvider","external_name":"providers","restriction":"::Array(::Money::Currency::RateProvider)"}],"args_string":"(providers : Array(Money::Currency::RateProvider) = [] of RateProvider)","args_html":"(providers : Array(<a href=\"../../../Money/Currency/RateProvider.html\">Money::Currency::RateProvider</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">RateProvider</span>)","location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L16"},"def":{"name":"new","args":[{"name":"providers","default_value":"[] of RateProvider","external_name":"providers","restriction":"::Array(::Money::Currency::RateProvider)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(providers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L19"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes(\"Fetching base currencies failed\", &.base_currency_codes)"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L41"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"errors = [] of Exception\n\nproviders.each do |provider|\n  begin\n    if provider.supports_currency_pair?(base, target)\n    else\n      next\n    end\n\n    if rate = provider.exchange_rate?(base, target)\n      return rate\n    end\n  rescue ex\n    Log.debug(exception: ex) do\n      \"Fetching rate for #{base} -> #{target} failed (#{provider.class})\"\n    end\n    errors << ex\n  end\nend\n\nif errors.present?\n  raise(AggregateError.new(\"Failed to fetch rate for #{base} -> #{target}\", errors))\nend\n"},"external_var":false},{"html_id":"providers:Array(RateProvider)-instance-method","name":"providers","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L14"},"def":{"name":"providers","return_type":"Array(RateProvider)","visibility":"Public","body":"@providers"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/compound.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/compound.cr#L23"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes(\"Fetching target currencies failed\", &.target_currency_codes)"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Converter","path":"Money/Currency/RateProvider/Converter.html","kind":"module","full_name":"Money::Currency::RateProvider::Converter","name":"Converter","abstract":false,"locations":[],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"money/Money/Registry/Converter/JSON","kind":"module","full_name":"Money::Registry::Converter::JSON","name":"JSON"},{"html_id":"money/Money/Registry/Converter/YAML","kind":"module","full_name":"Money::Registry::Converter::YAML","name":"YAML"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"}},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","path":"Money/Currency/RateProvider/CurrencyAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Currency API](https://currencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://currencyapi.com/\">Currency API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Currency API](https://currencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://currencyapi.com/\">Currency API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Currency API](https://currencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://currencyapi.com/\">Currency API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_163 = @api_key).nil?\n  @api_key = (option_from_env(\"CURRENCY_API_KEY\"))\nelse\n  __temp_163\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencyapi.com/docs/currencies>","summary":"<p><a href=\"https://currencyapi.com/docs/currencies\">https://currencyapi.com/docs/currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_165 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      apikey: api_key,\n    }\n    request(\"/v3/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"data\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_165\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencyapi.com/docs/latest>","summary":"<p><a href=\"https://currencyapi.com/docs/latest\">https://currencyapi.com/docs/latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  apikey: api_key,\n  base_currency: base.code,\n  currencies: target.code,\n}\nrequest(\"/v3/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", target.code, \"value\")).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_164 = @host).nil?\n  @host = (URI.parse(\"https://api.currencyapi.com\"))\nelse\n  __temp_164\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","path":"Money/Currency/RateProvider/CurrencyBeacon.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CurrencyBeacon](https://currencybeacon.com/) currency rate provider.","summary":"<p><a href=\"https://currencybeacon.com/\">CurrencyBeacon</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_beacon\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[CurrencyBeacon](https://currencybeacon.com/) currency rate provider.","summary":"<p><a href=\"https://currencybeacon.com/\">CurrencyBeacon</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CurrencyBeacon](https://currencybeacon.com/) currency rate provider.","summary":"<p><a href=\"https://currencybeacon.com/\">CurrencyBeacon</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_166 = @api_key).nil?\n  @api_key = (option_from_env(\"CURRENCY_BEACON_API_KEY\"))\nelse\n  __temp_166\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencybeacon.com/api-documentation>","summary":"<p><a href=\"https://currencybeacon.com/api-documentation\">https://currencybeacon.com/api-documentation</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_168 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"response\"].as_a.map() do |__arg0| __arg0.as_h[\"short_code\"].as_s end\n\n      currencies\n    end\n  end)\nelse\n  __temp_168\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencybeacon.com/api-documentation>","summary":"<p><a href=\"https://currencybeacon.com/api-documentation\">https://currencybeacon.com/api-documentation</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if rate = result.dig?(\"response\", \"rates\", target.code)\n    Rate.new(base, target, rate.to_s.to_big_d)\n  end\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_beacon.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_beacon.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_167 = @host).nil?\n  @host = (URI.parse(\"https://api.currencybeacon.com\"))\nelse\n  __temp_167\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","path":"Money/Currency/RateProvider/CurrencyLayer.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CurrencyLayer](https://currencylayer.com/) currency rate provider.","summary":"<p><a href=\"https://currencylayer.com/\">CurrencyLayer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_layer\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[CurrencyLayer](https://currencylayer.com/) currency rate provider.","summary":"<p><a href=\"https://currencylayer.com/\">CurrencyLayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CurrencyLayer](https://currencylayer.com/) currency rate provider.","summary":"<p><a href=\"https://currencylayer.com/\">CurrencyLayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_169 = @access_key).nil?\n  @access_key = (option_from_env(\"CURRENCY_LAYER_ACCESS_KEY\"))\nelse\n  __temp_169\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencylayer.com/documentation#supported_currencies>","summary":"<p><a href=\"https://currencylayer.com/documentation#supported_currencies\">https://currencylayer.com/documentation#supported_currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_171 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      access_key: access_key,\n    }\n    request(\"/list\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n      end\n\n      currencies = result[\"currencies\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_171\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencylayer.com/documentation#real_time_rates>","summary":"<p><a href=\"https://currencylayer.com/documentation#real_time_rates\">https://currencylayer.com/documentation#real_time_rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  source: base.code,\n  currencies: target.code,\n}\nrequest(\"/live\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n  end\n\n  rate = (result.dig(\"quotes\", \"%s%s\" % {base.code, target.code})).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/currency_layer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/currency_layer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_170 = @host).nil?\n  @host = (URI.parse(\"https://api.currencylayer.com\"))\nelse\n  __temp_170\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/ECB","path":"Money/Currency/RateProvider/ECB.html","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"},{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L9"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider/OneToMany","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider using data sourced from a daily feed of\n[European Central Bank](https://www.ecb.europa.eu/).\n\nNOTE: Supports only `EUR`-based conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.ecb.europa.eu/\">European Central Bank</a>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L9"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"ecb\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[European Central Bank](https://www.ecb.europa.eu/).\n\nNOTE: Supports only `EUR`-based conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.ecb.europa.eu/\">European Central Bank</a>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L9"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[European Central Bank](https://www.ecb.europa.eu/).\n\nNOTE: Supports only `EUR`-based conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.ecb.europa.eu/\">European Central Bank</a>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L9"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L23"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_code:String-instance-method","name":"base_currency_code","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L15"},"def":{"name":"base_currency_code","return_type":"String","visibility":"Public","body":"\"EUR\""},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/ecb.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/ecb.cr#L19"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_172 = @host).nil?\n  @host = (URI.parse(\"https://www.ecb.europa.eu\"))\nelse\n  __temp_172\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Error","path":"Money/Currency/RateProvider/Error.html","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/error.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/Currency/RateProvider/RequestError","kind":"class","full_name":"Money::Currency::RateProvider::RequestError","name":"RequestError"},{"html_id":"money/Money/Currency/RateProvider/RequiredOptionError","kind":"class","full_name":"Money::Currency::RateProvider::RequiredOptionError","name":"RequiredOptionError"},{"html_id":"money/Money/Currency/RateProvider/ResponseError","kind":"class","full_name":"Money::Currency::RateProvider::ResponseError","name":"ResponseError"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Base class for errors raised by rate providers.","summary":"<p>Base class for errors raised by rate providers.</p>"},{"html_id":"money/Money/Currency/RateProvider/Exchangerate","path":"Money/Currency/RateProvider/Exchangerate.html","kind":"class","full_name":"Money::Currency::RateProvider::Exchangerate","name":"Exchangerate","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Exchangerate](https://exchangerate.host/) currency rate provider.","summary":"<p><a href=\"https://exchangerate.host/\">Exchangerate</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"exchangerate\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Exchangerate](https://exchangerate.host/) currency rate provider.","summary":"<p><a href=\"https://exchangerate.host/\">Exchangerate</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Exchangerate](https://exchangerate.host/) currency rate provider.","summary":"<p><a href=\"https://exchangerate.host/\">Exchangerate</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_176 = @access_key).nil?\n  @access_key = (option_from_env(\"EXCHANGERATE_ACCESS_KEY\"))\nelse\n  __temp_176\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://exchangerate.host/documentation#supported_currencies>","summary":"<p><a href=\"https://exchangerate.host/documentation#supported_currencies\">https://exchangerate.host/documentation#supported_currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_178 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      access_key: access_key,\n    }\n    request(\"/list\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n      end\n\n      currencies = result[\"currencies\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_178\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://exchangerate.host/documentation#real_time_rates>","summary":"<p><a href=\"https://exchangerate.host/documentation#real_time_rates\">https://exchangerate.host/documentation#real_time_rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  source: base.code,\n  currencies: target.code,\n}\nrequest(\"/live\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n  end\n\n  rate = (result.dig(\"quotes\", \"%s%s\" % {base.code, target.code})).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchangerate.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchangerate.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_177 = @host).nil?\n  @host = (URI.parse(\"https://api.exchangerate.host\"))\nelse\n  __temp_177\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","path":"Money/Currency/RateProvider/ExchangeRateAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Exchange Rate API](https://www.exchangerate-api.com/) currency rate provider.","summary":"<p><a href=\"https://www.exchangerate-api.com/\">Exchange Rate API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"exchange_rate_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Exchange Rate API](https://www.exchangerate-api.com/) currency rate provider.","summary":"<p><a href=\"https://www.exchangerate-api.com/\">Exchange Rate API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Exchange Rate API](https://www.exchangerate-api.com/) currency rate provider.","summary":"<p><a href=\"https://www.exchangerate-api.com/\">Exchange Rate API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_173 = @api_key).nil?\n  @api_key = (option_from_env(\"EXCHANGE_RATE_API_KEY\"))\nelse\n  __temp_173\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://www.exchangerate-api.com/docs/supported-codes-endpoint>","summary":"<p><a href=\"https://www.exchangerate-api.com/docs/supported-codes-endpoint\">https://www.exchangerate-api.com/docs/supported-codes-endpoint</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_175 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    path = \"/v6/%s/codes\" % (URI.encode_path_segment(api_key))\n\n    request(path) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"result\"].as_s == \"success\"\n      else\n        raise(ResponseError.new(result[\"error-type\"]))\n      end\n\n      currencies = result[\"supported_codes\"].as_a.map() do |__arg0| __arg0.as_a.first.as_s end\n\n      currencies\n    end\n  end)\nelse\n  __temp_175\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://www.exchangerate-api.com/docs/pair-conversion-requests>","summary":"<p><a href=\"https://www.exchangerate-api.com/docs/pair-conversion-requests\">https://www.exchangerate-api.com/docs/pair-conversion-requests</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L42"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\npath = \"/v6/%s/pair/%s/%s\" % {URI.encode_path_segment(api_key), URI.encode_path_segment(base.code), URI.encode_path_segment(target.code)}\n\nrequest(path) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"result\"].as_s == \"success\"\n  else\n    raise(ResponseError.new(result[\"error-type\"]))\n  end\n\n  rate = result[\"conversion_rate\"].to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/exchange_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/exchange_rate_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_174 = @host).nil?\n  @host = (URI.parse(\"https://v6.exchangerate-api.com\"))\nelse\n  __temp_174\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Fixer","path":"Money/Currency/RateProvider/Fixer.html","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Fixer](https://fixer.io/) currency rate provider.","summary":"<p><a href=\"https://fixer.io/\">Fixer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fixer\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Fixer](https://fixer.io/) currency rate provider.","summary":"<p><a href=\"https://fixer.io/\">Fixer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Fixer](https://fixer.io/) currency rate provider.","summary":"<p><a href=\"https://fixer.io/\">Fixer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_179 = @access_key).nil?\n  @access_key = (option_from_env(\"FIXER_ACCESS_KEY\"))\nelse\n  __temp_179\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fixer.io/documentation#supportedsymbols>","summary":"<p><a href=\"https://fixer.io/documentation#supportedsymbols\">https://fixer.io/documentation#supportedsymbols</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_181 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      access_key: access_key,\n    }\n    request(\"/api/symbols\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(ResponseError.new(result.dig(\"error\", \"type\")))\n      end\n\n      currencies = result[\"symbols\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_181\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fixer.io/documentation#latestrates>","summary":"<p><a href=\"https://fixer.io/documentation#latestrates\">https://fixer.io/documentation#latestrates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L42"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/api/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"type\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fixer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fixer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_180 = @host).nil?\n  @host = (URI.parse(\"https://data.fixer.io\"))\nelse\n  __temp_180\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FloatRates","path":"Money/Currency/RateProvider/FloatRates.html","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FloatRates](https://www.floatrates.com/) currency rate provider.","summary":"<p><a href=\"https://www.floatrates.com/\">FloatRates</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L6"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"float_rates\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[FloatRates](https://www.floatrates.com/) currency rate provider.","summary":"<p><a href=\"https://www.floatrates.com/\">FloatRates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L6"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FloatRates](https://www.floatrates.com/) currency rate provider.","summary":"<p><a href=\"https://www.floatrates.com/\">FloatRates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L15"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://www.floatrates.com/json-feeds.html>","summary":"<p><a href=\"https://www.floatrates.com/json-feeds.html\">https://www.floatrates.com/json-feeds.html</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L19"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_183 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    request(\"/json-feeds.html\") do |response|\n      result = XML.parse_html(response.body_io)\n      currencies = result.xpath_nodes(\"//li/a[starts-with(@href, 'https://www.floatrates.com/daily/')]\")\n\n      currencies.map do |node|\n        (node[\"href\"].match!(/(?<code>\\w+)\\.json$/))[\"code\"].upcase\n      end\n    end\n  end)\nelse\n  __temp_183\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":33,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L33"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\npath = \"/daily/%s.json\" % (URI.encode_path_segment(base.code.downcase))\n\nrequest(path) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(target.code.downcase, \"rate\")).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/float_rates.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/float_rates.cr#L11"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_182 = @host).nil?\n  @host = (URI.parse(\"https://www.floatrates.com\"))\nelse\n  __temp_182\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","path":"Money/Currency/RateProvider/FreecurrencyAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FreecurrencyAPI](https://freecurrencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://freecurrencyapi.com/\">FreecurrencyAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"freecurrency_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[FreecurrencyAPI](https://freecurrencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://freecurrencyapi.com/\">FreecurrencyAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FreecurrencyAPI](https://freecurrencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://freecurrencyapi.com/\">FreecurrencyAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_184 = @api_key).nil?\n  @api_key = (option_from_env(\"FREECURRENCY_API_KEY\"))\nelse\n  __temp_184\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://freecurrencyapi.com/docs/currencies>","summary":"<p><a href=\"https://freecurrencyapi.com/docs/currencies\">https://freecurrencyapi.com/docs/currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_186 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      apikey: api_key,\n    }\n    request(\"/v1/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"data\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_186\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://freecurrencyapi.com/docs/latest>","summary":"<p><a href=\"https://freecurrencyapi.com/docs/latest\">https://freecurrencyapi.com/docs/latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  apikey: api_key,\n  base_currency: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/freecurrency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/freecurrency_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_185 = @host).nil?\n  @host = (URI.parse(\"https://api.freecurrencyapi.com\"))\nelse\n  __temp_185\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FXFeed","path":"Money/Currency/RateProvider/FXFeed.html","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FXFeed](https://fxfeed.io/) currency rate provider.","summary":"<p><a href=\"https://fxfeed.io/\">FXFeed</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fx_feed\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[FXFeed](https://fxfeed.io/) currency rate provider.","summary":"<p><a href=\"https://fxfeed.io/\">FXFeed</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FXFeed](https://fxfeed.io/) currency rate provider.","summary":"<p><a href=\"https://fxfeed.io/\">FXFeed</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_187 = @api_key).nil?\n  @api_key = (option_from_env(\"FXFEED_API_KEY\"))\nelse\n  __temp_187\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fxfeed.io/docs#latest-currency-data>","summary":"<p><a href=\"https://fxfeed.io/docs#latest-currency-data\">https://fxfeed.io/docs#latest-currency-data</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_189 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/latest\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"]?.try(&.as_bool)\n      else\n        raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"message\")))\n      end\n\n      currencies = result[\"rates\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_189\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fxfeed.io/docs#latest-currency-data>","summary":"<p><a href=\"https://fxfeed.io/docs#latest-currency-data\">https://fxfeed.io/docs#latest-currency-data</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"]?.try(&.as_bool)\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"message\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_feed.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_feed.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_188 = @host).nil?\n  @host = (URI.parse(\"https://api.fxfeed.io\"))\nelse\n  __temp_188\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","path":"Money/Currency/RateProvider/FXRatesAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FXRatesAPI](https://fxratesapi.com/) currency rate provider.","summary":"<p><a href=\"https://fxratesapi.com/\">FXRatesAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fx_rates_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[FXRatesAPI](https://fxratesapi.com/) currency rate provider.","summary":"<p><a href=\"https://fxratesapi.com/\">FXRatesAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FXRatesAPI](https://fxratesapi.com/) currency rate provider.","summary":"<p><a href=\"https://fxratesapi.com/\">FXRatesAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_190 = @api_key).nil?\n  @api_key = (option_from_env(\"FXRATES_API_KEY\"))\nelse\n  __temp_190\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fxratesapi.com/docs/endpoints/list-available-currencies>","summary":"<p><a href=\"https://fxratesapi.com/docs/endpoints/list-available-currencies\">https://fxratesapi.com/docs/endpoints/list-available-currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_192 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_192\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fxratesapi.com/docs/endpoints/latest-exchange-rates>","summary":"<p><a href=\"https://fxratesapi.com/docs/endpoints/latest-exchange-rates\">https://fxratesapi.com/docs/endpoints/latest-exchange-rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result[\"error\"], result[\"description\"]?))\n  end\n\n  if rate = result.dig?(\"rates\", target.code)\n    Rate.new(base, target, rate.to_s.to_big_d)\n  end\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/fx_rates_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/fx_rates_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_191 = @host).nil?\n  @host = (URI.parse(\"https://api.fxratesapi.com\"))\nelse\n  __temp_191\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/HTTP","path":"Money/Currency/RateProvider/HTTP.html","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP","abstract":false,"locations":[{"filename":"src/money/currency/rate_provider/http.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/http.cr#L8"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI"},{"html_id":"money/Money/Currency/RateProvider/BitPay","kind":"class","full_name":"Money::Currency::RateProvider::BitPay","name":"BitPay"},{"html_id":"money/Money/Currency/RateProvider/CBR","kind":"class","full_name":"Money::Currency::RateProvider::CBR","name":"CBR"},{"html_id":"money/Money/Currency/RateProvider/Coinbase","kind":"class","full_name":"Money::Currency::RateProvider::Coinbase","name":"Coinbase"},{"html_id":"money/Money/Currency/RateProvider/CoinGecko","kind":"class","full_name":"Money::Currency::RateProvider::CoinGecko","name":"CoinGecko"},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer"},{"html_id":"money/Money/Currency/RateProvider/CoinMarketCap","kind":"class","full_name":"Money::Currency::RateProvider::CoinMarketCap","name":"CoinMarketCap"},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon"},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer"},{"html_id":"money/Money/Currency/RateProvider/ECB","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB"},{"html_id":"money/Money/Currency/RateProvider/Exchangerate","kind":"class","full_name":"Money::Currency::RateProvider::Exchangerate","name":"Exchangerate"},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI"},{"html_id":"money/Money/Currency/RateProvider/Fixer","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer"},{"html_id":"money/Money/Currency/RateProvider/FloatRates","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates"},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/FXFeed","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed"},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI"},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI"},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph"},{"html_id":"money/Money/Currency/RateProvider/NBP","kind":"class","full_name":"Money::Currency::RateProvider::NBP","name":"NBP"},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates"},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Module containing common HTTP methods used by currency rate providers.","summary":"<p>Module containing common HTTP methods used by currency rate providers.</p>","instance_methods":[{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":true,"location":{"filename":"src/money/currency/rate_provider/http.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/http.cr#L10"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":""},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/ManyToOne","path":"Money/Currency/RateProvider/ManyToOne.html","kind":"module","full_name":"Money::Currency::RateProvider::ManyToOne","name":"ManyToOne","abstract":false,"locations":[{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money/Currency/RateProvider/CBR","kind":"class","full_name":"Money::Currency::RateProvider::CBR","name":"CBR"},{"html_id":"money/Money/Currency/RateProvider/NBP","kind":"class","full_name":"Money::Currency::RateProvider::NBP","name":"NBP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","abstract":false,"location":{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L9"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_143 = @base_currency_codes).nil?\n  @base_currency_codes = (base_exchange_rates.map(&.base))\nelse\n  __temp_143\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L13"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"if target.code == target_currency_code\nelse\n  return\nend\n\nbase_exchange_rates\n  .find() do |__arg1| __arg1.base == base.code end\n"},"external_var":false},{"html_id":"target_currency_code:String-instance-method","name":"target_currency_code","abstract":true,"location":{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L3"},"def":{"name":"target_currency_code","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","abstract":false,"location":{"filename":"src/money/currency/rate_provider/many_to_one.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/many_to_one.cr#L5"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_142 = @target_currency_codes).nil?\n  @target_currency_codes = ([target_currency_code])\nelse\n  __temp_142\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","path":"Money/Currency/RateProvider/MetalpriceAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[MetalpriceAPI](https://metalpriceapi.com/) currency rate provider.","summary":"<p><a href=\"https://metalpriceapi.com/\">MetalpriceAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"metalprice_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[MetalpriceAPI](https://metalpriceapi.com/) currency rate provider.","summary":"<p><a href=\"https://metalpriceapi.com/\">MetalpriceAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[MetalpriceAPI](https://metalpriceapi.com/) currency rate provider.","summary":"<p><a href=\"https://metalpriceapi.com/\">MetalpriceAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_193 = @api_key).nil?\n  @api_key = (option_from_env(\"METALPRICE_API_KEY\"))\nelse\n  __temp_193\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://metalpriceapi.com/documentation#api_symbol>","summary":"<p><a href=\"https://metalpriceapi.com/documentation#api_symbol\">https://metalpriceapi.com/documentation#api_symbol</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_195 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/symbols\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(ResponseError.new(result.dig(\"error\", \"statusCode\"), result.dig?(\"error\", \"message\")))\n      end\n\n      currencies = result[\"symbols\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_195\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://metalpriceapi.com/documentation#api_realtime>","summary":"<p><a href=\"https://metalpriceapi.com/documentation#api_realtime\">https://metalpriceapi.com/documentation#api_realtime</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(ResponseError.new(result.dig(\"error\", \"statusCode\"), result.dig?(\"error\", \"message\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/metalprice_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/metalprice_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_194 = @host).nil?\n  @host = (URI.parse(\"https://api.metalpriceapi.com\"))\nelse\n  __temp_194\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","path":"Money/Currency/RateProvider/MoneyMorph.html","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[MoneyMorph](https://moneymorph.dev/) currency rate provider.","summary":"<p><a href=\"https://moneymorph.dev/\">MoneyMorph</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"money_morph\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[MoneyMorph](https://moneymorph.dev/) currency rate provider.","summary":"<p><a href=\"https://moneymorph.dev/\">MoneyMorph</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[MoneyMorph](https://moneymorph.dev/) currency rate provider.","summary":"<p><a href=\"https://moneymorph.dev/\">MoneyMorph</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L14"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://moneymorph.dev/#currencies>","summary":"<p><a href=\"https://moneymorph.dev/#currencies\">https://moneymorph.dev/#currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L18"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_197 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    request(\"/api/currencies\") do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_197\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://moneymorph.dev/#latest>","summary":"<p><a href=\"https://moneymorph.dev/#latest\">https://moneymorph.dev/#latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L31"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/api/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/money_morph.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/money_morph.cr#L10"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_196 = @host).nil?\n  @host = (URI.parse(\"https://moneymorph.dev\"))\nelse\n  __temp_196\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/NBP","path":"Money/Currency/RateProvider/NBP.html","kind":"class","full_name":"Money::Currency::RateProvider::NBP","name":"NBP","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/ManyToOne","kind":"module","full_name":"Money::Currency::RateProvider::ManyToOne","name":"ManyToOne"},{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L8"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider/ManyToOne","kind":"module","full_name":"Money::Currency::RateProvider::ManyToOne","name":"ManyToOne"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider using data sourced from a daily feed of\n[Polish National Bank](https://nbp.pl/).\n\nNOTE: Supports only `PLN`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://nbp.pl/\">Polish National Bank</a>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L8"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"nbp\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[Polish National Bank](https://nbp.pl/).\n\nNOTE: Supports only `PLN`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://nbp.pl/\">Polish National Bank</a>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L8"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[Polish National Bank](https://nbp.pl/).\n\nNOTE: Supports only `PLN`-targeted conversions.","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://nbp.pl/\">Polish National Bank</a>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L8"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L22"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L18"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_198 = @host).nil?\n  @host = (URI.parse(\"https://api.nbp.pl\"))\nelse\n  __temp_198\nend"},"external_var":false},{"html_id":"target_currency_code:String-instance-method","name":"target_currency_code","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/nbp.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/nbp.cr#L14"},"def":{"name":"target_currency_code","return_type":"String","visibility":"Public","body":"\"PLN\""},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/NotFoundError","path":"Money/Currency/RateProvider/NotFoundError.html","kind":"class","full_name":"Money::Currency::RateProvider::NotFoundError","name":"NotFoundError","abstract":false,"superclass":{"html_id":"money/Money/Registry/NotFoundError","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError"},"ancestors":[{"html_id":"money/Money/Registry/NotFoundError","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError"},{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Raised when trying to find an unknown rate provider.","summary":"<p>Raised when trying to find an unknown rate provider.</p>","constructors":[{"html_id":"new(*,key:String)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(*, key : String)","args_html":"(*, key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider.cr#L7"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(key: key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Null","path":"Money/Currency/RateProvider/Null.html","kind":"class","full_name":"Money::Currency::RateProvider::Null","name":"Null","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L3"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider that always returns `nil`.","summary":"<p>Currency rate provider that always returns <code>nil</code>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L3"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"null\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Currency rate provider that always returns `nil`.","summary":"<p>Currency rate provider that always returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L3"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider that always returns `nil`.","summary":"<p>Currency rate provider that always returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L3"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L4"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L7"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_199 = @base_currency_codes).nil?\n  @base_currency_codes = ([] of String)\nelse\n  __temp_199\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/null.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/null.cr#L11"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"nil"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/OneToMany","path":"Money/Currency/RateProvider/OneToMany.html","kind":"module","full_name":"Money::Currency::RateProvider::OneToMany","name":"OneToMany","abstract":false,"locations":[{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money/Currency/RateProvider/BitPay","kind":"class","full_name":"Money::Currency::RateProvider::BitPay","name":"BitPay"},{"html_id":"money/Money/Currency/RateProvider/CoinGecko","kind":"class","full_name":"Money::Currency::RateProvider::CoinGecko","name":"CoinGecko"},{"html_id":"money/Money/Currency/RateProvider/ECB","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"instance_methods":[{"html_id":"base_currency_code:String-instance-method","name":"base_currency_code","abstract":true,"location":{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L3"},"def":{"name":"base_currency_code","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","abstract":false,"location":{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L5"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_144 = @base_currency_codes).nil?\n  @base_currency_codes = ([base_currency_code])\nelse\n  __temp_144\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L13"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"if base.code == base_currency_code\nelse\n  return\nend\n\ntarget_exchange_rates\n  .find() do |__arg1| __arg1.target == target.code end\n"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","abstract":false,"location":{"filename":"src/money/currency/rate_provider/one_to_many.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/one_to_many.cr#L9"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_145 = @target_currency_codes).nil?\n  @target_currency_codes = (target_exchange_rates.map(&.target))\nelse\n  __temp_145\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","path":"Money/Currency/RateProvider/OpenExchangeRates.html","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Open Exchange Rates](https://openexchangerates.org/) currency rate provider.","summary":"<p><a href=\"https://openexchangerates.org/\">Open Exchange Rates</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"open_exchange_rates\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[Open Exchange Rates](https://openexchangerates.org/) currency rate provider.","summary":"<p><a href=\"https://openexchangerates.org/\">Open Exchange Rates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Open Exchange Rates](https://openexchangerates.org/) currency rate provider.","summary":"<p><a href=\"https://openexchangerates.org/\">Open Exchange Rates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,app_id:Nil|String=nil,host:Nil|URI=nil,show_alternative:Bool=true)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"app_id","default_value":"nil","external_name":"app_id","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"show_alternative","default_value":"true","external_name":"show_alternative","restriction":"::Bool"}],"args_string":"(*, app_id : Nil | String = nil, host : Nil | URI = nil, show_alternative : Bool = true)","args_html":"(*, app_id : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>, show_alternative : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L18"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"app_id","default_value":"nil","external_name":"app_id","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"show_alternative","default_value":"true","external_name":"show_alternative","restriction":"::Bool"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(app_id: app_id, host: host, show_alternative: show_alternative)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"app_id:String-instance-method","name":"app_id","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L10"},"def":{"name":"app_id","return_type":"String","visibility":"Public","body":"if (__temp_200 = @app_id).nil?\n  @app_id = (option_from_env(\"OPEN_EXCHANGE_RATES_APP_ID\"))\nelse\n  __temp_200\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://docs.openexchangerates.org/reference/currencies-json>","summary":"<p><a href=\"https://docs.openexchangerates.org/reference/currencies-json\">https://docs.openexchangerates.org/reference/currencies-json</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L27"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_202 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      app_id: app_id,\n      show_alternative: show_alternative?.to_s,\n    }\n    request(\"/api/currencies.json\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_202\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://docs.openexchangerates.org/reference/latest-json>","summary":"<p><a href=\"https://docs.openexchangerates.org/reference/latest-json\">https://docs.openexchangerates.org/reference/latest-json</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  app_id: app_id,\n  base: base.code,\n  symbols: target.code,\n  show_alternative: show_alternative?.to_s,\n}\nrequest(\"/api/latest.json\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_201 = @host).nil?\n  @host = (URI.parse(\"https://openexchangerates.org\"))\nelse\n  __temp_201\nend"},"external_var":false},{"html_id":"show_alternative?:Bool-instance-method","name":"show_alternative?","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/open_exchange_rates.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/open_exchange_rates.cr#L16"},"def":{"name":"show_alternative?","visibility":"Public","body":"@show_alternative"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/RequestError","path":"Money/Currency/RateProvider/RequestError.html","kind":"class","full_name":"Money::Currency::RateProvider::RequestError","name":"RequestError","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/error.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L12"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Raised when a request to a rate provider fails.","summary":"<p>Raised when a request to a rate provider fails.</p>","constructors":[{"html_id":"new(status)-class-method","name":"new","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""}],"args_string":"(status)","args_html":"(status)","location":{"filename":"src/money/currency/rate_provider/error.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L13"},"def":{"name":"new","args":[{"name":"status","external_name":"status","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(status)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/RequiredOptionError","path":"Money/Currency/RateProvider/RequiredOptionError.html","kind":"class","full_name":"Money::Currency::RateProvider::RequiredOptionError","name":"RequiredOptionError","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/error.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L8"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Raised when a rate provider is missing a required option.","summary":"<p>Raised when a rate provider is missing a required option.</p>"},{"html_id":"money/Money/Currency/RateProvider/ResponseError","path":"Money/Currency/RateProvider/ResponseError.html","kind":"class","full_name":"Money::Currency::RateProvider::ResponseError","name":"ResponseError","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/error.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L19"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Raised when a rate provider returns an error.","summary":"<p>Raised when a rate provider returns an error.</p>","constructors":[{"html_id":"new(code,detail=nil)-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":""},{"name":"detail","default_value":"nil","external_name":"detail","restriction":""}],"args_string":"(code, detail = nil)","args_html":"(code, detail = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/error.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/error.cr#L20"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":""},{"name":"detail","default_value":"nil","external_name":"detail","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, detail)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","path":"Money/Currency/RateProvider/UniRateAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[UniRateAPI](https://unirateapi.com/) currency rate provider.","summary":"<p><a href=\"https://unirateapi.com/\">UniRateAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"uni_rate_api\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"[UniRateAPI](https://unirateapi.com/) currency rate provider.","summary":"<p><a href=\"https://unirateapi.com/\">UniRateAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[UniRateAPI](https://unirateapi.com/) currency rate provider.","summary":"<p><a href=\"https://unirateapi.com/\">UniRateAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_203 = @api_key).nil?\n  @api_key = (option_from_env(\"UNIRATE_API_KEY\"))\nelse\n  __temp_203\nend"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://unirateapi.com/apidocs/#/Currency/get_api_currencies>","summary":"<p><a href=\"https://unirateapi.com/apidocs/#/Currency/get_api_currencies\">https://unirateapi.com/apidocs/#/Currency/get_api_currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_205 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/api/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"currencies\"].as_a.map(&.as_s)\n\n      currencies\n    end\n  end)\nelse\n  __temp_205\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://unirateapi.com/apidocs/#/Currency/get_api_rates>","summary":"<p><a href=\"https://unirateapi.com/apidocs/#/Currency/get_api_rates\">https://unirateapi.com/apidocs/#/Currency/get_api_rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  from: base.code,\n  to: target.code,\n}\nrequest(\"/api/rates\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = result[\"rate\"].to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/providers/uni_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_provider/providers/uni_rate_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_204 = @host).nil?\n  @host = (URI.parse(\"https://api.unirateapi.com\"))\nelse\n  __temp_204\nend"},"external_var":false}]}]},{"html_id":"money/Money/Currency/RateStore","path":"Money/Currency/RateStore.html","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore","abstract":true,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"money/Money/Registry","kind":"module","full_name":"Money::Registry","name":"Registry"}],"subclasses":[{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"class_methods":[{"html_id":"find(name:String|Symbol):Money::Currency::RateStore.class-class-method","name":"find","doc":"Returns the `Money::Currency::RateStore.class` for the given *name* if found,\nraises `Money::Registry::NotFoundError` otherwise.","summary":"<p>Returns the <code>Money::Currency::RateStore.class</code> for the given <em>name</em> if found, raises <code><a href=\"../../Money/Registry/NotFoundError.html\">Money::Registry::NotFoundError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol) : Money::Currency::RateStore.class","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol) : <span class=\"t\">Money</span><span class=\"t\">::</span><span class=\"t\">Currency</span><span class=\"t\">::</span><span class=\"t\">RateStore</span>.<span class=\"k\">class</span>","def":{"name":"find","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"return_type":"Money::Currency::RateStore.class","visibility":"Public","body":"(find?(name)) ||\n(\n  {% if @type.has_constant?(:NotFoundError) %}\n              raise NotFoundError.new(key: name.to_s)\n            {% else %}\n              raise Money::Registry::NotFoundError.new(key: name.to_s)\n            {% end %}\n)"},"external_var":false},{"html_id":"find?(name:String|Symbol):Money::Currency::RateStore.class|Nil-class-method","name":"find?","doc":"Returns the `Money::Currency::RateStore.class` for the given *name* if found,\n`nil` otherwise.","summary":"<p>Returns the <code>Money::Currency::RateStore.class</code> for the given <em>name</em> if found, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol) : Money::Currency::RateStore.class | Nil","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol) : <span class=\"t\">Money</span><span class=\"t\">::</span><span class=\"t\">Currency</span><span class=\"t\">::</span><span class=\"t\">RateStore</span>.<span class=\"k\">class</span> | Nil","def":{"name":"find?","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"return_type":"Money::Currency::RateStore.class | Nil","visibility":"Public","body":"registry[name.to_s.underscore]?"},"external_var":false},{"html_id":"registry-class-method","name":"registry","doc":"All registered objects.","summary":"<p>All registered objects.</p>","abstract":false,"def":{"name":"registry","visibility":"Public","body":"@@registry"},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Alias of `Converter.from_yaml`.","summary":"<p>Alias of <code>Converter.from_yaml</code>.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"Converter.from_yaml(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Alias of `Converter.from_json`.","summary":"<p>Alias of <code>Converter.from_json</code>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"Converter.from_json(pull)"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,__context_for_yaml_serializablectx:YAML::ParseContext,__node_for_yaml_serializablenode:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"args_string":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","args_html":"(*, __context_for_yaml_serializable ctx : YAML::ParseContext, __node_for_yaml_serializable node : YAML::Nodes::Node)","def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ctx","external_name":"__context_for_yaml_serializable","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"__node_for_yaml_serializable","restriction":"::YAML::Nodes::Node"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__context_for_yaml_serializable: ctx, __node_for_yaml_serializable: node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,ttl:Time::Span|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"args_string":"(*, ttl : Time::Span | Nil = nil)","args_html":"(*, ttl : Time::Span | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_store.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L22"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(ttl: ttl)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"<<(rate:Rate):self-instance-method","name":"<<","doc":"Registers a conversion rate.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore << Rate.new(\n  Money::Currency.find(\"USD\"),\n  Money::Currency.find(\"CAD\"),\n  1.24515.to_big_d\n)\nstore << Rate.new(\n  Money::Currency.find(\"CAD\"),\n  Money::Currency.find(\"USD\"),\n  0.803115.to_big_d\n)\n```","summary":"<p>Registers a conversion rate.</p>","abstract":false,"args":[{"name":"rate","external_name":"rate","restriction":"Rate"}],"args_string":"(rate : Rate) : self","args_html":"(rate : <a href=\"../../Money/Currency/Rate.html\">Rate</a>) : <span class=\"k\">self</span>","location":{"filename":"src/money/currency/rate_store.cr","line_number":81,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L81"},"def":{"name":"<<","args":[{"name":"rate","external_name":"rate","restriction":"Rate"}],"return_type":"self","visibility":"Public","body":"transaction(mutable: true) do\n  set_rate(rate)\nend\nself\n"},"external_var":false},{"html_id":"<<(rates:Enumerable(Rate)):self-instance-method","name":"<<","doc":"Registers multiple conversion rates.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore << [\n  Rate.new(\n    Money::Currency.find(\"USD\"),\n    Money::Currency.find(\"CAD\"),\n    1.24515.to_big_d\n  ),\n  Rate.new(\n    Money::Currency.find(\"CAD\"),\n    Money::Currency.find(\"USD\"),\n    0.803115.to_big_d\n  ),\n]\n```","summary":"<p>Registers multiple conversion rates.</p>","abstract":false,"args":[{"name":"rates","external_name":"rates","restriction":"Enumerable(Rate)"}],"args_string":"(rates : Enumerable(Rate)) : self","args_html":"(rates : Enumerable(<a href=\"../../Money/Currency/Rate.html\">Rate</a>)) : <span class=\"k\">self</span>","location":{"filename":"src/money/currency/rate_store.cr","line_number":105,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L105"},"def":{"name":"<<","args":[{"name":"rates","external_name":"rates","restriction":"Enumerable(Rate)"}],"return_type":"self","visibility":"Public","body":"transaction(mutable: true) do\n  set_rates(rates)\nend\nself\n"},"external_var":false},{"html_id":"[](base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal-instance-method","name":"[]","doc":"Retrieves the rate for the given currency pair or raises\n`UnknownRateError` if not found.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\n\nstore[\"USD\", \"CAD\"] # => 1.24515\nstore[\"CAD\", \"USD\"] # raises Money::UnknownRateError\n```","summary":"<p>Retrieves the rate for the given currency pair or raises <code><a href=\"../../Money/UnknownRateError.html\">UnknownRateError</a></code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal","location":{"filename":"src/money/currency/rate_store.cr","line_number":145,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L145"},"def":{"name":"[]","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal","visibility":"Public","body":"self[base, target]? ||\n(raise(UnknownRateError.new(base, target)))"},"external_var":false},{"html_id":"[]=(base:String|Symbol|Currency,target:String|Symbol|Currency,value:Number):Nil-instance-method","name":"[]=","doc":"Registers a conversion rate.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\nstore[\"CAD\", \"USD\"] = 0.803115\n```","summary":"<p>Registers a conversion rate.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"},{"name":"value","external_name":"value","restriction":"Number"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency, value : Number) : Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, value : <a href=\"../../Number.html\">Number</a>) : Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":57,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L57"},"def":{"name":"[]=","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"},{"name":"value","external_name":"value","restriction":"Number"}],"return_type":"Nil","visibility":"Public","body":"base, target = Currency[base], Currency[target]\n\ntransaction(mutable: true) do\n  set_rate(Rate.new(base, target, value.to_big_d))\nend\n"},"external_var":false},{"html_id":"[]?(base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal|Nil-instance-method","name":"[]?","doc":"Retrieves the rate for the given currency pair or `nil` if not found.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\n\nstore[\"USD\", \"CAD\"]? # => 1.24515\nstore[\"CAD\", \"USD\"]? # => nil\n```","summary":"<p>Retrieves the rate for the given currency pair or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal | Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal | Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":124,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L124"},"def":{"name":"[]?","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal | ::Nil","visibility":"Public","body":"base, target = Currency[base], Currency[target]\n\ntransaction do\n  if rate = get_rate?(base, target)\n    stale_rate?(rate) ? nil : rate.value\n  end\nend\n"},"external_var":false},{"html_id":"clear(base:Currency|Nil=nil,target:Currency|Nil=nil):Nil-instance-method","name":"clear","doc":"Removes rates for the given *base* (and if given, *target*) currencies.\nRemoves all rates if no arguments are given.","summary":"<p>Removes rates for the given <em>base</em> (and if given, <em>target</em>) currencies.</p>","abstract":false,"args":[{"name":"base","default_value":"nil","external_name":"base","restriction":"Currency | ::Nil"},{"name":"target","default_value":"nil","external_name":"target","restriction":"Currency | ::Nil"}],"args_string":"(base : Currency | Nil = nil, target : Currency | Nil = nil) : Nil","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a> | Nil = <span class=\"n\">nil</span>, target : <a href=\"../../Money/Currency.html\">Currency</a> | Nil = <span class=\"n\">nil</span>) : Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":185,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L185"},"def":{"name":"clear","args":[{"name":"base","default_value":"nil","external_name":"base","restriction":"Currency | ::Nil"},{"name":"target","default_value":"nil","external_name":"target","restriction":"Currency | ::Nil"}],"return_type":"Nil","visibility":"Public","body":"transaction(mutable: true) do\n  if base || target\n    clear_rates(base, target)\n  else\n    clear_rates\n  end\nend"},"external_var":false},{"html_id":"compact:Nil-instance-method","name":"compact","doc":"Removes stale rates (only if `#ttl` is set).","summary":"<p>Removes stale rates (only if <code><a href=\"../../Money/Currency/RateStore.html#ttl%3ATime%3A%3ASpan%7CNil-instance-method\">#ttl</a></code> is set).</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":201,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L201"},"def":{"name":"compact","return_type":"Nil","visibility":"Public","body":"if ttl\nelse\n  return\nend\n\nstale_rates = ([] of Rate).tap do |ary|\n  each(include_stale: true) do |rate|\n    if stale_rate?(rate)\n      ary << rate\n    end\n  end\nend\nif stale_rates.empty?\n  return\nend\n\ntransaction(mutable: true) do\n  clear_rates(stale_rates)\nend\n"},"external_var":false},{"html_id":"each(*,include_stale:Bool=false,&:Rate->):Nil-instance-method","name":"each","doc":"Iterates over list of `Rate` objects.\n\n```\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Iterates over list of <code><a href=\"../../Money/Currency/Rate.html\">Rate</a></code> objects.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"include_stale","default_value":"false","external_name":"include_stale","restriction":"Bool"}],"args_string":"(*, include_stale : Bool = false, & : Rate -> ) : Nil","args_html":"(*, include_stale : Bool = <span class=\"n\">false</span>, & : <a href=\"../../Money/Currency/Rate.html\">Rate</a> -> ) : Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":160,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L160"},"def":{"name":"each","args":[{"name":"","external_name":"","restriction":""},{"name":"include_stale","default_value":"false","external_name":"include_stale","restriction":"Bool"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Rate ->)"},"return_type":"Nil","visibility":"Public","body":"transaction do\n  each_rate do |rate|\n    if include_stale || (!(stale_rate?(rate)))\n      yield rate\n    end\n  end\nend"},"external_var":false},{"html_id":"rates:Array(Rate)-instance-method","name":"rates","doc":"Alias of `#to_a`.","summary":"<p>Alias of <code>#to_a</code>.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":170,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L170"},"def":{"name":"rates","return_type":"Array(Rate)","visibility":"Public","body":"to_a"},"external_var":false},{"html_id":"transaction(*,mutable:Bool=false,&:->_)-instance-method","name":"transaction","doc":"Wraps block execution in a concurrency-safe transaction.","summary":"<p>Wraps block execution in a concurrency-safe transaction.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"args_string":"(*, mutable : Bool = false, & :  -> _)","args_html":"(*, mutable : Bool = <span class=\"n\">false</span>, & :  -> _)","location":{"filename":"src/money/currency/rate_store.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L31"},"def":{"name":"transaction","args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"splat_index":0,"yields":0,"block_arity":0,"block_arg":{"name":"","external_name":"","restriction":"(-> _)"},"visibility":"Public","body":"mutex.synchronize do yield end"},"external_var":false},{"html_id":"ttl:Time::Span|Nil-instance-method","name":"ttl","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L20"},"def":{"name":"ttl","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@ttl"},"external_var":false},{"html_id":"ttl=(ttl:Time::Span|Nil)-instance-method","name":"ttl=","abstract":false,"args":[{"name":"ttl","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"args_string":"(ttl : Time::Span | Nil)","args_html":"(ttl : Time::Span | Nil)","location":{"filename":"src/money/currency/rate_store.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L20"},"def":{"name":"ttl=","args":[{"name":"ttl","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"visibility":"Public","body":"@ttl = ttl"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/RateStore/Converter","path":"Money/Currency/RateStore/Converter.html","kind":"module","full_name":"Money::Currency::RateStore::Converter","name":"Converter","abstract":false,"locations":[],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"money/Money/Registry/Converter/JSON","kind":"module","full_name":"Money::Registry::Converter::JSON","name":"JSON"},{"html_id":"money/Money/Registry/Converter/YAML","kind":"module","full_name":"Money::Registry::Converter::YAML","name":"YAML"}],"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"}},{"html_id":"money/Money/Currency/RateStore/File","path":"Money/Currency/RateStore/File.html","kind":"class","full_name":"Money::Currency::RateStore::File","name":"File","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"},"ancestors":[{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"},{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store/file.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L23"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Class for storage of exchange rate pairs in a JSON file.\n\nNOTE: Exchange rates are stored in memory and are automatically loaded from\n(upon initialization), and persisted to a JSON file (on every mutable\ntransaction commit).\n\n```\nstore = Money::Currency::RateStore::File.new(\"path/to/file.json\")\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n\n# Save rates\nstore.save\n```","summary":"<p>Class for storage of exchange rate pairs in a JSON file.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L23"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"file\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Class for storage of exchange rate pairs in a JSON file.\n\nNOTE: Exchange rates are stored in memory and are automatically loaded from\n(upon initialization), and persisted to a JSON file (on every mutable\ntransaction commit).\n\n```\nstore = Money::Currency::RateStore::File.new(\"path/to/file.json\")\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n\n# Save rates\nstore.save\n```","summary":"<p>Class for storage of exchange rate pairs in a JSON file.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L23"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Class for storage of exchange rate pairs in a JSON file.\n\nNOTE: Exchange rates are stored in memory and are automatically loaded from\n(upon initialization), and persisted to a JSON file (on every mutable\ntransaction commit).\n\n```\nstore = Money::Currency::RateStore::File.new(\"path/to/file.json\")\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n\n# Save rates\nstore.save\n```","summary":"<p>Class for storage of exchange rate pairs in a JSON file.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L23"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(path:Path|String,*,ttl:Time::Span|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path | String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"args_string":"(path : Path | String, *, ttl : Time::Span | Nil = nil)","args_html":"(path : Path | <a href=\"../../../String.html\">String</a>, *, ttl : Time::Span | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":34,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L34"},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":"Path | String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(path, ttl: ttl)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"load:Nil-instance-method","name":"load","doc":"Loads rates from a JSON file.","summary":"<p>Loads rates from a JSON file.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":55,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L55"},"def":{"name":"load","return_type":"Nil","visibility":"Public","body":"transaction do\n  if ::File.exists?(path)\n  else\n    return\n  end\n\n  ::File.open(path) do |file|\n    rates = Array(Rate).from_json(file)\n\n    clear_rates\n    set_rates(rates)\n  end\nend"},"external_var":false},{"html_id":"path:Path-instance-method","name":"path","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L24"},"def":{"name":"path","return_type":"Path","visibility":"Public","body":"@path"},"external_var":false},{"html_id":"path=(path:Path)-instance-method","name":"path=","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path)","args_html":"(path : Path)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":26,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L26"},"def":{"name":"path=","args":[{"name":"path","external_name":"path","restriction":"Path"}],"visibility":"Public","body":"path = path.expand(home: true)\nif @path == path\n  return\nend\n\n@path = path\nload\n"},"external_var":false},{"html_id":"save:Nil-instance-method","name":"save","doc":"Saves rates to a JSON file.","summary":"<p>Saves rates to a JSON file.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":72,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L72"},"def":{"name":"save","return_type":"Nil","visibility":"Public","body":"transaction do\n\n  ::Dir.mkdir_p(path.dirname)\n\n\n  ::File.atomic_write(path) do |file|\n    rates.to_pretty_json(file)\n  end\nend"},"external_var":false},{"html_id":"transaction(*,mutable:Bool=false,&:->_)-instance-method","name":"transaction","doc":"Wraps block execution in a concurrency-safe transaction.","summary":"<p>Wraps block execution in a concurrency-safe transaction.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"args_string":"(*, mutable : Bool = false, & :  -> _)","args_html":"(*, mutable : Bool = <span class=\"n\">false</span>, & :  -> _)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":46,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/file.cr#L46"},"def":{"name":"transaction","args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"splat_index":0,"yields":0,"block_arity":0,"block_arg":{"name":"","external_name":"","restriction":"(-> _)"},"visibility":"Public","body":"super(mutable: mutable) do\n  (yield).tap do\n    if mutable\n      save\n    end\n  end\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateStore/Memory","path":"Money/Currency/RateStore/Memory.html","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"ancestors":[{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store/memory.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/memory.cr#L14"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/Currency/RateStore/File","kind":"class","full_name":"Money::Currency::RateStore::File","name":"File"}],"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Class for in-memory concurrency-safe storage of exchange rate pairs.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Class for in-memory concurrency-safe storage of exchange rate pairs.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the class key.","summary":"<p>Returns the class key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/memory.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/memory.cr#L14"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"memory\""},"external_var":false}],"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":"Class for in-memory concurrency-safe storage of exchange rate pairs.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Class for in-memory concurrency-safe storage of exchange rate pairs.</p>","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/money/currency/rate_store/memory.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/memory.cr#L14"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Class for in-memory concurrency-safe storage of exchange rate pairs.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Class for in-memory concurrency-safe storage of exchange rate pairs.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_store/memory.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store/memory.cr#L14"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false}]},{"html_id":"money/Money/Currency/RateStore/NotFoundError","path":"Money/Currency/RateStore/NotFoundError.html","kind":"class","full_name":"Money::Currency::RateStore::NotFoundError","name":"NotFoundError","abstract":false,"superclass":{"html_id":"money/Money/Registry/NotFoundError","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError"},"ancestors":[{"html_id":"money/Money/Registry/NotFoundError","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError"},{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Raised when trying to find an unknown rate store.","summary":"<p>Raised when trying to find an unknown rate store.</p>","constructors":[{"html_id":"new(*,key:String)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(*, key : String)","args_html":"(*, key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_store.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/rate_store.cr#L7"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(key: key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]},{"html_id":"money/Money/Currency/Type","path":"Money/Currency/Type.html","kind":"enum","full_name":"Money::Currency::Type","name":"Type","abstract":false,"ancestors":[{"html_id":"money/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/type.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/type.cr#L3"}],"repository_name":"money","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Metal","name":"Metal","value":"0"},{"id":"Fiat","name":"Fiat","value":"1"},{"id":"Crypto","name":"Crypto","value":"2"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":"Currency type.","summary":"<p>Currency type.</p>","instance_methods":[{"html_id":"crypto?-instance-method","name":"crypto?","doc":"Returns `true` if this enum value equals `Crypto`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Crypto\">Crypto</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/type.cr#L6"},"def":{"name":"crypto?","visibility":"Public","body":"self == Crypto"},"external_var":false},{"html_id":"fiat?-instance-method","name":"fiat?","doc":"Returns `true` if this enum value equals `Fiat`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Fiat\">Fiat</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/type.cr#L5"},"def":{"name":"fiat?","visibility":"Public","body":"self == Fiat"},"external_var":false},{"html_id":"metal?-instance-method","name":"metal?","doc":"Returns `true` if this enum value equals `Metal`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Metal\">Metal</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/type.cr#L4"},"def":{"name":"metal?","visibility":"Public","body":"self == Metal"},"external_var":false}]},{"html_id":"money/Money/Currency/Validation","path":"Money/Currency/Validation.html","kind":"module","full_name":"Money::Currency::Validation","name":"Validation","abstract":false,"locations":[{"filename":"src/money/currency/validation.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/currency/validation.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"}}]},{"html_id":"money/Money/DifferentCurrencyError","path":"Money/DifferentCurrencyError.html","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L56"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised by `Currency::Exchange::SingleCurrency` when trying to exchange currencies.","summary":"<p>Raised by <code><a href=\"../Money/Currency/Exchange/SingleCurrency.html\">Currency::Exchange::SingleCurrency</a></code> when trying to exchange currencies.</p>","constructors":[{"html_id":"new(base:Currency,target:Currency)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency)","args_html":"(base : <a href=\"../Money/Currency.html\">Currency</a>, target : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/error.cr","line_number":57,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L57"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Error","path":"Money/Error.html","kind":"class","full_name":"Money::Error","name":"Error","abstract":false,"superclass":{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L3"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/AggregateError","kind":"class","full_name":"Money::AggregateError","name":"AggregateError"},{"html_id":"money/Money/Currency/NotFoundError","kind":"class","full_name":"Money::Currency::NotFoundError","name":"NotFoundError"},{"html_id":"money/Money/Currency/RateProvider/Error","kind":"class","full_name":"Money::Currency::RateProvider::Error","name":"Error"},{"html_id":"money/Money/DifferentCurrencyError","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError"},{"html_id":"money/Money/Parse/Error","kind":"class","full_name":"Money::Parse::Error","name":"Error"},{"html_id":"money/Money/Registry/NotFoundError","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError"},{"html_id":"money/Money/UndefinedCurrencyError","kind":"class","full_name":"Money::UndefinedCurrencyError","name":"UndefinedCurrencyError"},{"html_id":"money/Money/UndefinedSmallestDenominationError","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError"},{"html_id":"money/Money/UnknownRateError","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Base exception class.","summary":"<p>Base exception class.</p>"},{"html_id":"money/Money/Exchange","path":"Money/Exchange.html","kind":"module","full_name":"Money::Exchange","name":"Exchange","abstract":false,"locations":[{"filename":"src/money/money/exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/exchange.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"exchange_to(other_currency:String|Symbol|Currency,exchange=Money.default_exchange):Money-instance-method","name":"exchange_to","doc":"Exchanges `self` to a new `Money` object in *other_currency*.\n\n```\nMoney.default_exchange.rate_store[\"USD\", \"EUR\"] = 1.23\nMoney.default_exchange.rate_store[\"EUR\", \"USD\"] = 0.82\n\nMoney.new(1_00, \"USD\").exchange_to(\"EUR\") # => Money(@amount=1.23, @currency=\"EUR\")\nMoney.new(1_00, \"EUR\").exchange_to(\"USD\") # => Money(@amount=0.82, @currency=\"USD\")\n```","summary":"<p>Exchanges <code>self</code> to a new <code><a href=\"../Money.html\">Money</a></code> object in <em>other_currency</em>.</p>","abstract":false,"args":[{"name":"other_currency","external_name":"other_currency","restriction":"String | Symbol | Currency"},{"name":"exchange","default_value":"Money.default_exchange","external_name":"exchange","restriction":""}],"args_string":"(other_currency : String | Symbol | Currency, exchange = Money.default_exchange) : Money","args_html":"(other_currency : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>, exchange = <span class=\"t\">Money</span>.default_exchange) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/exchange.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/exchange.cr#L12"},"def":{"name":"exchange_to","args":[{"name":"other_currency","external_name":"other_currency","restriction":"String | Symbol | Currency"},{"name":"exchange","default_value":"Money.default_exchange","external_name":"exchange","restriction":""}],"return_type":"Money","visibility":"Public","body":"other_currency = Currency[other_currency]\ncase\nwhen other_currency == currency\n  self\nwhen zero?\n  with_currency(other_currency)\nelse\n  exchange.exchange(self, other_currency)\nend\n"},"external_var":false},{"html_id":"with_same_currency(other:Money,&)-instance-method","name":"with_same_currency","doc":"Yields *other* `Money` object exchanged to `self.currency`.","summary":"<p>Yields <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object exchanged to <code>self.currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money, &)","args_html":"(other : <a href=\"../Money.html\">Money</a>, &)","location":{"filename":"src/money/money/exchange.cr","line_number":25,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/exchange.cr#L25"},"def":{"name":"with_same_currency","args":[{"name":"other","external_name":"other","restriction":"Money"}],"yields":1,"block_arity":1,"visibility":"Public","body":"yield other.exchange_to(currency)"},"external_var":false}]},{"html_id":"money/Money/Formatting","path":"Money/Formatting.html","kind":"module","full_name":"Money::Formatting","name":"Formatting","abstract":false,"locations":[{"filename":"src/money/money/formatting.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/formatting.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"format(format:String|Nil=nil,*,display_free:String|Nil=nil,sign_positive:Bool=false,html:Bool=false,no_cents:Bool=false,no_cents_if_whole:Bool=false,drop_trailing_zeros:Bool=false,disambiguate:Bool=false,symbol:String|Char|Bool|Nil=true,decimal_mark:String|Char|Bool|Nil=true,thousands_separator:String|Char|Bool|Nil=true):String-instance-method","name":"format","doc":"Creates a formatted price string according to several rules.\n\n### `:format`\n\nThe format string to use for the resulting string.\n\n```\nMoney.us_dollar(-1_23).format(\"%{sign}%{symbol}%{amount}\")    # => \"-$1.23\"\nMoney.us_dollar(-1_23).format(\"%{sign}%{amount} %{currency}\") # => \"-1.23 USD\"\n```\n\nYou can also use it to pass the HTML template string in combination\nwith `:html` option.\n\n```\nMoney.us_dollar(-1_23).format <<-HTML, html: true\n  <span class=\"money\">\n    <span class=\"sign\">%{sign}</span>\n    <span class=\"amount\">%{amount}</span>\n    <span class=\"currency\">%{currency}</span>\n  </span>\n  HTML\n```\n\n### `:display_free`\n\nWhether a zero amount of money should be formatted as the supplied string.\n\n```\nMoney.us_dollar(0).format(display_free: \"gratis\") # => \"gratis\"\nMoney.us_dollar(0).format                         # => \"$0.00\"\n```\n\n### `:sign_positive`\n\nWhether positive numbers should be signed, too.\n\n```\nMoney.new(1_00, \"GBP\").format(sign_positive: true) # => \"+Â£1.00\"\nMoney.new(1_00, \"GBP\").format                      # => \"Â£1.00\"\n```\n\n### `:no_cents`\n\nWhether cents should be omitted.\n\n```\nMoney.us_dollar(1_00).format(no_cents: true) # => \"$1\"\nMoney.us_dollar(5_99).format(no_cents: true) # => \"$5\"\n```\n\n### `:no_cents_if_whole`\n\nWhether cents should be omitted if the cent value is zero.\n\n```\nMoney.us_dollar(100_00).format(no_cents_if_whole: true) # => \"$100\"\nMoney.us_dollar(100_34).format(no_cents_if_whole: true) # => \"$100.34\"\n```\n\n### `:drop_trailing_zeros`\n\nWhether trailing zeros should be omitted.\n\n```\nMoney.new(89000, \"BTC\").format(drop_trailing_zeros: true) # => à¸¿0.00089\nMoney.new(1_10, \"USD\").format(drop_trailing_zeros: true)  # => $1.1\n```\n\n### `:symbol`\n\nSpecifies the currency symbol to be used.\n\n```\nMoney.new(1_00, \"USD\") # => \"$1.00\"\nMoney.new(1_00, \"GBP\") # => \"Â£1.00\"\nMoney.new(1_00, \"EUR\") # => \"â‚¬1.00\"\n\n# Same thing.\nMoney.new(1_00, \"USD\").format(symbol: true) # => \"$1.00\"\nMoney.new(1_00, \"GBP\").format(symbol: true) # => \"Â£1.00\"\nMoney.new(1_00, \"EUR\").format(symbol: true) # => \"â‚¬1.00\"\n\n# You can pass `false`, `nil` or an empty string to disable prepending a money symbol.\nMoney.new(1_00, \"USD\").format(symbol: false) # => \"1.00\"\nMoney.new(1_00, \"USD\").format(symbol: nil)   # => \"1.00\"\nMoney.new(1_00, \"EUR\").format(symbol: \"\")    # => \"1.00\"\n\n# If the symbol for the given currency isn't known, then it will default\n# to \"Â¤\" as symbol.\nMoney.new(1_00, \"XBC\").format(symbol: true) # => \"1.00 Â¤\"\n\n# You can specify a string as value to enforce using a particular symbol.\nMoney.new(1_00, \"XBC\").format(symbol: \"Æ’\") # => \"1.00 Æ’\"\n```\n\n### `:disambiguate`\n\nPrevents the result from being ambiguous due to equal symbols for different currencies.\nUses the `Currency#disambiguate_symbol`.\n\n```\nMoney.new(100_00, \"USD\").format(disambiguate: false) # => \"$100.00\"\nMoney.new(100_00, \"CAD\").format(disambiguate: false) # => \"$100.00\"\nMoney.new(100_00, \"USD\").format(disambiguate: true)  # => \"US$100.00\"\nMoney.new(100_00, \"CAD\").format(disambiguate: true)  # => \"C$100.00\"\n```\n\n### `:decimal_mark`\n\nDecimal mark to use between the whole and fractional parts of the number.\n\n```\n# If `false`, `nil` or empty value is specified, no separator is used.\nMoney.new(1_00, \"USD\").format(decimal_mark: false) # => \"$100\"\nMoney.new(1_00, \"USD\").format(decimal_mark: nil)   # => \"$100\"\nMoney.new(1_00, \"USD\").format(decimal_mark: \"\")    # => \"$100\"\n\n# If a string is specified, it's value is used.\nMoney.new(1_00, \"USD\").format(decimal_mark: \",\") # => \"$1,00\"\n\n# If the separator for a given currency isn't known, then it will default to \".\".\nMoney.new(1_00, \"FOO\").format # => \"$1.00\"\n```\n\n### `:thousands_separator`\n\nThousands separator to use between groups of three digits.\n\n```\n# If `false`, `nil` or empty value is specified, no delimiter is used.\nMoney.new(1_000_00, \"USD\").format(thousands_separator: false) # => \"$1000.00\"\nMoney.new(1_000_00, \"USD\").format(thousands_separator: nil)   # => \"$1000.00\"\nMoney.new(1_000_00, \"USD\").format(thousands_separator: \"\")    # => \"$1000.00\"\n\n# If a string is specified, it's value is used.\nMoney.new(1_000_00, \"USD\").format(thousands_separator: \".\") # => \"$1.000.00\"\n\n# If the delimiter for a given currency isn't known, then it will default to \",\".\nMoney.new(1_000_00, \"FOO\").format # => \"$1,000.00\"\n```\n\n### `:html`\n\nWhether the currency symbol and amount should be HTML-formatted.\n\n```\nMoney.new(100_000_00, \"CHF\").format(html: true) => \"CHF100&#39;000.00\"\n```","summary":"<p>Creates a formatted price string according to several rules.</p>","abstract":false,"args":[{"name":"format","default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"","external_name":"","restriction":""},{"name":"display_free","default_value":"nil","external_name":"display_free","restriction":"String | ::Nil"},{"name":"sign_positive","default_value":"false","external_name":"sign_positive","restriction":"Bool"},{"name":"html","default_value":"false","external_name":"html","restriction":"Bool"},{"name":"no_cents","default_value":"false","external_name":"no_cents","restriction":"Bool"},{"name":"no_cents_if_whole","default_value":"false","external_name":"no_cents_if_whole","restriction":"Bool"},{"name":"drop_trailing_zeros","default_value":"false","external_name":"drop_trailing_zeros","restriction":"Bool"},{"name":"disambiguate","default_value":"false","external_name":"disambiguate","restriction":"Bool"},{"name":"symbol","default_value":"true","external_name":"symbol","restriction":"String | Char | Bool | ::Nil"},{"name":"decimal_mark","default_value":"true","external_name":"decimal_mark","restriction":"String | Char | Bool | ::Nil"},{"name":"thousands_separator","default_value":"true","external_name":"thousands_separator","restriction":"String | Char | Bool | ::Nil"}],"args_string":"(format : String | Nil = nil, *, display_free : String | Nil = nil, sign_positive : Bool = false, html : Bool = false, no_cents : Bool = false, no_cents_if_whole : Bool = false, drop_trailing_zeros : Bool = false, disambiguate : Bool = false, symbol : String | Char | Bool | Nil = true, decimal_mark : String | Char | Bool | Nil = true, thousands_separator : String | Char | Bool | Nil = true) : String","args_html":"(format : <a href=\"../String.html\">String</a> | Nil = <span class=\"n\">nil</span>, *, display_free : <a href=\"../String.html\">String</a> | Nil = <span class=\"n\">nil</span>, sign_positive : Bool = <span class=\"n\">false</span>, html : Bool = <span class=\"n\">false</span>, no_cents : Bool = <span class=\"n\">false</span>, no_cents_if_whole : Bool = <span class=\"n\">false</span>, drop_trailing_zeros : Bool = <span class=\"n\">false</span>, disambiguate : Bool = <span class=\"n\">false</span>, symbol : <a href=\"../String.html\">String</a> | Char | Bool | Nil = <span class=\"n\">true</span>, decimal_mark : <a href=\"../String.html\">String</a> | Char | Bool | Nil = <span class=\"n\">true</span>, thousands_separator : <a href=\"../String.html\">String</a> | Char | Bool | Nil = <span class=\"n\">true</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/money/money/formatting.cr","line_number":154,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/formatting.cr#L154"},"def":{"name":"format","args":[{"name":"format","default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"","external_name":"","restriction":""},{"name":"display_free","default_value":"nil","external_name":"display_free","restriction":"String | ::Nil"},{"name":"sign_positive","default_value":"false","external_name":"sign_positive","restriction":"Bool"},{"name":"html","default_value":"false","external_name":"html","restriction":"Bool"},{"name":"no_cents","default_value":"false","external_name":"no_cents","restriction":"Bool"},{"name":"no_cents_if_whole","default_value":"false","external_name":"no_cents_if_whole","restriction":"Bool"},{"name":"drop_trailing_zeros","default_value":"false","external_name":"drop_trailing_zeros","restriction":"Bool"},{"name":"disambiguate","default_value":"false","external_name":"disambiguate","restriction":"Bool"},{"name":"symbol","default_value":"true","external_name":"symbol","restriction":"String | Char | Bool | ::Nil"},{"name":"decimal_mark","default_value":"true","external_name":"decimal_mark","restriction":"String | Char | Bool | ::Nil"},{"name":"thousands_separator","default_value":"true","external_name":"thousands_separator","restriction":"String | Char | Bool | ::Nil"}],"splat_index":1,"return_type":"String","visibility":"Public","body":"if zero? && display_free\n  return display_free\nend\n\nif negative?\n  sign = '-'\nend\nif positive? && sign_positive\n  sign = '+'\nend\n\namount = format_amount(no_cents: no_cents, no_cents_if_whole: no_cents_if_whole, drop_trailing_zeros: drop_trailing_zeros, decimal_mark: decimal_mark, thousands_separator: thousands_separator)\nsymbol = format_symbol(symbol: symbol, disambiguate: disambiguate)\n\nif html\n  amount && (amount = HTML.escape(amount))\n  symbol && (symbol = HTML.escape(symbol))\nend\n\nformat || (format = currency.format)\nformat || (\n  format = if currency.symbol_first?\n    \"%{sign}%{symbol}%{amount}\"\n  else\n    \"%{sign}%{amount} %{symbol}\"\n  end\n)\n\nformatted = format % {\n  sign: sign,\n  amount: amount,\n  symbol: symbol,\n  currency: currency.code,\n}\nformatted.strip\n"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns an unambiguous string representation of `self`.\nSuitable for serialization.\n\n```\nMoney.new(1_000_10, \"USD\").to_s # => \"1000.10 USD\"\nMoney.new(1_000_00, \"USD\").to_s # => \"1000 USD\"\n```\n\nSee also `#format`.","summary":"<p>Returns an unambiguous string representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/money/formatting.cr","line_number":278,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/formatting.cr#L278"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << (format(\"%{sign}%{amount} %{currency}\", no_cents_if_whole: true, thousands_separator: nil, decimal_mark: '.'))"},"external_var":false}]},{"html_id":"money/Money/Parse","path":"Money/Parse.html","kind":"module","full_name":"Money::Parse","name":"Parse","abstract":false,"locations":[{"filename":"src/money/money/parse.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/parse.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"parse(str:String,*,allow_ambiguous:Bool=true):Money-instance-method","name":"parse","doc":"Creates a `Money` instance from a string, or returns `nil` on failure.\n\n```\nMoney.parse?(\"10.00 USD\") # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10.00\")    # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"10.00\")     # => nil\n```\n\nIf `allow_ambiguous` is `true` (default), returns the first\nmatching currency for ambiguous values, otherwise returns `nil`.\n\n```\nMoney.parse?(\"$10.00\", allow_ambiguous: true)  # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10.00\", allow_ambiguous: false) # => nil\n```\n\nThousands separator and decimal mark are guessed from the string.\n\n```\nMoney.parse?(\"$10.00\") # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10,00\") # => Money(@amount=10.0, @currency=\"USD\")\n\nMoney.parse?(\"$100,000\") # => Money(@amount=100000.0, @currency=\"USD\")\nMoney.parse?(\"$100.000\") # => Money(@amount=100000.0, @currency=\"USD\")\n```\n\nNOTE: Raises `Money::Parse::Error` on failure instead of returning `nil`.","summary":"<p>Creates a <code><a href=\"../Money.html\">Money</a></code> instance from a string, or returns <code>nil</code> on failure.</p>","abstract":false,"args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":"Bool"}],"args_string":"(str : String, *, allow_ambiguous : Bool = true) : Money","args_html":"(str : <a href=\"../String.html\">String</a>, *, allow_ambiguous : Bool = <span class=\"n\">true</span>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/parse.cr","line_number":45,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/parse.cr#L45"},"def":{"name":"parse","args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":"Bool"}],"splat_index":1,"return_type":"Money","visibility":"Public","body":"parse(str, allow_ambiguous) do |ex| raise(ex) end"},"external_var":false},{"html_id":"parse?(str:String,*,allow_ambiguous:Bool=true):Money|Nil-instance-method","name":"parse?","doc":"Creates a `Money` instance from a string, or returns `nil` on failure.\n\n```\nMoney.parse?(\"10.00 USD\") # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10.00\")    # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"10.00\")     # => nil\n```\n\nIf `allow_ambiguous` is `true` (default), returns the first\nmatching currency for ambiguous values, otherwise returns `nil`.\n\n```\nMoney.parse?(\"$10.00\", allow_ambiguous: true)  # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10.00\", allow_ambiguous: false) # => nil\n```\n\nThousands separator and decimal mark are guessed from the string.\n\n```\nMoney.parse?(\"$10.00\") # => Money(@amount=10.0, @currency=\"USD\")\nMoney.parse?(\"$10,00\") # => Money(@amount=10.0, @currency=\"USD\")\n\nMoney.parse?(\"$100,000\") # => Money(@amount=100000.0, @currency=\"USD\")\nMoney.parse?(\"$100.000\") # => Money(@amount=100000.0, @currency=\"USD\")\n```","summary":"<p>Creates a <code><a href=\"../Money.html\">Money</a></code> instance from a string, or returns <code>nil</code> on failure.</p>","abstract":false,"args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":"Bool"}],"args_string":"(str : String, *, allow_ambiguous : Bool = true) : Money | Nil","args_html":"(str : <a href=\"../String.html\">String</a>, *, allow_ambiguous : Bool = <span class=\"n\">true</span>) : <a href=\"../Money.html\">Money</a> | Nil","location":{"filename":"src/money/money/parse.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/parse.cr#L38"},"def":{"name":"parse?","args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":"Bool"}],"splat_index":1,"return_type":"Money | ::Nil","visibility":"Public","body":"parse(str, allow_ambiguous) do nil end"},"external_var":false}],"types":[{"html_id":"money/Money/Parse/Error","path":"Money/Parse/Error.html","kind":"class","full_name":"Money::Parse::Error","name":"Error","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/money/parse.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/parse.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"},"doc":"Exception class for parse errors.","summary":"<p>Exception class for parse errors.</p>"}]},{"html_id":"money/Money/Registry","path":"Money/Registry.html","kind":"module","full_name":"Money::Registry","name":"Registry","abstract":false,"locations":[{"filename":"src/money/registry.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"types":[{"html_id":"money/Money/Registry/Converter","path":"Money/Registry/Converter.html","kind":"module","full_name":"Money::Registry::Converter","name":"Converter","abstract":false,"locations":[{"filename":"src/money/registry/converter/json.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/json.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Registry","kind":"module","full_name":"Money::Registry","name":"Registry"},"types":[{"html_id":"money/Money/Registry/Converter/JSON","path":"Money/Registry/Converter/JSON.html","kind":"module","full_name":"Money::Registry::Converter::JSON(V)","name":"JSON","abstract":false,"locations":[{"filename":"src/money/registry/converter/json.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/json.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"money/Money/Registry/Converter/JSON","kind":"module","full_name":"Money::Registry::Converter::JSON","name":"JSON"}],"namespace":{"html_id":"money/Money/Registry/Converter","kind":"module","full_name":"Money::Registry::Converter","name":"Converter"},"instance_methods":[{"html_id":"from_json(pull:::JSON::PullParser):V-instance-method","name":"from_json","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : ::JSON::PullParser) : V","args_html":"(pull : ::JSON::PullParser) : V","location":{"filename":"src/money/registry/converter/json.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/json.cr#L19"},"def":{"name":"from_json","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"return_type":"V","visibility":"Public","body":"wrapper = Wrapper(V).new(pull)\nwrapper.unbox\n"},"external_var":false},{"html_id":"to_json(value:V,json:::JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"V"},{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(value : V, json : ::JSON::Builder)","args_html":"(value : V, json : ::JSON::Builder)","location":{"filename":"src/money/registry/converter/json.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/json.cr#L24"},"def":{"name":"to_json","args":[{"name":"value","external_name":"value","restriction":"V"},{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"{\n  name: value.class.key,\n  options: value,\n}.to_json(json)"},"external_var":false}]},{"html_id":"money/Money/Registry/Converter/YAML","path":"Money/Registry/Converter/YAML.html","kind":"module","full_name":"Money::Registry::Converter::YAML(V)","name":"YAML","abstract":false,"locations":[{"filename":"src/money/registry/converter/yaml.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/yaml.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"money/Money/Registry/Converter/YAML","kind":"module","full_name":"Money::Registry::Converter::YAML","name":"YAML"}],"namespace":{"html_id":"money/Money/Registry/Converter","kind":"module","full_name":"Money::Registry::Converter","name":"Converter"},"instance_methods":[{"html_id":"from_yaml(ctx:::YAML::ParseContext,node:::YAML::Nodes::Node):V-instance-method","name":"from_yaml","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : ::YAML::ParseContext, node : ::YAML::Nodes::Node) : V","args_html":"(ctx : ::YAML::ParseContext, node : ::YAML::Nodes::Node) : V","location":{"filename":"src/money/registry/converter/yaml.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/yaml.cr#L19"},"def":{"name":"from_yaml","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"return_type":"V","visibility":"Public","body":"wrapper = Wrapper(V).new(ctx, node)\nwrapper.unbox\n"},"external_var":false},{"html_id":"to_yaml(value:V,yaml:::YAML::Nodes::Builder)-instance-method","name":"to_yaml","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"V"},{"name":"yaml","external_name":"yaml","restriction":"::YAML::Nodes::Builder"}],"args_string":"(value : V, yaml : ::YAML::Nodes::Builder)","args_html":"(value : V, yaml : ::YAML::Nodes::Builder)","location":{"filename":"src/money/registry/converter/yaml.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry/converter/yaml.cr#L24"},"def":{"name":"to_yaml","args":[{"name":"value","external_name":"value","restriction":"V"},{"name":"yaml","external_name":"yaml","restriction":"::YAML::Nodes::Builder"}],"visibility":"Public","body":"{\n  name: value.class.key,\n  options: value,\n}.to_yaml(yaml)"},"external_var":false}]}]},{"html_id":"money/Money/Registry/NotFoundError","path":"Money/Registry/NotFoundError.html","kind":"class","full_name":"Money::Registry::NotFoundError","name":"NotFoundError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/registry.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/Currency/RateProvider/NotFoundError","kind":"class","full_name":"Money::Currency::RateProvider::NotFoundError","name":"NotFoundError"},{"html_id":"money/Money/Currency/RateStore/NotFoundError","kind":"class","full_name":"Money::Currency::RateStore::NotFoundError","name":"NotFoundError"}],"namespace":{"html_id":"money/Money/Registry","kind":"module","full_name":"Money::Registry","name":"Registry"},"doc":"Raised when trying to find an unknown object.","summary":"<p>Raised when trying to find an unknown object.</p>","constructors":[{"html_id":"new(message:String=\"Objectnotfound\")-class-method","name":"new","abstract":false,"args":[{"name":"message","default_value":"\"Object not found\"","external_name":"message","restriction":"String"}],"args_string":"(message : String = \"Object not found\")","args_html":"(message : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;Object not found&quot;</span>)","location":{"filename":"src/money/registry.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry.cr#L5"},"def":{"name":"new","args":[{"name":"message","default_value":"\"Object not found\"","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,key:String)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(*, key : String)","args_html":"(*, key : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/money/registry.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/registry.cr#L9"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"key","external_name":"key","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(key: key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]},{"html_id":"money/Money/Rounding","path":"Money/Rounding.html","kind":"module","full_name":"Money::Rounding","name":"Rounding","abstract":false,"locations":[{"filename":"src/money/money/rounding.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"round(precision:Int=0,mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"round","doc":"Rounds the monetary amount to smallest unit of coinage, using\nrounding *mode* if given, or `Money.rounding_mode` otherwise.\n\n```\nMoney.new(10.1, \"USD\").round                   # => Money(@amount=10.0, @currency=\"USD\")\nMoney.new(10.5, \"USD\").round(mode: :ties_even) # => Money(@amount=10.0, @currency=\"USD\")\nMoney.new(10.5, \"USD\").round(mode: :ties_away) # => Money(@amount=11.0, @currency=\"USD\")\n```","summary":"<p>Rounds the monetary amount to smallest unit of coinage, using rounding <em>mode</em> if given, or <code>Money.rounding_mode</code> otherwise.</p>","abstract":false,"args":[{"name":"precision","default_value":"0","external_name":"precision","restriction":"Int"},{"name":"mode","default_value":"Money.rounding_mode","external_name":"mode","restriction":"Number::RoundingMode"}],"args_string":"(precision : Int = 0, mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(precision : Int = <span class=\"n\">0</span>, mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L62"},"def":{"name":"round","args":[{"name":"precision","default_value":"0","external_name":"precision","restriction":"Int"},{"name":"mode","default_value":"Money.rounding_mode","external_name":"mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: @amount.round(precision, mode: mode))"},"external_var":false},{"html_id":"round_to_nearest_cash_value(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"round_to_nearest_cash_value","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").round_to_nearest_cash_value? # nil\n```\n\nNOTE: This variant returns `self` if `#round_to_nearest_cash_value?`\nreturns `nil`.","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L50"},"def":{"name":"round_to_nearest_cash_value","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"(round_to_nearest_cash_value?(rounding_mode)) || self"},"external_var":false},{"html_id":"round_to_nearest_cash_value!(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"round_to_nearest_cash_value!","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").round_to_nearest_cash_value? # nil\n```\n\nNOTE: This variant raises `UndefinedSmallestDenominationError` if\n`#round_to_nearest_cash_value?` returns `nil`.","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L41"},"def":{"name":"round_to_nearest_cash_value!","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"(round_to_nearest_cash_value?(rounding_mode)) ||\n(raise(UndefinedSmallestDenominationError.new(currency)))"},"external_var":false},{"html_id":"round_to_nearest_cash_value?(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money|Nil-instance-method","name":"round_to_nearest_cash_value?","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").round_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").round_to_nearest_cash_value? # nil\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money | Nil","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a> | Nil","location":{"filename":"src/money/money/rounding.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/money/rounding.cr#L31"},"def":{"name":"round_to_nearest_cash_value?","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money | ::Nil","visibility":"Public","body":"if nearest_cash_value = nearest_cash_value(rounding_mode)\n  copy_with(fractional: nearest_cash_value)\nend"},"external_var":false}]},{"html_id":"money/Money/UndefinedCurrencyError","path":"Money/UndefinedCurrencyError.html","kind":"class","full_name":"Money::UndefinedCurrencyError","name":"UndefinedCurrencyError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L42"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when `Money.default_currency` is not set.","summary":"<p>Raised when <code>Money.default_currency</code> is not set.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/money/error.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L43"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/UndefinedSmallestDenominationError","path":"Money/UndefinedSmallestDenominationError.html","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":63,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L63"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when smallest denomination of a currency is not defined.","summary":"<p>Raised when smallest denomination of a currency is not defined.</p>","constructors":[{"html_id":"new(currency:Currency)-class-method","name":"new","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency)","args_html":"(currency : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/error.cr","line_number":64,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L64"},"def":{"name":"new","args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"visibility":"Public","body":"_ = allocate\n_.initialize(currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/UnknownRateError","path":"Money/UnknownRateError.html","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L49"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when trying to find an unknown exchange rate.","summary":"<p>Raised when trying to find an unknown exchange rate.</p>","constructors":[{"html_id":"new(base,target)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":""},{"name":"target","external_name":"target","restriction":""}],"args_string":"(base, target)","args_html":"(base, target)","location":{"filename":"src/money/error.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/b64864a/src/money/error.cr#L50"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":""},{"name":"target","external_name":"target","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]},{"html_id":"money/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/core_ext/to_money.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L17"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"The top-level number type.","summary":"<p>The top-level number type.</p>","instance_methods":[{"html_id":"to_money(currency=Money.default_currency):Money-instance-method","name":"to_money","doc":"Returns a `Money` instance parsed from `self`.\n\nSee also `Money.from_amount`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code>.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(currency = Money.default_currency) : Money","args_html":"(currency = <span class=\"t\">Money</span>.default_currency) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/core_ext/to_money.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L28"},"def":{"name":"to_money","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"return_type":"Money","visibility":"Public","body":"Money.from_amount(self, currency)"},"external_var":false},{"html_id":"to_money?(currency=Money.default_currency):Money|Nil-instance-method","name":"to_money?","doc":"Returns a `Money` instance parsed from `self` if possible, `nil` otherwise.\n\nSee also `Money.from_amount`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code> if possible, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"args_string":"(currency = Money.default_currency) : Money | Nil","args_html":"(currency = <span class=\"t\">Money</span>.default_currency) : <a href=\"Money.html\">Money</a> | Nil","location":{"filename":"src/core_ext/to_money.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L21"},"def":{"name":"to_money?","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""}],"return_type":"Money | ::Nil","visibility":"Public","body":"begin\n  Money.from_amount(self, currency)\nrescue\n  nil\nend"},"external_var":false}]},{"html_id":"money/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/core_ext/to_money.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nSee [`String` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/string.html) in the language reference.\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nA string might end up being composed of bytes which form an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but every\nbyte that doesn't start a valid UTF-8 byte sequence is interpreted as though\nit encodes the Unicode replacement character (U+FFFD) by itself. For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['ï¿½', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.\n\nNote that this interpretation only applies to methods inside Crystal; calling\n`#to_slice` or `#to_unsafe`, e.g. when passing a string to a C library, will\nexpose the invalid UTF-8 byte sequences. In particular, `Regex`'s underlying\nengine may reject strings that are not valid UTF-8, or it may invoke undefined\nbehavior on invalid strings. If this is undesired, `#scrub` could be used to\nremove the offending byte sequences first.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","instance_methods":[{"html_id":"to_money(*,allow_ambiguous=true):Money-instance-method","name":"to_money","doc":"Returns a `Money` instance parsed from `self`.\n\nSee also `Money.parse`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(*, allow_ambiguous = true) : Money","args_html":"(*, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/core_ext/to_money.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L12"},"def":{"name":"to_money","args":[{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":0,"return_type":"Money","visibility":"Public","body":"Money.parse(self, allow_ambiguous: allow_ambiguous)"},"external_var":false},{"html_id":"to_money?(*,allow_ambiguous=true):Money|Nil-instance-method","name":"to_money?","doc":"Returns a `Money` instance parsed from `self` if possible, `nil` otherwise.\n\nSee also `Money.parse?`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code> if possible, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(*, allow_ambiguous = true) : Money | Nil","args_html":"(*, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"Money.html\">Money</a> | Nil","location":{"filename":"src/core_ext/to_money.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/b64864a/src/core_ext/to_money.cr#L5"},"def":{"name":"to_money?","args":[{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":0,"return_type":"Money | ::Nil","visibility":"Public","body":"Money.parse?(self, allow_ambiguous: allow_ambiguous)"},"external_var":false}]}]}})