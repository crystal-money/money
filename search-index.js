crystal_doc_search_index_callback({"repository_name":"money","body":"# money [![CI](https://github.com/crystal-money/money/actions/workflows/ci.yml/badge.svg)](https://github.com/crystal-money/money/actions/workflows/ci.yml) [![Releases](https://img.shields.io/github/release/crystal-money/money.svg)](https://github.com/crystal-money/money/releases) [![License](https://img.shields.io/github/license/crystal-money/money.svg)](https://github.com/crystal-money/money/blob/master/LICENSE)\n\n## Introduction\n\nA Crystal shard for dealing with money and currency conversion inspired by [RubyMoney](https://github.com/RubyMoney/money).\n\n### Features\n\n- Provides a `Money` class which encapsulates all information about an certain\n  amount of money, such as its value and its currency.\n- Provides a `Money::Currency` class which encapsulates all information about\n  a monetary unit.\n- Represents monetary values as big decimals. This avoids floating point\n  rounding errors.\n- Represents currency as `Money::Currency` instances providing a high level of\n  flexibility.\n- Provides APIs for exchanging money from one currency to another.\n\n### Resources\n\n- [API Documentation](https://crystal-money.github.io/money/)\n- [Git Repository](https://github.com/crystal-money/money)\n\n### Notes\n\n- Your app must use UTF-8 to function with this library. There are a\n  number of non-ASCII currency attributes.\n- This app requires JSON.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  money:\n    github: crystal-money/money\n```\n\nInstall with `shards install`.\n\n## Usage\n\n```crystal\nrequire \"money\"\n\n# 10.00 USD\nmoney = Money.new(1000, \"USD\")\nmoney.amount        # => 10.0\nmoney.fractional    # => 1000.0\nmoney.currency.code # => \"USD\"\n\n# Comparisons\nMoney.new(1000, \"USD\") == Money.new(1000, \"USD\") # => true\nMoney.new(1000, \"USD\") == Money.new(100,  \"USD\") # => false\nMoney.new(1000, \"USD\") == Money.new(1000, \"EUR\") # => false\nMoney.new(1000, \"USD\") != Money.new(1000, \"EUR\") # => true\n\n# Arithmetic\nMoney.new(1000, \"USD\") + Money.new(500, \"USD\") == Money.new(1500, \"USD\")\nMoney.new(1000, \"USD\") - Money.new(200, \"USD\") == Money.new(800,  \"USD\")\nMoney.new(1000, \"USD\") / 5                     == Money.new(200,  \"USD\")\nMoney.new(1000, \"USD\") * 5                     == Money.new(5000, \"USD\")\n\n# Unit to subunit conversions\nMoney.from_amount(5, \"USD\") == Money.new(500,  \"USD\") # 5 USD\nMoney.from_amount(5, \"JPY\") == Money.new(5,    \"JPY\") # 5 JPY\nMoney.from_amount(5, \"TND\") == Money.new(5000, \"TND\") # 5 TND\n\n# Currency conversions\nsome_code_to_setup_exchange_rates\nMoney.new(1000, \"USD\").exchange_to(\"EUR\") == Money.new(some_value, \"EUR\")\n\n# Formatting (see Formatting section for more options)\nMoney.new(100, \"USD\").format # => \"$1.00\"\nMoney.new(100, \"GBP\").format # => \"£1.00\"\nMoney.new(100, \"EUR\").format # => \"€1.00\"\n\n# Steppable ranges\n(Money.new(1_00, \"USD\")..Money.new(3_00, \"USD\"))\n  .step(by: Money.new(1_00, \"USD\"))\n  .map(&.to_s)\n  .to_a\n# => [\"$1.00\", \"$2.00\", \"$3.00\"]\n```\n\n## Infinite Precision\n\nBy default, `Money` objects are rounded to the nearest cent and the additional\nprecision is not preserved:\n\n```crystal\nMoney.new(2.34567).to_s # => \"$2.35\"\n```\n\nIf you wish to work with the additional precision, you can use either of the\nfollowing:\n\n```crystal\n# Set the value globally\nMoney.infinite_precision = true\n\nMoney.new(2.34567).to_s   # => \"$2.34567\"\n\n# or\n\n# Set the value within the block\nMoney.with_infinite_precision do\n  Money.new(2.34567).to_s # => \"$2.34567\"\nend\n```\n\n## Currency\n\nCurrencies are consistently represented as instances of `Money::Currency`.\nThe most part of `Money` APIs allows you to supply either a `String`, `Symbol`\nor a `Money::Currency`.\n\n```crystal\nMoney.new(1000, \"USD\") == Money.new(1000, Money::Currency.find(\"USD\"))\nMoney.new(1000, \"EUR\").currency == Money::Currency.find(:eur)\nMoney.new(1000, \"PLN\").currency == Money::Currency[:pln]\n```\n\nA `Money::Currency` instance holds all the information about the currency,\nincluding the currency symbol, name and much more.\n\n```crystal\ncurrency = Money.new(1000, \"USD\").currency\ncurrency.code # => \"USD\"\ncurrency.name # => \"United States Dollar\"\n```\n\nTo define a new `Money::Currency` use `Money::Currency.register` as shown\nbelow.\n\n```crystal\ncurrency = Money::Currency.new(\n  priority:            1,\n  code:                \"USD\",\n  iso_numeric:         840,\n  name:                \"United States Dollar\",\n  symbol:              \"$\",\n  symbol_first:        true,\n  subunit:             \"Cent\",\n  subunit_to_unit:     100,\n  decimal_mark:        \".\",\n  thousands_separator: \",\"\n)\n\nMoney::Currency.register(currency)\n```\n\nThe pre-defined set of attributes includes:\n\n- `:priority` a numerical value you can use to sort/group the currency list\n- `:code` the international 3-letter code as defined by the ISO 4217 standard\n- `:iso_numeric` the international 3-digit code as defined by the ISO 4217 standard\n- `:name` the currency name\n- `:symbol` the currency symbol (UTF-8 encoded)\n- `:symbol_first` whether a money symbol should go before the amount\n- `:subunit` the name of the fractional monetary unit\n- `:subunit_to_unit` the proportion between the unit and the subunit\n- `:decimal_mark` character between the whole and fraction amounts\n- `:thousands_separator` character between each thousands place\n\nAll attributes except `:code` and `:subunit_to_unit` are optional.\nSome attributes, such as `:symbol`, are used by the `Money` class to print out a\nrepresentation of the object. Other attributes, such as `:name` or `:priority`,\nexist to provide a basic API you can take advantage of to build your application.\n\n### :priority\n\nThe priority attribute is an arbitrary numerical value you can assign to the\n`Money::Currency` and use in sorting/grouping operation.\n\nFor instance, let's assume your web application needs to render a currency\nselector like the one available [here](https://finance.yahoo.com/currency-converter/).\nYou can create a couple of custom methods to return the list of major currencies and\nall currencies as follows:\n\n```crystal\n# Returns an array of currency id where priority < 10\ndef major_currencies(hash)\n  hash.values.sort.take_while(&.priority.try(&.<(10))).map(&.id)\nend\n\n# Returns an array of all currency id\ndef all_currencies(hash)\n  hash.keys\nend\n\nmajor_currencies(Money::Currency.table)\n# => [\"usd\", \"eur\", \"gbp\", \"aud\", \"cad\", \"jpy\"]\n\nall_currencies(Money::Currency.table)\n# => [\"aed\", \"afn\", \"all\", ...]\n```\n\n### Default Currency\n\nBy default `Money` defaults to USD as its currency. This can be overwritten\nusing:\n\n```crystal\nMoney.default_currency = Money::Currency.find(\"CAD\")\n# or\nMoney.default_currency = :cad\n```\n\n### Currency Exponent\n\nThe exponent of a money value is the number of digits after the decimal\nseparator (which separates the major unit from the minor unit). See e.g.\n[ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) for more\ninformation. You can find the exponent (as an `Int32`) by\n\n```crystal\nMoney::Currency.find(\"USD\").exponent # => 2\nMoney::Currency.find(\"JPY\").exponent # => 0\nMoney::Currency.find(\"MGA\").exponent # => 1\n```\n\n### Currency Lookup\n\nTo find a given currency by ISO 4217 numeric code (three digits) you can do\n\n```crystal\nMoney::Currency.find(&.iso_numeric.==(978)) # => #<Money::Currency @iso_numeric=978, @code=\"EUR\", @name=\"Euro\", @symbol=\"€\", @subunit=\"Cent\", @subunit_to_unit=100, @symbol_first=true ...>\n```\n\n## Currency Exchange\n\nExchanging money is performed through a `Currency::Exchange` object.\nThis is done by fetching the exchange rate from a `Currency::Exchange#rate_store`\nobject. If the rate is not available (or stale), it is then fetched from a\n`Currency::Exchange#rate_provider`.\n\nThe default `Currency::Exchange` object uses `Currency::RateStore::Memory`\nin conjunction with `Currency::RateProvider::Null` which requires one to\nmanually specify the exchange rate.\n\nHere's an example of how it works:\n\n```crystal\nMoney.default_exchange.rate_store[\"USD\", \"EUR\"] = 1.24515\nMoney.default_exchange.rate_store[\"EUR\", \"USD\"] = 0.803115\n\nMoney.new(100, \"USD\").exchange_to(\"EUR\") # => Money.new(@amount=1.24, @currency=\"EUR\")\nMoney.new(100, \"EUR\").exchange_to(\"USD\") # => Money.new(@amount=0.8,  @currency=\"USD\")\n```\n\nComparison and arithmetic operations work as expected:\n\n```crystal\nMoney.new(1000, \"USD\") <=> Money.new(900, \"USD\") # => 1; 9.00 USD is smaller\nMoney.new(1000, \"EUR\") + Money.new(10, \"EUR\")    # => Money.new(@amount=10.1, @currency=\"EUR\")\n\nMoney.default_exchange.rate_store[\"USD\", \"EUR\"] = 0.5\nMoney.new(1000, \"EUR\") + Money.new(1000, \"USD\") # => Money.new(@amount=15.0, @currency=\"EUR\")\n```\n\n### Exchange rate stores\n\nThe default exchange is initialized with an in-memory store for exchange rates.\n\n```crystal\nMoney.default_exchange = Money::Currency::Exchange.new(\n  store: Money::Currency::RateStore::Memory.new\n)\n```\n\nRate stores can be configured with `Time::Span` controlling the time-to-live (TTL)\nof the exchange rates:\n\n```crystal\nMoney.default_exchange = Money::Currency::Exchange.new(\n  store: Money::Currency::RateStore::Memory.new(ttl: 1.hour)\n)\n```\n\nYou can pass you own store implementation, ie. for storing and retrieving rates off a database, file, cache, etc.\n\n```crystal\nMoney.default_exchange.rate_store = MyCustomStore.new\n\n# Add to the underlying store\nMoney.default_exchange.rate_store[\"USD\", \"CAD\"] = 0.9\n\n# Retrieve from the underlying store\nMoney.default_exchange.rate_store[\"USD\", \"CAD\"] # => 0.9\n\n# Exchanging amounts just works\nMoney.new(10.0, \"USD\").exchange_to(\"CAD\") # => Money(@amount=9.0 @currency=\"CAD\")\n```\n\n### Exchange rate providers\n\nThe default exchange is initialized with a `Currency::RateProvider::Null` provider,\nwhich returns `nil` for all exchange rates.\n\nThere is nothing stopping you from creating rate provider object which scrapes\n[XE](https://www.xe.com) for the current rates or just returns `rand(2)`:\n\n```crystal\nMoney.default_exchange.rate_provider = XeDotComProvider.new\n```\n\n### Disabling currency conversion\n\nIf you wish to disable automatic currency conversion to prevent arithmetic when\ncurrencies don't match:\n\n```crystal\nMoney.disallow_currency_conversion!\n```\n\n## Rounding\n\nBy default, `Money` objects are rounded to the nearest cent and the additional precision is not preserved:\n\n```crystal\nMoney.new(2.34567).to_s # => \"$2.35\"\n```\n\nTo round to the nearest cent (or anything more precise), you can use the `Money#round` method.\n\n```crystal\nMoney.new(2.34567).round(4).to_s # => \"$2.35\"\n```\n\nTo retain the additional precision, you will also need to set `Money.infinite_precision` to `true`.\n\n```crystal\nMoney.infinite_precision = true\n\nMoney.new(2.34567).to_s                    # => \"$2.3457\"\nMoney.new(2.34567).round(4, :to_zero).to_s # => \"$2.3456\"\n\n# or\n\nMoney.with_rounding_mode(:to_zero) do\n  Money.new(2.34567).round(4).to_s         # => \"$2.3456\"\nend\n```\n\n## Working with fibers\n\nBy default, global settings are not shared between fibers. You can use the\n`Money.spawn_with_same_context` to spawn a new fiber with the same global settings:\n\n```crystal\nMoney.default_currency = \"EUR\"\n\nMoney.spawn_with_same_context do\n  Money.default_currency.code # => \"EUR\"\nend\n```\n\n## Formatting\n\nThere are several formatting rules for when `Money#format` is called. For more information, check out the [formatting module source](https://github.com/crystal-money/money/blob/master/src/money/money/formatting.cr), or read the latest release's [docs](https://crystal-money.github.io/money/Money/Formatting.html).\n\nIf you wish to format money according to the EU's [Rules for expressing monetary units](https://style-guide.europa.eu/en/content/-/isg/topic?identifier=7.3.3-rules-for-expressing-monetary-units#id370303__id370303_PositionISO) in either English, Irish, Latvian or Maltese:\n\n```crystal\nmoney = Money.new(123, :gbp)               # => Money(@amount=1.23 @currency=\"GBP\")\nmoney.format(symbol: \"#{money.currency} \") # => \"GBP 1.23\"\n```\n\n## Heuristics\n\nTo parse a `String` containing amount with currency code or symbol you can do\n\n```crystal\nMoney.parse(\"$12.34\")    # => Money(@amount=12.34, @currency=\"USD\")\nMoney.parse(\"12.34 USD\") # => Money(@amount=12.34, @currency=\"USD\")\n```\n\n## Contributors\n\n- [Sija](https://github.com/Sija) Sijawusz Pur Rahnama - creator, maintainer\n","program":{"html_id":"money/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"money","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"money/Fiber","path":"Fiber.html","kind":"class","full_name":"Fiber","name":"Fiber","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber.cr","line_number":47,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber.cr#L47"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/context.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/context.cr#L1"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/context/x86_64-sysv.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/context/x86_64-sysv.cr#L3"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/pointer_linked_list_node.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/pointer_linked_list_node.cr#L3"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/stack.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/stack.cr#L1"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/stack_pool.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/fiber/stack_pool.cr#L3"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/log/metadata.cr","line_number":225,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/log/metadata.cr#L225"},{"filename":"src/core_ext/fiber.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/fiber.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"doc":"A `Fiber` is a light-weight execution unit managed by the Crystal runtime.\n\nIt is conceptually similar to an operating system thread but with less\noverhead and completely internal to the Crystal process. The runtime includes\na scheduler which schedules execution of fibers.\n\nA `Fiber` has a stack size of `8 MiB` which is usually also assigned\nto an operating system thread. But only `4KiB` are actually allocated at first\nso the memory footprint is very small.\n\nCommunication between fibers is usually passed through `Channel`.\n\n## Cooperative\n\nFibers are cooperative. That means execution can only be drawn from a fiber\nwhen it offers it. It can't be interrupted in its execution at random.\nIn order to make concurrency work, fibers must make sure to occasionally\nprovide hooks for the scheduler to swap in other fibers.\nIO operations like reading from a file descriptor are natural implementations\nfor this and the developer does not need to take further action on that. When\nIO access can't be served immediately by a buffer, the fiber will\nautomatically wait and yield execution. When IO is ready it's going to be\nresumed through the event loop.\n\nWhen a computation-intensive task has none or only rare IO operations, a fiber\nshould explicitly offer to yield execution from time to time using\n`Fiber.yield` to break up tight loops. The frequency of this call depends on\nthe application and concurrency model.\n\n## Event loop\n\nThe event loop is responsible for keeping track of sleeping fibers waiting for\nnotifications that IO is ready or a timeout reached. When a fiber can be woken,\nthe event loop enqueues it in the scheduler","summary":"<p>A <code><a href=\"Fiber.html\">Fiber</a></code> is a light-weight execution unit managed by the Crystal runtime.</p>","instance_methods":[{"html_id":"money_context:Money::Context-instance-method","name":"money_context","doc":"`Money::Context` object holding global settings for `Money` objects.","summary":"<p><code><a href=\"Money/Context.html\">Money::Context</a></code> object holding global settings for <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"location":{"filename":"src/core_ext/fiber.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/fiber.cr#L3"},"def":{"name":"money_context","return_type":"Money::Context","visibility":"Public","body":"if (__temp_143 = @money_context).nil?\n  @money_context = (Money::Context.new)\nelse\n  __temp_143\nend"},"external_var":false},{"html_id":"money_context=(money_context:Money::Context)-instance-method","name":"money_context=","doc":"`Money::Context` object holding global settings for `Money` objects.","summary":"<p><code><a href=\"Money/Context.html\">Money::Context</a></code> object holding global settings for <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"money_context","external_name":"money_context","restriction":"Money::Context"}],"args_string":"(money_context : Money::Context)","args_html":"(money_context : <a href=\"Money/Context.html\">Money::Context</a>)","location":{"filename":"src/core_ext/fiber.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/fiber.cr#L3"},"def":{"name":"money_context=","args":[{"name":"money_context","external_name":"money_context","restriction":"Money::Context"}],"visibility":"Public","body":"@money_context = money_context"},"external_var":false}]},{"html_id":"money/Money","path":"Money.html","kind":"struct","full_name":"Money","name":"Money","abstract":false,"superclass":{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"money/Money/Rounding","kind":"module","full_name":"Money::Rounding","name":"Rounding"},{"html_id":"money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"},{"html_id":"money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money.cr#L4"},{"filename":"src/money/context.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L1"},{"filename":"src/money/currency.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L9"},{"filename":"src/money/error.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L1"},{"filename":"src/money/money.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L17"},{"filename":"src/money/money/allocate.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/allocate.cr#L1"},{"filename":"src/money/money/arithmetic.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L1"},{"filename":"src/money/money/casting.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/casting.cr#L1"},{"filename":"src/money/money/constructors.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L1"},{"filename":"src/money/money/exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/exchange.cr#L1"},{"filename":"src/money/money/formatting.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/formatting.cr#L1"},{"filename":"src/money/money/json.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/json.cr#L5"},{"filename":"src/money/money/parse.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/parse.cr#L1"},{"filename":"src/money/money/rounding.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L1"},{"filename":"src/money/version.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/version.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version \\\"/home/runner/work/money/money/src/money\\\"`).chomp.stringify }}"}],"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Money/Allocate","kind":"module","full_name":"Money::Allocate","name":"Allocate"},{"html_id":"money/Money/Arithmetic","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic"},{"html_id":"money/Money/Casting","kind":"module","full_name":"Money::Casting","name":"Casting"},{"html_id":"money/Money/Exchange","kind":"module","full_name":"Money::Exchange","name":"Exchange"},{"html_id":"money/Money/Formatting","kind":"module","full_name":"Money::Formatting","name":"Formatting"},{"html_id":"money/Money/Rounding","kind":"module","full_name":"Money::Rounding","name":"Rounding"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"extended_modules":[{"html_id":"money/Money/Constructors","kind":"module","full_name":"Money::Constructors","name":"Constructors"},{"html_id":"money/Money/Context/Delegators","kind":"module","full_name":"Money::Context::Delegators","name":"Delegators"},{"html_id":"money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"}],"doc":"\"Money is any object or record that is generally accepted as payment for\ngoods and services and repayment of debts in a given socio-economic context\nor country.\" - [Wikipedia](https://en.wikipedia.org/wiki/Money)\n\nAn instance of `Money` represents an amount of a specific currency.\n\n`Money` is a value object and should be treated as immutable.","summary":"<p>&quot;Money is any object or record that is generally accepted as payment for goods and services and repayment of debts in a given socio-economic context or country.&quot; - <a href=\"https://en.wikipedia.org/wiki/Money\">Wikipedia</a></p>","class_methods":[{"html_id":"configure(&:Money::Context->):Nil-class-method","name":"configure","doc":"Yields the given block with the current `Money.context` as an argument.\n\n```\nMoney.configure do |context|\n  context.infinite_precision = true\n  context.default_currency = \"EUR\"\nend\n```","summary":"<p>Yields the given block with the current <code>Money.context</code> as an argument.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":48,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L48"},"def":{"name":"configure","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Money::Context ->)"},"return_type":"Nil","visibility":"Public","body":"yield context"},"external_var":false},{"html_id":"disallow_currency_conversion!-class-method","name":"disallow_currency_conversion!","doc":"Sets the default exchange to be a `Currency::Exchange::SingleCurrency` exchange that raises\non currency exchange. Useful when apps operate in a single currency at a time.","summary":"<p>Sets the default exchange to be a <code><a href=\"Money/Currency/Exchange/SingleCurrency.html\">Currency::Exchange::SingleCurrency</a></code> exchange that raises on currency exchange.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":108,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L108"},"def":{"name":"disallow_currency_conversion!","visibility":"Public","body":"self.default_exchange = Currency::Exchange::SingleCurrency.new"},"external_var":false},{"html_id":"spawn_with_same_context(**options,&block:->):Nil-class-method","name":"spawn_with_same_context","doc":"Spawns a new fiber with the `Money::Context` copied from the current fiber.\n\n```\nMoney.default_currency.code # => \"USD\"\nMoney.default_currency = \"PLN\"\n\nspawn do\n  Money.default_currency.code # => \"USD\"\nend\n\n# vs\n\nMoney.spawn_with_same_context do\n  Money.default_currency.code # => \"PLN\"\nend\n```\n\nNOTE: References to the `#default_{currency, exchange, rate_store}` properties\nwill be shared between the current fiber and the spawned fiber.","summary":"<p>Spawns a new fiber with the <code><a href=\"Money/Context.html\">Money::Context</a></code> copied from the current fiber.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":71,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L71"},"def":{"name":"spawn_with_same_context","double_splat":{"name":"options","external_name":"options","restriction":""},"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"(->)"},"return_type":"Nil","visibility":"Public","body":"current_context = context.dup\nwrapper = -> do\n  self.context = current_context\n  block.call\nend\nspawn(*Tuple.new, **options, &wrapper)\n"},"external_var":false},{"html_id":"with_infinite_precision(enabled=true,&)-class-method","name":"with_infinite_precision","doc":"Sets the given infinite precision value within the lifetime of the given block.\n\nSee also `Money.infinite_precision?`.","summary":"<p>Sets the given infinite precision value within the lifetime of the given block.</p>","abstract":false,"args":[{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""}],"args_string":"(enabled = true, &)","args_html":"(enabled = <span class=\"n\">true</span>, &)","location":{"filename":"src/money/money.cr","line_number":83,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L83"},"def":{"name":"with_infinite_precision","args":[{"name":"enabled","default_value":"true","external_name":"enabled","restriction":""}],"yields":0,"block_arity":0,"visibility":"Public","body":"prev_infinite_precision = infinite_precision?\nself.infinite_precision = enabled\nbegin\n  yield\nensure\n  self.infinite_precision = prev_infinite_precision\nend\n"},"external_var":false},{"html_id":"with_rounding_mode(mode:Number::RoundingMode,&)-class-method","name":"with_rounding_mode","doc":"Sets the given rounding *mode* within the lifetime of the given block.\n\nSee also `Money.rounding_mode`.","summary":"<p>Sets the given rounding <em>mode</em> within the lifetime of the given block.</p>","abstract":false,"args":[{"name":"mode","external_name":"mode","restriction":"Number::RoundingMode"}],"args_string":"(mode : Number::RoundingMode, &)","args_html":"(mode : Number::RoundingMode, &)","location":{"filename":"src/money/money.cr","line_number":96,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L96"},"def":{"name":"with_rounding_mode","args":[{"name":"mode","external_name":"mode","restriction":"Number::RoundingMode"}],"yields":0,"block_arity":0,"visibility":"Public","body":"prev_rounding_mode = rounding_mode\nself.rounding_mode = mode\nbegin\n  yield\nensure\n  self.rounding_mode = prev_rounding_mode\nend\n"},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/money/json.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/json.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"case pull.kind\nwhen .string?\n  parse(pull.read_string)\nelse\n  previous_def(pull)\nend"},"external_var":false},{"html_id":"new(value:Number=0,currency=Money.default_currency,exchange=nil)-class-method","name":"new","doc":"Creates a new `Money` object of *value* given as an amount\nof the given *currency* (as fractional if `Int`, or whole amount otherwise).\n\n```\nMoney.new                      # => Money(@amount=0.0 @currency=\"USD\")\nMoney.new(1_50)                # => Money(@amount=1.5 @currency=\"USD\")\nMoney.new(1.5, :usd)           # => Money(@amount=1.5 @currency=\"USD\")\nMoney.new(1.5.to_big_d, \"USD\") # => Money(@amount=1.5 @currency=\"USD\")\n```\n\nWARNING: Floating points cannot guarantee precision. Therefore, they\nshould only be used when you no longer need to represent currency or\nworking with another system that requires floats.","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of <em>value</em> given as an amount of the given <em>currency</em> (as fractional if <code>Int</code>, or whole amount otherwise).</p>","abstract":false,"args":[{"name":"value","default_value":"0","external_name":"value","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(value : Number = 0, currency = Money.default_currency, exchange = nil)","args_html":"(value : <a href=\"Number.html\">Number</a> = <span class=\"n\">0</span>, currency = <span class=\"t\">Money</span>.default_currency, exchange = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money.cr","line_number":125,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L125"},"def":{"name":"new","args":[{"name":"value","default_value":"0","external_name":"value","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"visibility":"Public","body":"new(value, currency, exchange)"},"external_var":false},{"html_id":"new(*,amount:Number,currency=Money.default_currency,exchange:Money::Currency::Exchange|Nil=nil)-class-method","name":"new","doc":"Creates a new `Money` object of value given as an *amount*\nof the given *currency*.\n\n```\nMoney.new(amount: 13.37) # => Money(@amount=13.37)\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given as an <em>amount</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"amount","external_name":"amount","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":"::Money::Currency::Exchange | ::Nil"}],"args_string":"(*, amount : Number, currency = Money.default_currency, exchange : Money::Currency::Exchange | Nil = nil)","args_html":"(*, amount : <a href=\"Number.html\">Number</a>, currency = <span class=\"t\">Money</span>.default_currency, exchange : <a href=\"Money/Currency/Exchange.html\">Money::Currency::Exchange</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money.cr","line_number":178,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L178"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"amount","external_name":"amount","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":"::Money::Currency::Exchange | ::Nil"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(amount: amount, currency: currency, exchange: exchange)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*,fractional:Number,currency=Money.default_currency,exchange:Money::Currency::Exchange|Nil=nil)-class-method","name":"new","doc":"Creates a new `Money` object of value given as a *fractional*\nof the given *currency*.\n\n```\nMoney.new(fractional: 13_37) # => Money(@amount=13.37)\n```","summary":"<p>Creates a new <code><a href=\"Money.html\">Money</a></code> object of value given as a <em>fractional</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fractional","external_name":"fractional","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":"::Money::Currency::Exchange | ::Nil"}],"args_string":"(*, fractional : Number, currency = Money.default_currency, exchange : Money::Currency::Exchange | Nil = nil)","args_html":"(*, fractional : <a href=\"Number.html\">Number</a>, currency = <span class=\"t\">Money</span>.default_currency, exchange : <a href=\"Money/Currency/Exchange.html\">Money::Currency::Exchange</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money.cr","line_number":190,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L190"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"fractional","external_name":"fractional","restriction":"Number"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":"::Money::Currency::Exchange | ::Nil"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(fractional: fractional, currency: currency, exchange: exchange)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Money):Int32-instance-method","name":"<=>","doc":"Compares two `Money` objects.\n\nNOTE: Two `Money` objects with `0` amount are considered equal,\nregardless of their currency.\n\nNOTE: Performs currency conversion if necessary.","summary":"<p>Compares two <code><a href=\"Money.html\">Money</a></code> objects.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Int32","args_html":"(other : <a href=\"Money.html\">Money</a>) : Int32","location":{"filename":"src/money/money.cr","line_number":220,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L220"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Int32","visibility":"Public","body":"if zero? && other.zero?\n  return 0\nend\n\nwith_same_currency(other) do |converted_other|\n  amount <=> converted_other.amount\nend\n"},"external_var":false},{"html_id":"amount:BigDecimal-instance-method","name":"amount","doc":"Returns the numerical value of the money.\n\n```\nMoney.new(1_00, \"USD\").amount # => 1.0\n```\n\nSee also `#fractional`, `Money.infinite_precision?` and `Money.rounding_mode`.","summary":"<p>Returns the numerical value of the money.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":247,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L247"},"def":{"name":"amount","return_type":"BigDecimal","visibility":"Public","body":"if Money.infinite_precision?\n  @amount\nelse\n  @amount.round(currency.exponent, mode: Money.rounding_mode)\nend"},"external_var":false},{"html_id":"cents:BigDecimal-instance-method","name":"cents","doc":"Alias of `#fractional`.","summary":"<p>Alias of <code><a href=\"Money.html#fractional%3ABigDecimal-instance-method\">#fractional</a></code>.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":274,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L274"},"def":{"name":"cents","return_type":"BigDecimal","visibility":"Public","body":"fractional"},"external_var":false},{"html_id":"currency:Currency-instance-method","name":"currency","doc":"The money's currency.","summary":"<p>The money's currency.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":154,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L154"},"def":{"name":"currency","return_type":"Currency","visibility":"Public","body":"@currency"},"external_var":false},{"html_id":"eql?(other:Money):Bool-instance-method","name":"eql?","doc":"Returns `true` if the two `Money` objects have same `#amount` and `#currency`,\n`false` otherwise.\n\nNOTE: Unlike `#==` it does **not** perform currency conversion.","summary":"<p>Returns <code>true</code> if the two <code><a href=\"Money.html\">Money</a></code> objects have same <code><a href=\"Money.html#amount%3ABigDecimal-instance-method\">#amount</a></code> and <code><a href=\"Money.html#currency%3ACurrency-instance-method\">#currency</a></code>, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Bool","args_html":"(other : <a href=\"Money.html\">Money</a>) : Bool","location":{"filename":"src/money/money.cr","line_number":210,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L210"},"def":{"name":"eql?","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Bool","visibility":"Public","body":"hash == other.hash"},"external_var":false},{"html_id":"exchange:Currency::Exchange-instance-method","name":"exchange","abstract":false,"location":{"filename":"src/money/money.cr","line_number":168,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L168"},"def":{"name":"exchange","return_type":"Currency::Exchange","visibility":"Public","body":"@exchange || Money.default_exchange"},"external_var":false},{"html_id":"exchange=(exchange:Currency::Exchange|Nil)-instance-method","name":"exchange=","abstract":false,"args":[{"name":"exchange","external_name":"exchange","restriction":"Currency::Exchange | ::Nil"}],"args_string":"(exchange : Currency::Exchange | Nil)","args_html":"(exchange : <a href=\"Money/Currency/Exchange.html\">Currency::Exchange</a> | Nil)","location":{"filename":"src/money/money.cr","line_number":165,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L165"},"def":{"name":"exchange=","args":[{"name":"exchange","external_name":"exchange","restriction":"Currency::Exchange | ::Nil"}],"visibility":"Public","body":"@exchange = exchange"},"external_var":false},{"html_id":"fractional:BigDecimal-instance-method","name":"fractional","doc":"The value of the monetary amount represented in the fractional or subunit\nof the currency.\n\nFor example, in the US dollar currency the fractional unit is cents, and\nthere are 100 cents in one US dollar. So given the `Money` representation of\none US dollar, the fractional interpretation is 100.\n\nAnother example is that of the Kuwaiti dinar. In this case the fractional\nunit is the fils and there 1000 fils to one Kuwaiti dinar. So given the\n`Money` representation of one Kuwaiti dinar, the fractional interpretation\nis 1000.\n\nSee also `Money.infinite_precision?` and `Money.rounding_mode`.","summary":"<p>The value of the monetary amount represented in the fractional or subunit of the currency.</p>","abstract":false,"location":{"filename":"src/money/money.cr","line_number":268,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L268"},"def":{"name":"fractional","return_type":"BigDecimal","visibility":"Public","body":"amount * currency.subunit_to_unit"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"Returns hash value based on the `amount` and `currency` attributes.","summary":"<p>Returns hash value based on the <code><a href=\"Money.html#amount%3ABigDecimal-instance-method\">#amount</a></code> and <code><a href=\"Money.html#currency%3ACurrency-instance-method\">#currency</a></code> attributes.</p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/money/money.cr","line_number":204,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L204"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = amount.hash(hasher)\n\nhasher = currency.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/money/money/json.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/json.cr#L15"},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"{\n  amount: amount,\n  currency: currency.to_s,\n}.to_json(json)"},"external_var":false},{"html_id":"with_currency(new_currency:String|Symbol|Currency):Money-instance-method","name":"with_currency","doc":"Returns a new `Money` instance in a given currency - if it's different\nfrom the current `#currency` - or `self` otherwise, leaving the amount\nintact and **not** performing currency conversion.","summary":"<p>Returns a new <code><a href=\"Money.html\">Money</a></code> instance in a given currency - if it's different from the current <code><a href=\"Money.html#currency%3ACurrency-instance-method\">#currency</a></code> - or <code>self</code> otherwise, leaving the amount intact and <strong>not</strong> performing currency conversion.</p>","abstract":false,"args":[{"name":"new_currency","external_name":"new_currency","restriction":"String | Symbol | Currency"}],"args_string":"(new_currency : String | Symbol | Currency) : Money","args_html":"(new_currency : <a href=\"String.html\">String</a> | Symbol | <a href=\"Money/Currency.html\">Currency</a>) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/money/money.cr","line_number":231,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money.cr#L231"},"def":{"name":"with_currency","args":[{"name":"new_currency","external_name":"new_currency","restriction":"String | Symbol | Currency"}],"return_type":"Money","visibility":"Public","body":"new_currency = Currency.wrap(new_currency)\nif new_currency == currency\n  self\nelse\n  copy_with(currency: new_currency, amount: @amount)\nend\n"},"external_var":false}],"types":[{"html_id":"money/Money/AggregateError","path":"Money/AggregateError.html","kind":"class","full_name":"Money::AggregateError","name":"AggregateError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L7"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Exception class for aggregating individual errors.","summary":"<p>Exception class for aggregating individual errors.</p>","constructors":[{"html_id":"new(message:String,errors:Array(Exception)=[]ofException)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"errors","default_value":"[] of Exception","external_name":"errors","restriction":"::Array(::Exception)"}],"args_string":"(message : String, errors : Array(Exception) = [] of Exception)","args_html":"(message : <a href=\"../String.html\">String</a>, errors : Array(Exception) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Exception</span>)","location":{"filename":"src/money/error.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L10"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"errors","default_value":"[] of Exception","external_name":"errors","restriction":"::Array(::Exception)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(errors:Array(Exception),message:String=\"AggregateError\")-class-method","name":"new","abstract":false,"args":[{"name":"errors","external_name":"errors","restriction":"::Array(::Exception)"},{"name":"message","default_value":"\"Aggregate Error\"","external_name":"message","restriction":"String"}],"args_string":"(errors : Array(Exception), message : String = \"Aggregate Error\")","args_html":"(errors : Array(Exception), message : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;Aggregate Error&quot;</span>)","location":{"filename":"src/money/error.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L14"},"def":{"name":"new","args":[{"name":"errors","external_name":"errors","restriction":"::Array(::Exception)"},{"name":"message","default_value":"\"Aggregate Error\"","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(errors, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"errors:Array(Exception)-instance-method","name":"errors","abstract":false,"location":{"filename":"src/money/error.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L8"},"def":{"name":"errors","return_type":"Array(Exception)","visibility":"Public","body":"@errors"},"external_var":false},{"html_id":"inspect_with_backtrace(io:IO):Nil-instance-method","name":"inspect_with_backtrace","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/error.cr","line_number":29,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L29"},"def":{"name":"inspect_with_backtrace","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"super(io)\nif errors.empty?\n  return\nend\n\nio << \"\\n\"\nerrors.each_with_index do |error, index|\n  if index.zero?\n  else\n    io << \"\\n\"\n  end\n  error.inspect_with_backtrace(io)\nend\n"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/error.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L18"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"super(io)\nif errors.empty?\n  return\nend\n\nio << \": \"\nerrors.each_with_index do |error, index|\n  if index.zero?\n  else\n    io << \", \"\n  end\n  error.to_s(io)\nend\n"},"external_var":false}]},{"html_id":"money/Money/Allocate","path":"Money/Allocate.html","kind":"module","full_name":"Money::Allocate","name":"Allocate","abstract":false,"locations":[{"filename":"src/money/money/allocate.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/allocate.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"allocate(parts:Enumerable(Number)):Array(Money)-instance-method","name":"allocate","doc":"Splits a given amount in parts without losing pennies.\n\nThe left-over pennies will be distributed round-robin amongst the parties.\nThis means that parts listed first will likely receive more pennies than\nones listed later.\n\nPass `{2, 1, 1}` as input to give twice as much to _part1_ as _part2_ or _part3_\nwhich results in **50%** of the cash assigned to _part1_, **25%** to _part2_,\nand **25%** to _part3_.\n\nThe results should always add up to the original amount.\n\n```\nMoney.new(5, \"USD\").allocate(3, 7).map(&.cents)      # => [2, 3]\nMoney.new(100, \"USD\").allocate(1, 1, 1).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits a given amount in parts without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Enumerable(Number)"}],"args_string":"(parts : Enumerable(Number)) : Array(Money)","args_html":"(parts : Enumerable(<a href=\"../Number.html\">Number</a>)) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":52,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/allocate.cr#L52"},"def":{"name":"allocate","args":[{"name":"parts","external_name":"parts","restriction":"Enumerable(Number)"}],"return_type":"Array(Money)","visibility":"Public","body":"(Money::Allocate\n  .generate(fractional, parts, whole_amounts: !Money.infinite_precision?))\n  .map do |amount| copy_with(fractional: amount) end"},"external_var":false},{"html_id":"allocate(*parts:Number):Array(Money)-instance-method","name":"allocate","doc":"Splits a given amount in parts without losing pennies.\n\nThe left-over pennies will be distributed round-robin amongst the parties.\nThis means that parts listed first will likely receive more pennies than\nones listed later.\n\nPass `{2, 1, 1}` as input to give twice as much to _part1_ as _part2_ or _part3_\nwhich results in **50%** of the cash assigned to _part1_, **25%** to _part2_,\nand **25%** to _part3_.\n\nThe results should always add up to the original amount.\n\n```\nMoney.new(5, \"USD\").allocate(3, 7).map(&.cents)      # => [2, 3]\nMoney.new(100, \"USD\").allocate(1, 1, 1).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits a given amount in parts without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Number"}],"args_string":"(*parts : Number) : Array(Money)","args_html":"(*parts : <a href=\"../Number.html\">Number</a>) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":59,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/allocate.cr#L59"},"def":{"name":"allocate","args":[{"name":"parts","external_name":"parts","restriction":"Number"}],"splat_index":0,"return_type":"Array(Money)","visibility":"Public","body":"allocate(parts)"},"external_var":false},{"html_id":"split(parts:Int):Array(Money)-instance-method","name":"split","doc":"Splits money evenly amongst parties without losing pennies.\n\n```\nMoney.new(100, \"USD\").split(2).map(&.cents) # => [50, 50]\nMoney.new(100, \"USD\").split(3).map(&.cents) # => [34, 33, 33]\n```","summary":"<p>Splits money evenly amongst parties without losing pennies.</p>","abstract":false,"args":[{"name":"parts","external_name":"parts","restriction":"Int"}],"args_string":"(parts : Int) : Array(Money)","args_html":"(parts : Int) : Array(<a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/allocate.cr","line_number":69,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/allocate.cr#L69"},"def":{"name":"split","args":[{"name":"parts","external_name":"parts","restriction":"Int"}],"return_type":"Array(Money)","visibility":"Public","body":"if parts.positive?\nelse\n  raise(ArgumentError.new(\"Need at least one part\"))\nend\nallocate(Array.new(parts, 1))\n"},"external_var":false}]},{"html_id":"money/Money/Arithmetic","path":"Money/Arithmetic.html","kind":"module","full_name":"Money::Arithmetic","name":"Arithmetic","abstract":false,"locations":[{"filename":"src/money/money/arithmetic.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"%(other:Number|Money):Money-instance-method","name":"%","doc":"Alias of `#modulo`.","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"args_string":"(other : Number | Money) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a> | <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":171,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L171"},"def":{"name":"%","args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"return_type":"Money","visibility":"Public","body":"modulo(other)"},"external_var":false},{"html_id":"*(other:Number):Money-instance-method","name":"*","doc":"Multiplies the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(100) * 2 # => Money(@amount=2.0)\n```","summary":"<p>Multiplies the monetary value with the given <em>other</em> <code><a href=\"../Number.html\">Number</a></code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":109,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L109"},"def":{"name":"*","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: amount * other)"},"external_var":false},{"html_id":"+(other:Money):Money-instance-method","name":"+","doc":"Returns a new `Money` object containing the sum of the two\noperands' monetary values.\n\n```\nMoney.new(100) + Money.new(100) # => Money(@amount=2.0)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the sum of the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","args_html":"(other : <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":81,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L81"},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Money","visibility":"Public","body":"if other.zero?\n  return self\nend\n\nwith_same_currency(other) do |converted_other|\n  copy_with(amount: amount + converted_other.amount)\nend\n"},"external_var":false},{"html_id":"+:Money-instance-method","name":"+","doc":"Alias of `#abs`.\n\n```\n+Money.new(-100) # => Money(@amount=1.0)\n```","summary":"<p>Alias of <code><a href=\"../Money/Arithmetic.html#abs%3AMoney-instance-method\">#abs</a></code>.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L62"},"def":{"name":"+","return_type":"Money","visibility":"Public","body":"abs"},"external_var":false},{"html_id":"-(other:Money):Money-instance-method","name":"-","doc":"Returns a new `Money` object containing the difference between the two\noperands' monetary values.\n\n```\nMoney.new(100) - Money.new(99) # => Money(@amount=0.01)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the difference between the two operands' monetary values.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Money","args_html":"(other : <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":95,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L95"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"Money","visibility":"Public","body":"if other.zero?\n  return self\nend\n\nwith_same_currency(other) do |converted_other|\n  copy_with(amount: amount - converted_other.amount)\nend\n"},"external_var":false},{"html_id":"-:Money-instance-method","name":"-","doc":"Returns a new `Money` object with changed polarity.\n\n```\n-Money.new(100) # => Money(@amount=-1.0)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object with changed polarity.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":71,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L71"},"def":{"name":"-","return_type":"Money","visibility":"Public","body":"copy_with(amount: -amount)"},"external_var":false},{"html_id":"/(other:Number):Money-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Number` and returns\na new `Money` object with this monetary value and the same `#currency`.\n\n```\nMoney.new(100) / 10 # => Money(@amount=0.1)\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code><a href=\"../Number.html\">Number</a></code> and returns a new <code><a href=\"../Money.html\">Money</a></code> object with this monetary value and the same <code>#currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":119,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L119"},"def":{"name":"/","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: amount / other)"},"external_var":false},{"html_id":"/(other:Money):BigDecimal-instance-method","name":"/","doc":"Divides the monetary value with the given *other* `Money` object and\nreturns a ratio.\n\n```\nMoney.new(100) / Money.new(10) # => 10.0\n```","summary":"<p>Divides the monetary value with the given <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object and returns a ratio.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : BigDecimal","args_html":"(other : <a href=\"../Money.html\">Money</a>) : BigDecimal","location":{"filename":"src/money/money/arithmetic.cr","line_number":129,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L129"},"def":{"name":"/","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"BigDecimal","visibility":"Public","body":"with_same_currency(other) do |converted_other|\n  amount / converted_other.amount\nend"},"external_var":false},{"html_id":"abs:Money-instance-method","name":"abs","doc":"Returns absolute value of `self` as a new `Money` object.\n\n```\nMoney.new(-100).abs # => Money(@amount=1.0)\n```","summary":"<p>Returns absolute value of <code>self</code> as a new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":52,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L52"},"def":{"name":"abs","return_type":"Money","visibility":"Public","body":"copy_with(amount: amount.abs)"},"external_var":false},{"html_id":"divmod(other:Money):Tuple(BigDecimal,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(100).divmod(9)            # => {Money(@amount=0.11), Money(@amount=0.01)}\nMoney.new(100).divmod(Money.new(9)) # => {11.0, Money(@amount=0.01)}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code><a href=\"../Number.html\">Number</a></code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money) : Tuple(BigDecimal, Money)","args_html":"(other : <a href=\"../Money.html\">Money</a>) : Tuple(BigDecimal, <a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/arithmetic.cr","line_number":142,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L142"},"def":{"name":"divmod","args":[{"name":"other","external_name":"other","restriction":"Money"}],"return_type":"::Tuple(BigDecimal, Money)","visibility":"Public","body":"with_same_currency(other) do |converted_other|\n  quotient, remainder = fractional.divmod(converted_other.fractional)\n\n  {quotient, copy_with(fractional: remainder)}\nend"},"external_var":false},{"html_id":"divmod(other:Number):Tuple(Money,Money)-instance-method","name":"divmod","doc":"Divide by `Money` or `Number` and return `Tuple` containing\nquotient and modulus.\n\n```\nMoney.new(100).divmod(9)            # => {Money(@amount=0.11), Money(@amount=0.01)}\nMoney.new(100).divmod(Money.new(9)) # => {11.0, Money(@amount=0.01)}\n```","summary":"<p>Divide by <code><a href=\"../Money.html\">Money</a></code> or <code><a href=\"../Number.html\">Number</a></code> and return <code>Tuple</code> containing quotient and modulus.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Tuple(Money, Money)","args_html":"(other : <a href=\"../Number.html\">Number</a>) : Tuple(<a href=\"../Money.html\">Money</a>, <a href=\"../Money.html\">Money</a>)","location":{"filename":"src/money/money/arithmetic.cr","line_number":152,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L152"},"def":{"name":"divmod","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"::Tuple(Money, Money)","visibility":"Public","body":"quotient, remainder = fractional.divmod(other.to_big_d)\n\n{copy_with(fractional: quotient), copy_with(fractional: remainder)}\n"},"external_var":false},{"html_id":"modulo(other:Number|Money):Money-instance-method","name":"modulo","doc":"Equivalent to `#divmod(other)[1]`.\n\n```\nMoney.new(100).modulo(9)            # => Money(@amount=0.01)\nMoney.new(100).modulo(Money.new(9)) # => Money(@amount=0.01)\n```","summary":"<p>Equivalent to <code><a href=\"../Money/Arithmetic.html#divmod%28other%3AMoney%29%3ATuple%28BigDecimal%2CMoney%29-instance-method\">#divmod(other)</a>[1]</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"args_string":"(other : Number | Money) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a> | <a href=\"../Money.html\">Money</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":165,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L165"},"def":{"name":"modulo","args":[{"name":"other","external_name":"other","restriction":"Number | Money"}],"return_type":"Money","visibility":"Public","body":"(divmod(other))[1]"},"external_var":false},{"html_id":"negative?-instance-method","name":"negative?","doc":"Returns `true` if the money amount is less than 0, `false` otherwise.\n\n```\nMoney.new(-1).negative? # => true\nMoney.new(0).negative?  # => false\nMoney.new(1).negative?  # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is less than 0, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L32"},"def":{"name":"negative?","visibility":"Public","body":"amount.negative?"},"external_var":false},{"html_id":"percentage(value:Number):Money-instance-method","name":"percentage","doc":"Returns a new `Money` object containing the percentage of the\nmonetary value.\n\n```\nMoney.new(100).percentage(10) # => Money(@amount=0.1)\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> object containing the percentage of the monetary value.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Number"}],"args_string":"(value : Number) : Money","args_html":"(value : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":194,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L194"},"def":{"name":"percentage","args":[{"name":"value","external_name":"value","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"self * (value / 100)"},"external_var":false},{"html_id":"positive?-instance-method","name":"positive?","doc":"Returns `true` if the money amount is greater than 0, `false` otherwise.\n\n```\nMoney.new(1).positive?  # => true\nMoney.new(0).positive?  # => false\nMoney.new(-1).positive? # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is greater than 0, <code>false</code> otherwise.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L21"},"def":{"name":"positive?","visibility":"Public","body":"amount.positive?"},"external_var":false},{"html_id":"remainder(other:Number):Money-instance-method","name":"remainder","doc":"If different signs `#modulo(other) - other`, otherwise `#modulo(other)`.\n\n```\nMoney.new(100).remainder(9) # => Money(@amount=0.01)\n```","summary":"<p>If different signs <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo(other)</a> - other</code>, otherwise <code><a href=\"../Money/Arithmetic.html#modulo%28other%3ANumber%7CMoney%29%3AMoney-instance-method\">#modulo(other)</a></code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Number"}],"args_string":"(other : Number) : Money","args_html":"(other : <a href=\"../Number.html\">Number</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/arithmetic.cr","line_number":180,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L180"},"def":{"name":"remainder","args":[{"name":"other","external_name":"other","restriction":"Number"}],"return_type":"Money","visibility":"Public","body":"if (negative? && other.negative?) || (positive? && other.positive?)\n  modulo(other)\nelse\n  (modulo(other)) - copy_with(fractional: other)\nend"},"external_var":false},{"html_id":"sign:Int32-instance-method","name":"sign","doc":"Returns the sign of the money amount.\n\n```\nMoney.new(-100).sign # => -1\nMoney.new(0).sign    # => 0\nMoney.new(100).sign  # => 1\n```","summary":"<p>Returns the sign of the money amount.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L10"},"def":{"name":"sign","return_type":"Int32","visibility":"Public","body":"amount.sign"},"external_var":false},{"html_id":"zero?-instance-method","name":"zero?","doc":"Returns `true` if the money amount is zero.\n\n```\nMoney.new(0).zero?    # => true\nMoney.new(100).zero?  # => false\nMoney.new(-100).zero? # => false\n```","summary":"<p>Returns <code>true</code> if the money amount is zero.</p>","abstract":false,"location":{"filename":"src/money/money/arithmetic.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/arithmetic.cr#L43"},"def":{"name":"zero?","visibility":"Public","body":"amount.zero?"},"external_var":false}]},{"html_id":"money/Money/Casting","path":"Money/Casting.html","kind":"module","full_name":"Money::Casting","name":"Casting","abstract":false,"locations":[{"filename":"src/money/money/casting.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/casting.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"to_big_d:BigDecimal-instance-method","name":"to_big_d","doc":"Returns the amount of money as a `BigDecimal`.\n\n```\nMoney.us_dollar(1_00).to_big_d # => BigDecimal.new(\"1.0\")\n```","summary":"<p>Returns the amount of money as a <code>BigDecimal</code>.</p>","abstract":false,"location":{"filename":"src/money/money/casting.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/casting.cr#L8"},"def":{"name":"to_big_d","return_type":"BigDecimal","visibility":"Public","body":"amount"},"external_var":false},{"html_id":"to_big_f:BigFloat-instance-method","name":"to_big_f","doc":"Returns the amount of money as a `BigFloat`.\n\nWARNING: Floating points cannot guarantee precision. Therefore, this\nfunction should only be used when you no longer need to represent\ncurrency or working with another system that requires floats.\n\n```\nMoney.us_dollar(100).to_big_f # => BigFloat.new(\"1.0\")\n```","summary":"<p>Returns the amount of money as a <code>BigFloat</code>.</p>","abstract":false,"location":{"filename":"src/money/money/casting.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/casting.cr#L21"},"def":{"name":"to_big_f","return_type":"BigFloat","visibility":"Public","body":"amount.to_big_f"},"external_var":false}]},{"html_id":"money/Money/Constructors","path":"Money/Constructors.html","kind":"module","full_name":"Money::Constructors","name":"Constructors","abstract":false,"locations":[{"filename":"src/money/money/constructors.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"bitcoin(cents,exchange=nil)-instance-method","name":"bitcoin","doc":"Creates a new `Money` object of the given value, using the\nBitcoin cryptocurrency.\n\n```\nMoney.bitcoin(100) # => Money(@amount=0.000001 @currency=\"BTC\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Bitcoin cryptocurrency.</p>","abstract":false,"args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(cents, exchange = nil)","args_html":"(cents, exchange = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money/constructors.cr","line_number":52,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L52"},"def":{"name":"bitcoin","args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"visibility":"Public","body":"new(cents, \"BTC\", exchange)"},"external_var":false},{"html_id":"euro(cents,exchange=nil)-instance-method","name":"euro","doc":"Creates a new `Money` object of the given value, using the\nEuro currency.\n\n```\nMoney.euro(100) # => Money(@amount=1.0 @currency=\"EUR\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the Euro currency.</p>","abstract":false,"args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(cents, exchange = nil)","args_html":"(cents, exchange = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money/constructors.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L42"},"def":{"name":"euro","args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"visibility":"Public","body":"new(cents, \"EUR\", exchange)"},"external_var":false},{"html_id":"from_amount(amount:Number|String,currency=Money.default_currency,exchange=nil):Money-instance-method","name":"from_amount","doc":"Creates a new `Money` object of value given in the *unit* of the given\n*currency*.\n\n```\nMoney.from_amount(23.45, \"USD\") # => Money(@amount=23.45 @currency=\"USD\")\nMoney.from_amount(23.45, \"JPY\") # => Money(@amount=23.0 @currency=\"JPY\")\n```\n\nSee also `#initialize`.","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of value given in the <em>unit</em> of the given <em>currency</em>.</p>","abstract":false,"args":[{"name":"amount","external_name":"amount","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(amount : Number | String, currency = Money.default_currency, exchange = nil) : Money","args_html":"(amount : <a href=\"../Number.html\">Number</a> | <a href=\"../String.html\">String</a>, currency = <span class=\"t\">Money</span>.default_currency, exchange = <span class=\"n\">nil</span>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L12"},"def":{"name":"from_amount","args":[{"name":"amount","external_name":"amount","restriction":"Number | String"},{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(amount.to_big_d, currency, exchange)"},"external_var":false},{"html_id":"us_dollar(cents,exchange=nil)-instance-method","name":"us_dollar","doc":"Creates a new `Money` object of the given value, using the\nAmerican dollar currency.\n\n```\nMoney.us_dollar(100) # => Money(@amount=1.0 @currency=\"USD\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object of the given value, using the American dollar currency.</p>","abstract":false,"args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(cents, exchange = nil)","args_html":"(cents, exchange = <span class=\"n\">nil</span>)","location":{"filename":"src/money/money/constructors.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L32"},"def":{"name":"us_dollar","args":[{"name":"cents","external_name":"cents","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"visibility":"Public","body":"new(cents, \"USD\", exchange)"},"external_var":false},{"html_id":"zero(currency=Money.default_currency,exchange=nil):Money-instance-method","name":"zero","doc":"Creates a new `Money` object with value `0`.\n\n```\nMoney.zero       # => Money(@amount=0.0)\nMoney.zero(:pln) # => Money(@amount=0.0 @currency=\"PLN\")\n```","summary":"<p>Creates a new <code><a href=\"../Money.html\">Money</a></code> object with value <code>0</code>.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(currency = Money.default_currency, exchange = nil) : Money","args_html":"(currency = <span class=\"t\">Money</span>.default_currency, exchange = <span class=\"n\">nil</span>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/constructors.cr","line_number":22,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/constructors.cr#L22"},"def":{"name":"zero","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"return_type":"Money","visibility":"Public","body":"new(0, currency, exchange)"},"external_var":false}]},{"html_id":"money/Money/Context","path":"Money/Context.html","kind":"class","full_name":"Money::Context","name":"Context","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/context.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"`Context` class holding global settings for `Money` objects.\nEach `Fiber` has its own `Fiber#money_context` instance.\n\nSee also `Money.spawn_with_same_context`.","summary":"<p><code><a href=\"../Money/Context.html\">Context</a></code> class holding global settings for <code><a href=\"../Money.html\">Money</a></code> objects.</p>","instance_methods":[{"html_id":"default_currency:Currency-instance-method","name":"default_currency","doc":"Default currency for creating new `Money` object.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L38"},"def":{"name":"default_currency","return_type":"Currency","visibility":"Public","body":"if (__temp_144 = @default_currency).nil?\n  @default_currency = (Currency.find(\"USD\"))\nelse\n  __temp_144\nend"},"external_var":false},{"html_id":"default_currency=(currency_code:String|Symbol)-instance-method","name":"default_currency=","doc":"Default currency for creating new `Money` object.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"currency_code","external_name":"currency_code","restriction":"String | Symbol"}],"args_string":"(currency_code : String | Symbol)","args_html":"(currency_code : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/money/context.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L41"},"def":{"name":"default_currency=","args":[{"name":"currency_code","external_name":"currency_code","restriction":"String | Symbol"}],"visibility":"Public","body":"self.default_currency = Currency.find(currency_code)"},"external_var":false},{"html_id":"default_currency=(default_currency:Currency)-instance-method","name":"default_currency=","doc":"Default currency for creating new `Money` object.","summary":"<p>Default currency for creating new <code><a href=\"../Money.html\">Money</a></code> object.</p>","abstract":false,"args":[{"name":"default_currency","external_name":"default_currency","restriction":"Currency"}],"args_string":"(default_currency : Currency)","args_html":"(default_currency : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/context.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L38"},"def":{"name":"default_currency=","args":[{"name":"default_currency","external_name":"default_currency","restriction":"Currency"}],"visibility":"Public","body":"@default_currency = default_currency"},"external_var":false},{"html_id":"default_exchange:Currency::Exchange-instance-method","name":"default_exchange","doc":"Each `Money` object is associated to a currency exchange object.\nThis property allows you to specify the default exchange object.\nThe default value for this property is an instance of\n`Currency::Exchange`, which allows one to specify custom exchange rates.","summary":"<p>Each <code><a href=\"../Money.html\">Money</a></code> object is associated to a currency exchange object.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L49"},"def":{"name":"default_exchange","return_type":"Currency::Exchange","visibility":"Public","body":"if (__temp_145 = @default_exchange).nil?\n  @default_exchange = (Currency::Exchange.new)\nelse\n  __temp_145\nend"},"external_var":false},{"html_id":"default_exchange=(default_exchange:Currency::Exchange)-instance-method","name":"default_exchange=","doc":"Each `Money` object is associated to a currency exchange object.\nThis property allows you to specify the default exchange object.\nThe default value for this property is an instance of\n`Currency::Exchange`, which allows one to specify custom exchange rates.","summary":"<p>Each <code><a href=\"../Money.html\">Money</a></code> object is associated to a currency exchange object.</p>","abstract":false,"args":[{"name":"default_exchange","external_name":"default_exchange","restriction":"Currency::Exchange"}],"args_string":"(default_exchange : Currency::Exchange)","args_html":"(default_exchange : <a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a>)","location":{"filename":"src/money/context.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L49"},"def":{"name":"default_exchange=","args":[{"name":"default_exchange","external_name":"default_exchange","restriction":"Currency::Exchange"}],"visibility":"Public","body":"@default_exchange = default_exchange"},"external_var":false},{"html_id":"default_rate_provider:Currency::RateProvider-instance-method","name":"default_rate_provider","doc":"Default currency rate provider used by `Currency::Exchange` objects.","summary":"<p>Default currency rate provider used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L61"},"def":{"name":"default_rate_provider","return_type":"Currency::RateProvider","visibility":"Public","body":"if (__temp_147 = @default_rate_provider).nil?\n  @default_rate_provider = (Currency::RateProvider::Null.new)\nelse\n  __temp_147\nend"},"external_var":false},{"html_id":"default_rate_provider=(default_rate_provider:Currency::RateProvider)-instance-method","name":"default_rate_provider=","doc":"Default currency rate provider used by `Currency::Exchange` objects.","summary":"<p>Default currency rate provider used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"args":[{"name":"default_rate_provider","external_name":"default_rate_provider","restriction":"Currency::RateProvider"}],"args_string":"(default_rate_provider : Currency::RateProvider)","args_html":"(default_rate_provider : <a href=\"../Money/Currency/RateProvider.html\">Currency::RateProvider</a>)","location":{"filename":"src/money/context.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L61"},"def":{"name":"default_rate_provider=","args":[{"name":"default_rate_provider","external_name":"default_rate_provider","restriction":"Currency::RateProvider"}],"visibility":"Public","body":"@default_rate_provider = default_rate_provider"},"external_var":false},{"html_id":"default_rate_store:Currency::RateStore-instance-method","name":"default_rate_store","doc":"Default currency rate store used by `Currency::Exchange` objects.\nIt defaults to using an in-memory, concurrency-safe, store instance for\nstoring exchange rates.","summary":"<p>Default currency rate store used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L56"},"def":{"name":"default_rate_store","return_type":"Currency::RateStore","visibility":"Public","body":"if (__temp_146 = @default_rate_store).nil?\n  @default_rate_store = (Currency::RateStore::Memory.new)\nelse\n  __temp_146\nend"},"external_var":false},{"html_id":"default_rate_store=(default_rate_store:Currency::RateStore)-instance-method","name":"default_rate_store=","doc":"Default currency rate store used by `Currency::Exchange` objects.\nIt defaults to using an in-memory, concurrency-safe, store instance for\nstoring exchange rates.","summary":"<p>Default currency rate store used by <code><a href=\"../Money/Currency/Exchange.html\">Currency::Exchange</a></code> objects.</p>","abstract":false,"args":[{"name":"default_rate_store","external_name":"default_rate_store","restriction":"Currency::RateStore"}],"args_string":"(default_rate_store : Currency::RateStore)","args_html":"(default_rate_store : <a href=\"../Money/Currency/RateStore.html\">Currency::RateStore</a>)","location":{"filename":"src/money/context.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L56"},"def":{"name":"default_rate_store=","args":[{"name":"default_rate_store","external_name":"default_rate_store","restriction":"Currency::RateStore"}],"visibility":"Public","body":"@default_rate_store = default_rate_store"},"external_var":false},{"html_id":"infinite_precision=(infinite_precision:Bool)-instance-method","name":"infinite_precision=","doc":"Use this to control infinite precision cents.","summary":"<p>Use this to control infinite precision cents.</p>","abstract":false,"args":[{"name":"infinite_precision","external_name":"infinite_precision","restriction":"Bool"}],"args_string":"(infinite_precision : Bool)","args_html":"(infinite_precision : Bool)","location":{"filename":"src/money/context.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L32"},"def":{"name":"infinite_precision=","args":[{"name":"infinite_precision","external_name":"infinite_precision","restriction":"Bool"}],"visibility":"Public","body":"@infinite_precision = infinite_precision"},"external_var":false},{"html_id":"infinite_precision?:Bool-instance-method","name":"infinite_precision?","doc":"Use this to control infinite precision cents.","summary":"<p>Use this to control infinite precision cents.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L32"},"def":{"name":"infinite_precision?","return_type":"Bool","visibility":"Public","body":"@infinite_precision"},"external_var":false},{"html_id":"rounding_mode:Number::RoundingMode-instance-method","name":"rounding_mode","doc":"Default rounding mode.","summary":"<p>Default rounding mode.</p>","abstract":false,"location":{"filename":"src/money/context.cr","line_number":35,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L35"},"def":{"name":"rounding_mode","return_type":"Number::RoundingMode","visibility":"Public","body":"@rounding_mode"},"external_var":false},{"html_id":"rounding_mode=(rounding_mode:Number::RoundingMode)-instance-method","name":"rounding_mode=","doc":"Default rounding mode.","summary":"<p>Default rounding mode.</p>","abstract":false,"args":[{"name":"rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode)","args_html":"(rounding_mode : Number::RoundingMode)","location":{"filename":"src/money/context.cr","line_number":35,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/context.cr#L35"},"def":{"name":"rounding_mode=","args":[{"name":"rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"visibility":"Public","body":"@rounding_mode = rounding_mode"},"external_var":false}]},{"html_id":"money/Money/Currency","path":"Money/Currency.html","kind":"class","full_name":"Money::Currency","name":"Currency","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L13"},{"filename":"src/money/currency/enumeration.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L1"},{"filename":"src/money/currency/exchange.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L1"},{"filename":"src/money/currency/exchange/single_currency.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange/single_currency.cr#L1"},{"filename":"src/money/currency/json.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L6"},{"filename":"src/money/currency/loader.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/loader.cr#L1"},{"filename":"src/money/currency/rate.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L1"},{"filename":"src/money/currency/rate_provider.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L1"},{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L3"},{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L3"},{"filename":"src/money/currency/rate_provider/compound.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L3"},{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L3"},{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L3"},{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L3"},{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L4"},{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L3"},{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L3"},{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L4"},{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L3"},{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L3"},{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L3"},{"filename":"src/money/currency/rate_provider/http.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/http.cr#L6"},{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L3"},{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L3"},{"filename":"src/money/currency/rate_provider/null.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L1"},{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L3"},{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L3"},{"filename":"src/money/currency/rate_store.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L1"},{"filename":"src/money/currency/rate_store/file.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L3"},{"filename":"src/money/currency/rate_store/memory.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/memory.cr#L1"},{"filename":"src/money/currency/type.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/type.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"money/Money/Currency/Enumeration","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration"},{"html_id":"money/Money/Currency/Loader","kind":"module","full_name":"Money::Currency::Loader","name":"Loader"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Represents a specific currency unit.\n\nSee [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).","summary":"<p>Represents a specific currency unit.</p>","class_methods":[{"html_id":"reset!:Nil-class-method","name":"reset!","doc":"Resets all registered currencies to their defaults.","summary":"<p>Resets all registered currencies to their defaults.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":46,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L46"},"def":{"name":"reset!","return_type":"Nil","visibility":"Public","body":"@@table_mutex.synchronize do\n  @@table = load_currencies\nend"},"external_var":false},{"html_id":"table:Hash(String,Currency)-class-method","name":"table","doc":"List of known currencies.","summary":"<p>List of known currencies.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L23"},"def":{"name":"table","return_type":"Hash(String, Currency)","visibility":"Public","body":"@@table_mutex.synchronize do\n  @@table || (@@table = load_currencies)\nend"},"external_var":false},{"html_id":"unregister(currency:String|Symbol|Currency):Currency|Nil-class-method","name":"unregister","doc":"Unregisters a currency.","summary":"<p>Unregisters a currency.</p>","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"String | Symbol | Currency"}],"args_string":"(currency : String | Symbol | Currency) : Currency | Nil","args_html":"(currency : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L37"},"def":{"name":"unregister","args":[{"name":"currency","external_name":"currency","restriction":"String | Symbol | Currency"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"if currency = wrap?(currency)\n  @@table_mutex.synchronize do\n    table.delete(currency.id)\n  end\nend"},"external_var":false},{"html_id":"wrap?(value:String|Symbol|Currency):Currency|Nil-class-method","name":"wrap?","doc":"Wraps the *value* in a `Currency` object.\n\n```\nc1 = Money::Currency.find(:usd)\nMoney::Currency.wrap?(c1)    # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(\"usd\") # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:usd)  # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:foo)  # => nil\n```","summary":"<p>Wraps the <em>value</em> in a <code><a href=\"../Money/Currency.html\">Currency</a></code> object.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | Symbol | Currency"}],"args_string":"(value : String | Symbol | Currency) : Currency | Nil","args_html":"(value : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L61"},"def":{"name":"wrap?","args":[{"name":"value","external_name":"value","restriction":"String | Symbol | Currency"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"case value\nwhen String, Symbol\n  find?(value)\nwhen Currency\n  value\nend"},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L9"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"case pull.kind\nwhen .string?\n  find(pull.read_string)\nelse\n  previous_def(pull)\nend"},"external_var":false},{"html_id":"new(*,type:Money::Currency::Type|Nil=nil,priority:Int32|Nil=nil,iso_numeric:Int32|Nil=nil,code:String,name:Nil|String=nil,symbol:Nil|String=nil,disambiguate_symbol:Nil|String=nil,alternate_symbols:Nil|Array(String)=nil,subunit:Nil|String=nil,subunit_to_unit:UInt64,symbol_first:Bool|Nil=nil,html_entity:Nil|String=nil,decimal_mark:Nil|String=nil,thousands_separator:Nil|String=nil,smallest_denomination:Int32|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Money::Currency::Type | ::Nil"},{"name":"priority","default_value":"nil","external_name":"priority","restriction":"::Int32 | ::Nil"},{"name":"iso_numeric","default_value":"nil","external_name":"iso_numeric","restriction":"::Int32 | ::Nil"},{"name":"code","external_name":"code","restriction":"::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"symbol","default_value":"nil","external_name":"symbol","restriction":"::Nil | ::String"},{"name":"disambiguate_symbol","default_value":"nil","external_name":"disambiguate_symbol","restriction":"::Nil | ::String"},{"name":"alternate_symbols","default_value":"nil","external_name":"alternate_symbols","restriction":"::Nil | ::Array(::String)"},{"name":"subunit","default_value":"nil","external_name":"subunit","restriction":"::Nil | ::String"},{"name":"subunit_to_unit","external_name":"subunit_to_unit","restriction":"::UInt64"},{"name":"symbol_first","default_value":"nil","external_name":"symbol_first","restriction":"::Bool | ::Nil"},{"name":"html_entity","default_value":"nil","external_name":"html_entity","restriction":"::Nil | ::String"},{"name":"decimal_mark","default_value":"nil","external_name":"decimal_mark","restriction":"::Nil | ::String"},{"name":"thousands_separator","default_value":"nil","external_name":"thousands_separator","restriction":"::Nil | ::String"},{"name":"smallest_denomination","default_value":"nil","external_name":"smallest_denomination","restriction":"::Int32 | ::Nil"}],"args_string":"(*, type : Money::Currency::Type | Nil = nil, priority : Int32 | Nil = nil, iso_numeric : Int32 | Nil = nil, code : String, name : Nil | String = nil, symbol : Nil | String = nil, disambiguate_symbol : Nil | String = nil, alternate_symbols : Nil | Array(String) = nil, subunit : Nil | String = nil, subunit_to_unit : UInt64, symbol_first : Bool | Nil = nil, html_entity : Nil | String = nil, decimal_mark : Nil | String = nil, thousands_separator : Nil | String = nil, smallest_denomination : Int32 | Nil = nil)","args_html":"(*, type : <a href=\"../Money/Currency/Type.html\">Money::Currency::Type</a> | Nil = <span class=\"n\">nil</span>, priority : Int32 | Nil = <span class=\"n\">nil</span>, iso_numeric : Int32 | Nil = <span class=\"n\">nil</span>, code : <a href=\"../String.html\">String</a>, name : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, symbol : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, disambiguate_symbol : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, alternate_symbols : Nil | Array(<a href=\"../String.html\">String</a>) = <span class=\"n\">nil</span>, subunit : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, subunit_to_unit : UInt64, symbol_first : Bool | Nil = <span class=\"n\">nil</span>, html_entity : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, decimal_mark : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, thousands_separator : Nil | <a href=\"../String.html\">String</a> = <span class=\"n\">nil</span>, smallest_denomination : Int32 | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency.cr","line_number":122,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L122"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"type","default_value":"nil","external_name":"type","restriction":"::Money::Currency::Type | ::Nil"},{"name":"priority","default_value":"nil","external_name":"priority","restriction":"::Int32 | ::Nil"},{"name":"iso_numeric","default_value":"nil","external_name":"iso_numeric","restriction":"::Int32 | ::Nil"},{"name":"code","external_name":"code","restriction":"::String"},{"name":"name","default_value":"nil","external_name":"name","restriction":"::Nil | ::String"},{"name":"symbol","default_value":"nil","external_name":"symbol","restriction":"::Nil | ::String"},{"name":"disambiguate_symbol","default_value":"nil","external_name":"disambiguate_symbol","restriction":"::Nil | ::String"},{"name":"alternate_symbols","default_value":"nil","external_name":"alternate_symbols","restriction":"::Nil | ::Array(::String)"},{"name":"subunit","default_value":"nil","external_name":"subunit","restriction":"::Nil | ::String"},{"name":"subunit_to_unit","external_name":"subunit_to_unit","restriction":"::UInt64"},{"name":"symbol_first","default_value":"nil","external_name":"symbol_first","restriction":"::Bool | ::Nil"},{"name":"html_entity","default_value":"nil","external_name":"html_entity","restriction":"::Nil | ::String"},{"name":"decimal_mark","default_value":"nil","external_name":"decimal_mark","restriction":"::Nil | ::String"},{"name":"thousands_separator","default_value":"nil","external_name":"thousands_separator","restriction":"::Nil | ::String"},{"name":"smallest_denomination","default_value":"nil","external_name":"smallest_denomination","restriction":"::Int32 | ::Nil"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(type: type, priority: priority, iso_numeric: iso_numeric, code: code, name: name, symbol: symbol, disambiguate_symbol: disambiguate_symbol, alternate_symbols: alternate_symbols, subunit: subunit, subunit_to_unit: subunit_to_unit, symbol_first: symbol_first, html_entity: html_entity, decimal_mark: decimal_mark, thousands_separator: thousands_separator, smallest_denomination: smallest_denomination)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"register(currency:Currency):Currency-class-method","name":"register","doc":"Registers a new currency.","summary":"<p>Registers a new currency.</p>","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency) : Currency","args_html":"(currency : <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency.cr","line_number":30,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L30"},"def":{"name":"register","args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"return_type":"Currency","visibility":"Public","body":"@@table_mutex.synchronize do\n  table[currency.id] = currency\nend"},"external_var":false},{"html_id":"wrap(value:String|Symbol|Currency):Currency-class-method","name":"wrap","doc":"Wraps the *value* in a `Currency` object.\n\n```\nc1 = Money::Currency.find(:usd)\nMoney::Currency.wrap?(c1)    # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(\"usd\") # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:usd)  # => #<Money::Currency @id=\"usd\">\nMoney::Currency.wrap?(:foo)  # => nil\n```","summary":"<p>Wraps the <em>value</em> in a <code><a href=\"../Money/Currency.html\">Currency</a></code> object.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | Symbol | Currency"}],"args_string":"(value : String | Symbol | Currency) : Currency","args_html":"(value : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency.cr","line_number":69,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L69"},"def":{"name":"wrap","args":[{"name":"value","external_name":"value","restriction":"String | Symbol | Currency"}],"return_type":"Currency","visibility":"Public","body":"(wrap?(value)) ||\n(raise(UnknownCurrencyError.new(value)))"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Currency):Int32-instance-method","name":"<=>","doc":"Compares `self` with *other* currency against the value of\n`priority` and `id` attributes.","summary":"<p>Compares <code>self</code> with <em>other</em> currency against the value of <code><a href=\"../Money/Currency.html#priority%3AInt32%7CNil-instance-method\">#priority</a></code> and <code><a href=\"../Money/Currency.html#id%3AString-instance-method\">#id</a></code> attributes.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Currency"}],"args_string":"(other : Currency) : Int32","args_html":"(other : <a href=\"../Money/Currency.html\">Currency</a>) : Int32","location":{"filename":"src/money/currency.cr","line_number":201,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L201"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Currency"}],"return_type":"Int32","visibility":"Public","body":"case {(priority = self.priority), (other_priority = other.priority)}\nin {Int32, Int32}\n  comparison = priority <=> other_priority\n  if comparison.zero?\n    comparison = id <=> other.id\n  end\n  comparison\nin {Int32, nil}\n  -1\nin {nil, Int32}\n  1\nin {nil, nil}\n  id <=> other.id\nend"},"external_var":false},{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if same?(other)\n  return true\nend\n\n\nif id == other.id\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"alternate_symbols:Array(String)|Nil-instance-method","name":"alternate_symbols","doc":"Alternate symbols.","summary":"<p>Alternate symbols.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":99,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L99"},"def":{"name":"alternate_symbols","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@alternate_symbols"},"external_var":false},{"html_id":"cents_based?:Bool-instance-method","name":"cents_based?","doc":"Returns `true` if a subunit is cents-based.\n\n````\nMoney::Currency.find(:usd).cents_based? # => true\n````","summary":"<p>Returns <code>true</code> if a subunit is cents-based.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":195,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L195"},"def":{"name":"cents_based?","return_type":"Bool","visibility":"Public","body":"subunit_to_unit == 100"},"external_var":false},{"html_id":"code:String-instance-method","name":"code","doc":"Currency code.","summary":"<p>Currency code.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":87,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L87"},"def":{"name":"code","return_type":"String","visibility":"Public","body":"@code"},"external_var":false},{"html_id":"crypto?:Bool-instance-method","name":"crypto?","doc":"Returns `true` if the currency `#type` is `crypto`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>crypto</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":161,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L161"},"def":{"name":"crypto?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.crypto?)"},"external_var":false},{"html_id":"decimal_mark:String|Nil-instance-method","name":"decimal_mark","doc":"Decimal mark.","summary":"<p>Decimal mark.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":114,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L114"},"def":{"name":"decimal_mark","return_type":"String | ::Nil","visibility":"Public","body":"@decimal_mark"},"external_var":false},{"html_id":"decimal_places:Int32-instance-method","name":"decimal_places","doc":"Alias of `#exponent`.","summary":"<p>Alias of <code><a href=\"../Money/Currency.html#exponent%3AInt32-instance-method\">#exponent</a></code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":179,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L179"},"def":{"name":"decimal_places","return_type":"Int32","visibility":"Public","body":"exponent"},"external_var":false},{"html_id":"disambiguate_symbol:String|Nil-instance-method","name":"disambiguate_symbol","doc":"Disambiguation symbol.","summary":"<p>Disambiguation symbol.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":96,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L96"},"def":{"name":"disambiguate_symbol","return_type":"String | ::Nil","visibility":"Public","body":"@disambiguate_symbol"},"external_var":false},{"html_id":"exponent:Int32-instance-method","name":"exponent","doc":"Returns the relation between subunit and unit as a base 10 exponent.\n\nNOTE: MGA and MRU are exceptions and are rounded to 1.\n\nSee [Active_codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).","summary":"<p>Returns the relation between subunit and unit as a base 10 exponent.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":173,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L173"},"def":{"name":"exponent","return_type":"Int32","visibility":"Public","body":"(Math.log10(subunit_to_unit)).round.to_i"},"external_var":false},{"html_id":"fiat?:Bool-instance-method","name":"fiat?","doc":"Returns `true` if the currency `#type` is `fiat`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>fiat</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":161,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L161"},"def":{"name":"fiat?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.fiat?)"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = id.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"html_entity:String|Nil-instance-method","name":"html_entity","doc":"HTML entity.","summary":"<p>HTML entity.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":111,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L111"},"def":{"name":"html_entity","return_type":"String | ::Nil","visibility":"Public","body":"@html_entity"},"external_var":false},{"html_id":"id:String-instance-method","name":"id","doc":"Currency ID (lower-cased `#code`).","summary":"<p>Currency ID (lower-cased <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code>).</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":75,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L75"},"def":{"name":"id","return_type":"String","visibility":"Public","body":"if (__temp_231 = @id).nil?\n  @id = (code.downcase)\nelse\n  __temp_231\nend"},"external_var":false},{"html_id":"iso?:Bool-instance-method","name":"iso?","doc":"Returns `true` if iso currency.\n\nSee also `#iso_numeric`.","summary":"<p>Returns <code>true</code> if iso currency.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":186,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L186"},"def":{"name":"iso?","return_type":"Bool","visibility":"Public","body":"!(!iso_numeric)"},"external_var":false},{"html_id":"iso_numeric:Int32|Nil-instance-method","name":"iso_numeric","doc":"ISO 4217 numeric code.","summary":"<p>ISO 4217 numeric code.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":84,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L84"},"def":{"name":"iso_numeric","return_type":"Int32 | ::Nil","visibility":"Public","body":"@iso_numeric"},"external_var":false},{"html_id":"metal?:Bool-instance-method","name":"metal?","doc":"Returns `true` if the currency `#type` is `metal`, otherwise `false`.","summary":"<p>Returns <code>true</code> if the currency <code><a href=\"../Money/Currency.html#type%3AType%7CNil-instance-method\">#type</a></code> is <code>metal</code>, otherwise <code>false</code>.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":161,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L161"},"def":{"name":"metal?","return_type":"Bool","visibility":"Public","body":"!!type.try(&.metal?)"},"external_var":false},{"html_id":"name:String|Nil-instance-method","name":"name","doc":"Currency name.","summary":"<p>Currency name.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":90,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L90"},"def":{"name":"name","return_type":"String | ::Nil","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"priority:Int32|Nil-instance-method","name":"priority","doc":"Currency priority (used for sorting).","summary":"<p>Currency priority (used for sorting).</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":81,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L81"},"def":{"name":"priority","return_type":"Int32 | ::Nil","visibility":"Public","body":"@priority"},"external_var":false},{"html_id":"smallest_denomination:Int32|Nil-instance-method","name":"smallest_denomination","doc":"Smallest denomination.","summary":"<p>Smallest denomination.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":120,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L120"},"def":{"name":"smallest_denomination","return_type":"Int32 | ::Nil","visibility":"Public","body":"@smallest_denomination"},"external_var":false},{"html_id":"subunit:String|Nil-instance-method","name":"subunit","doc":"Currency subunit.","summary":"<p>Currency subunit.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":102,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L102"},"def":{"name":"subunit","return_type":"String | ::Nil","visibility":"Public","body":"@subunit"},"external_var":false},{"html_id":"subunit_to_unit:UInt64-instance-method","name":"subunit_to_unit","doc":"Subunit to unit value.","summary":"<p>Subunit to unit value.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":105,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L105"},"def":{"name":"subunit_to_unit","return_type":"UInt64","visibility":"Public","body":"@subunit_to_unit"},"external_var":false},{"html_id":"symbol:String|Nil-instance-method","name":"symbol","doc":"Currency symbol.","summary":"<p>Currency symbol.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":93,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L93"},"def":{"name":"symbol","return_type":"String | ::Nil","visibility":"Public","body":"@symbol"},"external_var":false},{"html_id":"symbol_first?:Bool|Nil-instance-method","name":"symbol_first?","doc":"Should the symbol be placed before the amount?","summary":"<p>Should the symbol be placed before the amount?</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":108,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L108"},"def":{"name":"symbol_first?","return_type":"Bool | ::Nil","visibility":"Public","body":"@symbol_first"},"external_var":false},{"html_id":"thousands_separator:String|Nil-instance-method","name":"thousands_separator","doc":"Thousands separator.","summary":"<p>Thousands separator.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":117,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L117"},"def":{"name":"thousands_separator","return_type":"String | ::Nil","visibility":"Public","body":"@thousands_separator"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a string representation corresponding to the `#code` property\nto the given *io*.\n\n```\nMoney::Currency.find(:usd).to_s # => \"USD\"\nMoney::Currency.find(:eur).to_s # => \"EUR\"\n```","summary":"<p>Appends a string representation corresponding to the <code><a href=\"../Money/Currency.html#code%3AString-instance-method\">#code</a></code> property to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/currency.cr","line_number":221,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L221"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << code"},"external_var":false},{"html_id":"type:Type|Nil-instance-method","name":"type","doc":"Currency type.","summary":"<p>Currency type.</p>","abstract":false,"location":{"filename":"src/money/currency.cr","line_number":78,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency.cr#L78"},"def":{"name":"type","return_type":"Type | ::Nil","visibility":"Public","body":"@type"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/Enumeration","path":"Money/Currency/Enumeration.html","kind":"module","full_name":"Money::Currency::Enumeration","name":"Enumeration","abstract":false,"ancestors":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/money/currency/enumeration.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"instance_methods":[{"html_id":"[](key:String|Symbol):Currency-instance-method","name":"[]","doc":"Alias of `#find`.","summary":"<p>Alias of <code><a href=\"../../Money/Currency/Enumeration.html#find%28key%3AString%7CSymbol%29%3ACurrency-instance-method\">#find</a></code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/enumeration.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L38"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency","visibility":"Public","body":"find(key)"},"external_var":false},{"html_id":"[]?(key:String|Symbol):Currency|Nil-instance-method","name":"[]?","doc":"Alias of `#find?`.","summary":"<p>Alias of <code><a href=\"../../Money/Currency/Enumeration.html#find%3F%28key%3AString%7CSymbol%29%3ACurrency%7CNil-instance-method\">#find?</a></code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency | Nil","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency/enumeration.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L20"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"find?(key)"},"external_var":false},{"html_id":"all:Array(Currency)-instance-method","name":"all","doc":"Returns a sorted list of all registered currencies.","summary":"<p>Returns a sorted list of all registered currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/enumeration.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L43"},"def":{"name":"all","return_type":"Array(Currency)","visibility":"Public","body":"@@table_mutex.synchronize do\n  table.values.sort!\nend"},"external_var":false},{"html_id":"each(&:Currency->_):Nil-instance-method","name":"each","doc":"Iterates over all registered currencies.","summary":"<p>Iterates over all registered currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/enumeration.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L50"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Currency -> _)"},"return_type":"Nil","visibility":"Public","body":"all.each do |currency|\n  yield currency\nend"},"external_var":false},{"html_id":"find(key:String|Symbol):Currency-instance-method","name":"find","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, raises `UnknownCurrencyError` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => raises UnknownCurrencyError\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, raises <code><a href=\"../../Money/UnknownCurrencyError.html\">UnknownCurrencyError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a>","location":{"filename":"src/money/currency/enumeration.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L31"},"def":{"name":"find","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency","visibility":"Public","body":"(find?(key)) ||\n(raise(UnknownCurrencyError.new(key)))"},"external_var":false},{"html_id":"find?(key:String|Symbol):Currency|Nil-instance-method","name":"find?","doc":"Lookup a currency with given *key* an returns a `Currency` instance on\nsuccess, `nil` otherwise.\n\n```\nMoney::Currency.find(\"EUR\") # => #<Money::Currency @id=\"eur\">\nMoney::Currency.find(\"FOO\") # => nil\n```","summary":"<p>Lookup a currency with given <em>key</em> an returns a <code><a href=\"../../Money/Currency.html\">Currency</a></code> instance on success, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Currency | Nil","args_html":"(key : <a href=\"../../String.html\">String</a> | Symbol) : <a href=\"../../Money/Currency.html\">Currency</a> | Nil","location":{"filename":"src/money/currency/enumeration.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/enumeration.cr#L12"},"def":{"name":"find?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Currency | ::Nil","visibility":"Public","body":"@@table_mutex.synchronize do\n  table[key.to_s.downcase]?\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/Exchange","path":"Money/Currency/Exchange.html","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/Currency/Exchange/SingleCurrency","kind":"class","full_name":"Money::Currency::Exchange::SingleCurrency","name":"SingleCurrency"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"constructors":[{"html_id":"new(rate_store:Money::Currency::RateStore|Nil=nil,rate_provider:Money::Currency::RateProvider|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"rate_store","default_value":"nil","external_name":"rate_store","restriction":"::Money::Currency::RateStore | ::Nil"},{"name":"rate_provider","default_value":"nil","external_name":"rate_provider","restriction":"::Money::Currency::RateProvider | ::Nil"}],"args_string":"(rate_store : Money::Currency::RateStore | Nil = nil, rate_provider : Money::Currency::RateProvider | Nil = nil)","args_html":"(rate_store : <a href=\"../../Money/Currency/RateStore.html\">Money::Currency::RateStore</a> | Nil = <span class=\"n\">nil</span>, rate_provider : <a href=\"../../Money/Currency/RateProvider.html\">Money::Currency::RateProvider</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/exchange.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L27"},"def":{"name":"new","args":[{"name":"rate_store","default_value":"nil","external_name":"rate_store","restriction":"::Money::Currency::RateStore | ::Nil"},{"name":"rate_provider","default_value":"nil","external_name":"rate_provider","restriction":"::Money::Currency::RateProvider | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(rate_store, rate_provider)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currencies:Array(Currency)-instance-method","name":"base_currencies","doc":"Returns an array of supported (registered) base currencies.","summary":"<p>Returns an array of supported (registered) base currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L31"},"def":{"name":"base_currencies","return_type":"Array(Currency)","visibility":"Public","body":"currency_codes = @mutex.synchronize do rate_provider.base_currency_codes end\ncurrency_codes.compact_map do |code|\n  Currency.find?(code)\nend\n"},"external_var":false},{"html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":"Exchanges the given `Money` object to a new `Money` object in\n*to* `Currency`.","summary":"<p>Exchanges the given <code><a href=\"../../Money.html\">Money</a></code> object to a new <code><a href=\"../../Money.html\">Money</a></code> object in <em>to</em> <code><a href=\"../../Money/Currency.html\">Currency</a></code>.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","args_html":"(from : <a href=\"../../Money.html\">Money</a>, to : <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money.html\">Money</a>","location":{"filename":"src/money/currency/exchange.cr","line_number":48,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L48"},"def":{"name":"exchange","args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"return_type":"Money","visibility":"Public","body":"amount = from.amount * (exchange_rate(from.currency, to))\n\nMoney.new(amount: amount, currency: to, exchange: self)\n"},"external_var":false},{"html_id":"exchange_rate(base:Currency,target:Currency):BigDecimal-instance-method","name":"exchange_rate","doc":"Returns the exchange rate between *base* and *target* currency,\nor raises `UnknownRateError` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or raises <code><a href=\"../../Money/UnknownRateError.html\">UnknownRateError</a></code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : BigDecimal","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal","location":{"filename":"src/money/currency/exchange.cr","line_number":68,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L68"},"def":{"name":"exchange_rate","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"BigDecimal","visibility":"Public","body":"(exchange_rate?(base, target)) ||\n(raise(UnknownRateError.new(base, target)))"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):BigDecimal|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency,\nor `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : BigDecimal | Nil","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal | Nil","location":{"filename":"src/money/currency/exchange.cr","line_number":57,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L57"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"BigDecimal | ::Nil","visibility":"Public","body":"if base == target\n  return 1.to_big_d\nend\n\n@mutex.synchronize do\n  rate_store[base, target]? ||\n  (update_rate(base, target))\nend\n"},"external_var":false},{"html_id":"rate_provider:RateProvider-instance-method","name":"rate_provider","doc":"An exchange `RateProvider` object, used to fetch exchange rate pairs.\n\nNOTE: Will return `Money.default_rate_provider` if set to `nil` (the default).","summary":"<p>An exchange <code><a href=\"../../Money/Currency/RateProvider.html\">RateProvider</a></code> object, used to fetch exchange rate pairs.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L19"},"def":{"name":"rate_provider","return_type":"RateProvider","visibility":"Public","body":"@rate_provider || Money.default_rate_provider"},"external_var":false},{"html_id":"rate_provider=(rate_provider:RateProvider|Nil)-instance-method","name":"rate_provider=","doc":"An exchange `RateProvider` object, used to fetch exchange rate pairs.\n\nNOTE: Will return `Money.default_rate_provider` if set to `nil` (the default).","summary":"<p>An exchange <code><a href=\"../../Money/Currency/RateProvider.html\">RateProvider</a></code> object, used to fetch exchange rate pairs.</p>","abstract":false,"args":[{"name":"rate_provider","external_name":"rate_provider","restriction":"RateProvider | ::Nil"}],"args_string":"(rate_provider : RateProvider | Nil)","args_html":"(rate_provider : <a href=\"../../Money/Currency/RateProvider.html\">RateProvider</a> | Nil)","location":{"filename":"src/money/currency/exchange.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L16"},"def":{"name":"rate_provider=","args":[{"name":"rate_provider","external_name":"rate_provider","restriction":"RateProvider | ::Nil"}],"visibility":"Public","body":"@rate_provider = rate_provider"},"external_var":false},{"html_id":"rate_store:RateStore-instance-method","name":"rate_store","doc":"An exchange `RateStore` object, used to persist exchange rate pairs.\n\nNOTE: Will return `Money.default_rate_store` if set to `nil` (the default).","summary":"<p>An exchange <code><a href=\"../../Money/Currency/RateStore.html\">RateStore</a></code> object, used to persist exchange rate pairs.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L9"},"def":{"name":"rate_store","return_type":"RateStore","visibility":"Public","body":"@rate_store || Money.default_rate_store"},"external_var":false},{"html_id":"rate_store=(rate_store:RateStore|Nil)-instance-method","name":"rate_store=","doc":"An exchange `RateStore` object, used to persist exchange rate pairs.\n\nNOTE: Will return `Money.default_rate_store` if set to `nil` (the default).","summary":"<p>An exchange <code><a href=\"../../Money/Currency/RateStore.html\">RateStore</a></code> object, used to persist exchange rate pairs.</p>","abstract":false,"args":[{"name":"rate_store","external_name":"rate_store","restriction":"RateStore | ::Nil"}],"args_string":"(rate_store : RateStore | Nil)","args_html":"(rate_store : <a href=\"../../Money/Currency/RateStore.html\">RateStore</a> | Nil)","location":{"filename":"src/money/currency/exchange.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L6"},"def":{"name":"rate_store=","args":[{"name":"rate_store","external_name":"rate_store","restriction":"RateStore | ::Nil"}],"visibility":"Public","body":"@rate_store = rate_store"},"external_var":false},{"html_id":"target_currencies:Array(Currency)-instance-method","name":"target_currencies","doc":"Returns an array of supported (registered) target currencies.","summary":"<p>Returns an array of supported (registered) target currencies.</p>","abstract":false,"location":{"filename":"src/money/currency/exchange.cr","line_number":39,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange.cr#L39"},"def":{"name":"target_currencies","return_type":"Array(Currency)","visibility":"Public","body":"currency_codes = @mutex.synchronize do rate_provider.target_currency_codes end\ncurrency_codes.compact_map do |code|\n  Currency.find?(code)\nend\n"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/Exchange/SingleCurrency","path":"Money/Currency/Exchange/SingleCurrency.html","kind":"class","full_name":"Money::Currency::Exchange::SingleCurrency","name":"SingleCurrency","abstract":false,"superclass":{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},"ancestors":[{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/exchange/single_currency.cr","line_number":9,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange/single_currency.cr#L9"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/Exchange","kind":"class","full_name":"Money::Currency::Exchange","name":"Exchange"},"doc":"Class to ensure client code is operating in a single currency\nby raising if an exchange attempts to happen.\n\nThis is useful when an application uses multiple currencies but\nit usually deals with only one currency at a time so any arithmetic\nwhere exchanges happen are erroneous. Using this as the default exchange\nmeans that that these mistakes don't silently do the wrong thing.","summary":"<p>Class to ensure client code is operating in a single currency by raising if an exchange attempts to happen.</p>","instance_methods":[{"html_id":"exchange(from:Money,to:Currency):Money-instance-method","name":"exchange","doc":"Raises a `DifferentCurrencyError` to remove possibility of accidentally\nexchanging currencies.","summary":"<p>Raises a <code><a href=\"../../../Money/DifferentCurrencyError.html\">DifferentCurrencyError</a></code> to remove possibility of accidentally exchanging currencies.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"args_string":"(from : Money, to : Currency) : Money","args_html":"(from : <a href=\"../../../Money.html\">Money</a>, to : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money.html\">Money</a>","location":{"filename":"src/money/currency/exchange/single_currency.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/exchange/single_currency.cr#L12"},"def":{"name":"exchange","args":[{"name":"from","external_name":"from","restriction":"Money"},{"name":"to","external_name":"to","restriction":"Currency"}],"return_type":"Money","visibility":"Public","body":"raise(DifferentCurrencyError.new(from.currency, to))"},"external_var":false}]}]},{"html_id":"money/Money/Currency/Loader","path":"Money/Currency/Loader.html","kind":"module","full_name":"Money::Currency::Loader","name":"Loader","abstract":false,"locations":[{"filename":"src/money/currency/loader.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/loader.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"instance_methods":[{"html_id":"load_currencies-instance-method","name":"load_currencies","doc":"Loads and returns the currencies stored in JSON files\ninside of `data/currencies` directory.","summary":"<p>Loads and returns the currencies stored in JSON files inside of <code>data/currencies</code> directory.</p>","abstract":false,"location":{"filename":"src/money/currency/loader.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/loader.cr#L7"},"def":{"name":"load_currencies","visibility":"Public","body":"currency_table = {} of String => Currency\nif_defined?(:JSON) do\n  Dir.each_child(DATA_PATH) do |filename|\n    if currency = parse_currency_file(filename)\n      currency_table[currency.id] = currency\n    end\n  end\nend\ncurrency_table\n"},"external_var":false}]},{"html_id":"money/Money/Currency/Rate","path":"Money/Currency/Rate.html","kind":"struct","full_name":"Money::Currency::Rate","name":"Rate","abstract":false,"superclass":{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/json.cr","line_number":28,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L28"},{"filename":"src/money/currency/rate.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"constructors":[{"html_id":"new(base:Money::Currency,target:Money::Currency,value:BigDecimal,updated_at:Time=Time.utc)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"::Money::Currency"},{"name":"target","external_name":"target","restriction":"::Money::Currency"},{"name":"value","external_name":"value","restriction":"::BigDecimal"},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":"::Time"}],"args_string":"(base : Money::Currency, target : Money::Currency, value : BigDecimal, updated_at : Time = Time.utc)","args_html":"(base : <a href=\"../../Money/Currency.html\">Money::Currency</a>, target : <a href=\"../../Money/Currency.html\">Money::Currency</a>, value : BigDecimal, updated_at : Time = <span class=\"t\">Time</span>.utc)","location":{"filename":"src/money/currency/rate.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L10"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":"::Money::Currency"},{"name":"target","external_name":"target","restriction":"::Money::Currency"},{"name":"value","external_name":"value","restriction":"::BigDecimal"},{"name":"updated_at","default_value":"Time.utc","external_name":"updated_at","restriction":"::Time"}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target, value, updated_at)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/json.cr","line_number":29,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L29"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false}],"instance_methods":[{"html_id":"<=>(other:Rate):Int32-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greater than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Rate"}],"args_string":"(other : Rate) : Int32","args_html":"(other : <a href=\"../../Money/Currency/Rate.html\">Rate</a>) : Int32","location":{"filename":"src/money/currency/rate.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L16"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Rate"}],"return_type":"Int32","visibility":"Public","body":"{base, target, other.updated_at, other.value} <=> {other.base, other.target, updated_at, value}"},"external_var":false},{"html_id":"base:Currency-instance-method","name":"base","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L5"},"def":{"name":"base","return_type":"Currency","visibility":"Public","body":"@base"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/money/currency/rate.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L14"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = base.hash(hasher)\n\nhasher = target.hash(hasher)\n\nhasher = value.hash(hasher)\n\nhasher = updated_at.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"target:Currency-instance-method","name":"target","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L6"},"def":{"name":"target","return_type":"Currency","visibility":"Public","body":"@target"},"external_var":false},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/money/currency/json.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L31"},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"{\n  base: base.to_s,\n  target: target.to_s,\n  value: value,\n  updated_at: updated_at,\n}.to_json(json)"},"external_var":false},{"html_id":"to_s(io:IO,*,include_updated_at=false):Nil-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"args_string":"(io : IO, *, include_updated_at = false) : Nil","args_html":"(io : IO, *, include_updated_at = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/money/currency/rate.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L27"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"splat_index":1,"return_type":"Nil","visibility":"Public","body":"((((io << base) << \" -> \") << target) << \": \") << value\nif include_updated_at\n  ((io << \" (\") << updated_at) << ')'\nend\n"},"external_var":false},{"html_id":"to_s(*,include_updated_at=false):String-instance-method","name":"to_s","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"args_string":"(*, include_updated_at = false) : String","args_html":"(*, include_updated_at = <span class=\"n\">false</span>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/money/currency/rate.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L21"},"def":{"name":"to_s","args":[{"name":"","external_name":"","restriction":""},{"name":"include_updated_at","default_value":"false","external_name":"include_updated_at","restriction":""}],"splat_index":0,"return_type":"String","visibility":"Public","body":"String.build do |io|\n  to_s(io, include_updated_at: include_updated_at)\nend"},"external_var":false},{"html_id":"updated_at:Time-instance-method","name":"updated_at","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L8"},"def":{"name":"updated_at","return_type":"Time","visibility":"Public","body":"@updated_at"},"external_var":false},{"html_id":"value:BigDecimal-instance-method","name":"value","abstract":false,"location":{"filename":"src/money/currency/rate.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate.cr#L7"},"def":{"name":"value","return_type":"BigDecimal","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider","path":"Money/Currency/RateProvider.html","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider","abstract":true,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"subclasses":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI"},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer"},{"html_id":"money/Money/Currency/RateProvider/Compound","kind":"class","full_name":"Money::Currency::RateProvider::Compound","name":"Compound"},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon"},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer"},{"html_id":"money/Money/Currency/RateProvider/ECB","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB"},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI"},{"html_id":"money/Money/Currency/RateProvider/Fixer","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer"},{"html_id":"money/Money/Currency/RateProvider/FloatRates","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates"},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/FXFeed","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed"},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI"},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI"},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph"},{"html_id":"money/Money/Currency/RateProvider/Null","kind":"class","full_name":"Money::Currency::RateProvider::Null","name":"Null"},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates"},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"class_methods":[{"html_id":"find(name:String):RateProvider.class-class-method","name":"find","doc":"Returns the rate provider class for the given *name* if found,\nraises `UnknownRateProviderError` otherwise.","summary":"<p>Returns the rate provider class for the given <em>name</em> if found, raises <code><a href=\"../../Money/UnknownRateProviderError.html\">UnknownRateProviderError</a></code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : RateProvider.class","args_html":"(name : <a href=\"../../String.html\">String</a>) : <span class=\"t\">RateProvider</span>.<span class=\"k\">class</span>","location":{"filename":"src/money/currency/rate_provider.cr","line_number":61,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L61"},"def":{"name":"find","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"RateProvider.class","visibility":"Public","body":"(find?(name)) ||\n(raise(UnknownRateProviderError.new(name)))"},"external_var":false},{"html_id":"find?(name:String):RateProvider.class|Nil-class-method","name":"find?","doc":"Returns the rate provider class for the given *name* if found,\n`nil` otherwise.","summary":"<p>Returns the rate provider class for the given <em>name</em> if found, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : RateProvider.class | Nil","args_html":"(name : <a href=\"../../String.html\">String</a>) : <span class=\"t\">RateProvider</span>.<span class=\"k\">class</span> | Nil","location":{"filename":"src/money/currency/rate_provider.cr","line_number":55,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L55"},"def":{"name":"find?","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"RateProvider.class | Nil","visibility":"Public","body":"providers[name.underscore]?"},"external_var":false},{"html_id":"providers-class-method","name":"providers","doc":"All registered rate providers.","summary":"<p>All registered rate providers.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L11"},"def":{"name":"providers","visibility":"Public","body":"@@providers"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":true,"location":{"filename":"src/money/currency/rate_provider.cr","line_number":75,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L75"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":""},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":true,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : <a href=\"../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider.cr","line_number":83,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L83"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"supports_currency_pair?(base:Currency,target:Currency):Bool-instance-method","name":"supports_currency_pair?","doc":"Returns `true` if the provider supports the given currency pair.","summary":"<p>Returns <code>true</code> if the provider supports the given currency pair.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Bool","args_html":"(base : <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../Money/Currency.html\">Currency</a>) : Bool","location":{"filename":"src/money/currency/rate_provider.cr","line_number":86,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L86"},"def":{"name":"supports_currency_pair?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Bool","visibility":"Public","body":"(base_currency_codes.includes?(base.code)) &&\n(target_currency_codes.includes?(target.code))"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider.cr","line_number":78,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider.cr#L78"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"base_currency_codes"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","path":"Money/Currency/RateProvider/AbstractAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Abstract API](https://www.abstractapi.com/api/exchange-rate-api) currency rate provider.","summary":"<p><a href=\"https://www.abstractapi.com/api/exchange-rate-api\">Abstract API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"abstract_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Abstract API](https://www.abstractapi.com/api/exchange-rate-api) currency rate provider.","summary":"<p><a href=\"https://www.abstractapi.com/api/exchange-rate-api\">Abstract API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_183 = @api_key).nil?\n  @api_key = (option_from_env(\"ABSTRACT_API_KEY\"))\nelse\n  __temp_183\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://docs.abstractapi.com/exchange-rates/live>","summary":"<p><a href=\"https://docs.abstractapi.com/exchange-rates/live\">https://docs.abstractapi.com/exchange-rates/live</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_185 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n      base: \"USD\",\n    }\n    request(\"/v1/live/\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"exchange_rates\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_185\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://docs.abstractapi.com/exchange-rates/live>","summary":"<p><a href=\"https://docs.abstractapi.com/exchange-rates/live\">https://docs.abstractapi.com/exchange-rates/live</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L38"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  target: target.code,\n}\nrequest(\"/v1/live/\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"exchange_rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_184 = @host).nil?\n  @host = (URI.parse(\"https://exchange-rates.abstractapi.com\"))\nelse\n  __temp_184\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/abstract_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/abstract_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","path":"Money/Currency/RateProvider/Coinlayer.html","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Coinlayer](https://coinlayer.com/) currency rate provider.","summary":"<p><a href=\"https://coinlayer.com/\">Coinlayer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"coinlayer\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Coinlayer](https://coinlayer.com/) currency rate provider.","summary":"<p><a href=\"https://coinlayer.com/\">Coinlayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_186 = @access_key).nil?\n  @access_key = (option_from_env(\"COINLAYER_ACCESS_KEY\"))\nelse\n  __temp_186\nend"},"external_var":false},{"html_id":"access_key=(access_key:String)-instance-method","name":"access_key=","abstract":false,"args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"args_string":"(access_key : String)","args_html":"(access_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L10"},"def":{"name":"access_key=","args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"visibility":"Public","body":"@access_key = access_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":20,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L20"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes[0]"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://coinlayer.com/documentation#live>","summary":"<p><a href=\"https://coinlayer.com/documentation#live\">https://coinlayer.com/documentation#live</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":52,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L52"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  target: target.code,\n  symbols: base.code,\n}\nrequest(\"/live\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(RateProviderError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n  end\n\n  rate = (result.dig(\"rates\", base.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_187 = @host).nil?\n  @host = (URI.parse(\"https://api.coinlayer.com\"))\nelse\n  __temp_187\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/coinlayer.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/coinlayer.cr#L24"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"currency_codes[0] + currency_codes[1]"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Compound","path":"Money/Currency/RateProvider/Compound.html","kind":"class","full_name":"Money::Currency::RateProvider::Compound","name":"Compound","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider composed of multiple other rate providers.","summary":"<p>Currency rate provider composed of multiple other rate providers.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"compound\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider composed of multiple other rate providers.","summary":"<p>Currency rate provider composed of multiple other rate providers.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(providers:Array(Money::Currency::RateProvider)=[]ofRateProvider)-class-method","name":"new","abstract":false,"args":[{"name":"providers","default_value":"[] of RateProvider","external_name":"providers","restriction":"::Array(::Money::Currency::RateProvider)"}],"args_string":"(providers : Array(Money::Currency::RateProvider) = [] of RateProvider)","args_html":"(providers : Array(<a href=\"../../../Money/Currency/RateProvider.html\">Money::Currency::RateProvider</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">RateProvider</span>)","location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L16"},"def":{"name":"new","args":[{"name":"providers","default_value":"[] of RateProvider","external_name":"providers","restriction":"::Array(::Money::Currency::RateProvider)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(providers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L19"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"providers.flat_map(&.base_currency_codes).uniq!"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L27"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"errors = [] of Exception\n\nrate = providers.find_value do |provider|\n  begin\n    if provider.supports_currency_pair?(base, target)\n      provider.exchange_rate?(base, target)\n    end\n  rescue ex\n    Log.debug(exception: ex) do\n      \"Fetching rate for #{base} -> #{target} failed (#{provider.class})\"\n    end\n    errors << ex\n    nil\n  end\nend\nif rate\n  return rate\nend\n\nif errors.present?\n  raise(AggregateError.new(\"Failed to fetch rate for #{base} -> #{target}\", errors))\nend\n"},"external_var":false},{"html_id":"providers:Array(RateProvider)-instance-method","name":"providers","abstract":false,"location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L14"},"def":{"name":"providers","return_type":"Array(RateProvider)","visibility":"Public","body":"@providers"},"external_var":false},{"html_id":"providers=(providers:Array(RateProvider))-instance-method","name":"providers=","abstract":false,"args":[{"name":"providers","external_name":"providers","restriction":"Array(RateProvider)"}],"args_string":"(providers : Array(RateProvider))","args_html":"(providers : Array(<a href=\"../../../Money/Currency/RateProvider.html\">RateProvider</a>))","location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L14"},"def":{"name":"providers=","args":[{"name":"providers","external_name":"providers","restriction":"Array(RateProvider)"}],"visibility":"Public","body":"@providers = providers"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/compound.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/compound.cr#L23"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"providers.flat_map(&.target_currency_codes).uniq!"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Converter","path":"Money/Currency/RateProvider/Converter.html","kind":"module","full_name":"Money::Currency::RateProvider::Converter","name":"Converter","abstract":false,"locations":[{"filename":"src/money/currency/json.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L41"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"class_methods":[{"html_id":"from_json(pull:JSON::PullParser):RateProvider-class-method","name":"from_json","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser) : RateProvider","args_html":"(pull : JSON::PullParser) : <a href=\"../../../Money/Currency/RateProvider.html\">RateProvider</a>","location":{"filename":"src/money/currency/json.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L49"},"def":{"name":"from_json","args":[{"name":"pull","external_name":"pull","restriction":"JSON::PullParser"}],"return_type":"RateProvider","visibility":"Public","body":"wrapper = JSONWrapper.new(pull)\n\nklass = RateProvider.find(wrapper.name)\n\nif options = wrapper.options\n  klass.from_json(options.to_json)\nelse\n  klass.from_json(\"{}\")\nend\n"},"external_var":false},{"html_id":"to_json(provider:RateProvider,json:JSON::Builder)-class-method","name":"to_json","abstract":false,"args":[{"name":"provider","external_name":"provider","restriction":"RateProvider"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(provider : RateProvider, json : JSON::Builder)","args_html":"(provider : <a href=\"../../../Money/Currency/RateProvider.html\">RateProvider</a>, json : JSON::Builder)","location":{"filename":"src/money/currency/json.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/json.cr#L62"},"def":{"name":"to_json","args":[{"name":"provider","external_name":"provider","restriction":"RateProvider"},{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"{\n  name: provider.class.key,\n  options: provider,\n}.to_json(json)"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","path":"Money/Currency/RateProvider/CurrencyAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Currency API](https://currencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://currencyapi.com/\">Currency API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Currency API](https://currencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://currencyapi.com/\">Currency API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_189 = @api_key).nil?\n  @api_key = (option_from_env(\"CURRENCY_API_KEY\"))\nelse\n  __temp_189\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencyapi.com/docs/currencies>","summary":"<p><a href=\"https://currencyapi.com/docs/currencies\">https://currencyapi.com/docs/currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_191 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      apikey: api_key,\n    }\n    request(\"/v3/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"data\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_191\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencyapi.com/docs/latest>","summary":"<p><a href=\"https://currencyapi.com/docs/latest\">https://currencyapi.com/docs/latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  apikey: api_key,\n  base_currency: base.code,\n  currencies: target.code,\n}\nrequest(\"/v3/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", target.code, \"value\")).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_190 = @host).nil?\n  @host = (URI.parse(\"https://api.currencyapi.com\"))\nelse\n  __temp_190\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/currency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","path":"Money/Currency/RateProvider/CurrencyBeacon.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CurrencyBeacon](https://currencybeacon.com/) currency rate provider.","summary":"<p><a href=\"https://currencybeacon.com/\">CurrencyBeacon</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_beacon\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CurrencyBeacon](https://currencybeacon.com/) currency rate provider.","summary":"<p><a href=\"https://currencybeacon.com/\">CurrencyBeacon</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_192 = @api_key).nil?\n  @api_key = (option_from_env(\"CURRENCY_BEACON_API_KEY\"))\nelse\n  __temp_192\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencybeacon.com/api-documentation>","summary":"<p><a href=\"https://currencybeacon.com/api-documentation\">https://currencybeacon.com/api-documentation</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_194 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"response\"].as_a.map() do |__arg0| __arg0.as_h[\"short_code\"].as_s end\n\n      currencies\n    end\n  end)\nelse\n  __temp_194\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencybeacon.com/api-documentation>","summary":"<p><a href=\"https://currencybeacon.com/api-documentation\">https://currencybeacon.com/api-documentation</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if rate = result.dig?(\"response\", \"rates\", target.code)\n    Rate.new(base, target, rate.to_s.to_big_d)\n  end\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_193 = @host).nil?\n  @host = (URI.parse(\"https://api.currencybeacon.com\"))\nelse\n  __temp_193\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/currency_beacon.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_beacon.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","path":"Money/Currency/RateProvider/CurrencyLayer.html","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[CurrencyLayer](https://currencylayer.com/) currency rate provider.","summary":"<p><a href=\"https://currencylayer.com/\">CurrencyLayer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"currency_layer\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[CurrencyLayer](https://currencylayer.com/) currency rate provider.","summary":"<p><a href=\"https://currencylayer.com/\">CurrencyLayer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_195 = @access_key).nil?\n  @access_key = (option_from_env(\"CURRENCY_LAYER_ACCESS_KEY\"))\nelse\n  __temp_195\nend"},"external_var":false},{"html_id":"access_key=(access_key:String)-instance-method","name":"access_key=","abstract":false,"args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"args_string":"(access_key : String)","args_html":"(access_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L10"},"def":{"name":"access_key=","args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"visibility":"Public","body":"@access_key = access_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://currencylayer.com/documentation#supported_currencies>","summary":"<p><a href=\"https://currencylayer.com/documentation#supported_currencies\">https://currencylayer.com/documentation#supported_currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_197 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      access_key: access_key,\n    }\n    request(\"/list\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(RateProviderError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n      end\n\n      currencies = result[\"currencies\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_197\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://currencylayer.com/documentation#real_time_rates>","summary":"<p><a href=\"https://currencylayer.com/documentation#real_time_rates\">https://currencylayer.com/documentation#real_time_rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  source: base.code,\n  currencies: target.code,\n}\nrequest(\"/live\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(RateProviderError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"info\")))\n  end\n\n  rate = (result.dig(\"quotes\", \"%s%s\" % {base.code, target.code})).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_196 = @host).nil?\n  @host = (URI.parse(\"https://api.currencylayer.com\"))\nelse\n  __temp_196\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/currency_layer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/currency_layer.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/ECB","path":"Money/Currency/RateProvider/ECB.html","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L7"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider using data sourced from a daily feed of\n[European Central Bank](https://www.ecb.europa.eu).","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.ecb.europa.eu\">European Central Bank</a>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L7"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"ecb\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider using data sourced from a daily feed of\n[European Central Bank](https://www.ecb.europa.eu).","summary":"<p>Currency rate provider using data sourced from a daily feed of <a href=\"https://www.ecb.europa.eu\">European Central Bank</a>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L18"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_200 = @base_currency_codes).nil?\n  @base_currency_codes = ([BASE_CURRENCY_CODE])\nelse\n  __temp_200\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":29,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L29"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"exchange_rates.find do |rate| (rate.base == base) && (rate.target == target) end"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L14"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_199 = @host).nil?\n  @host = (URI.parse(\"https://www.ecb.europa.eu\"))\nelse\n  __temp_199\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L14"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false},{"html_id":"target_currency_codes:Array(String)-instance-method","name":"target_currency_codes","doc":"Returns an array of supported target currency codes.","summary":"<p>Returns an array of supported target currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/ecb.cr","line_number":25,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/ecb.cr#L25"},"def":{"name":"target_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_201 = @target_currency_codes).nil?\n  @target_currency_codes = (exchange_rates.map() do |__arg0| __arg0.target.code end)\nelse\n  __temp_201\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","path":"Money/Currency/RateProvider/ExchangeRateAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Exchange Rate API](https://www.exchangerate-api.com/) currency rate provider.","summary":"<p><a href=\"https://www.exchangerate-api.com/\">Exchange Rate API</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"exchange_rate_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Exchange Rate API](https://www.exchangerate-api.com/) currency rate provider.","summary":"<p><a href=\"https://www.exchangerate-api.com/\">Exchange Rate API</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_202 = @api_key).nil?\n  @api_key = (option_from_env(\"EXCHANGE_RATE_API_KEY\"))\nelse\n  __temp_202\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://www.exchangerate-api.com/docs/supported-codes-endpoint>","summary":"<p><a href=\"https://www.exchangerate-api.com/docs/supported-codes-endpoint\">https://www.exchangerate-api.com/docs/supported-codes-endpoint</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_204 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    path = \"/v6/%s/codes\" % (URI.encode_path_segment(api_key))\n\n    request(path) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"result\"].as_s == \"success\"\n      else\n        raise(RateProviderError.new(result[\"error-type\"]))\n      end\n\n      currencies = result[\"supported_codes\"].as_a.map() do |__arg0| __arg0.as_a.first.as_s end\n\n      currencies\n    end\n  end)\nelse\n  __temp_204\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://www.exchangerate-api.com/docs/pair-conversion-requests>","summary":"<p><a href=\"https://www.exchangerate-api.com/docs/pair-conversion-requests\">https://www.exchangerate-api.com/docs/pair-conversion-requests</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L42"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\npath = \"/v6/%s/pair/%s/%s\" % {URI.encode_path_segment(api_key), URI.encode_path_segment(base.code), URI.encode_path_segment(target.code)}\n\nrequest(path) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"result\"].as_s == \"success\"\n  else\n    raise(RateProviderError.new(result[\"error-type\"]))\n  end\n\n  rate = result[\"conversion_rate\"].to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_203 = @host).nil?\n  @host = (URI.parse(\"https://v6.exchangerate-api.com\"))\nelse\n  __temp_203\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/exchange_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/exchange_rate_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Fixer","path":"Money/Currency/RateProvider/Fixer.html","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Fixer](https://fixer.io/) currency rate provider.","summary":"<p><a href=\"https://fixer.io/\">Fixer</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fixer\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Fixer](https://fixer.io/) currency rate provider.","summary":"<p><a href=\"https://fixer.io/\">Fixer</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,access_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, access_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, access_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"access_key","default_value":"nil","external_name":"access_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(access_key: access_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"access_key:String-instance-method","name":"access_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L10"},"def":{"name":"access_key","return_type":"String","visibility":"Public","body":"if (__temp_205 = @access_key).nil?\n  @access_key = (option_from_env(\"FIXER_ACCESS_KEY\"))\nelse\n  __temp_205\nend"},"external_var":false},{"html_id":"access_key=(access_key:String)-instance-method","name":"access_key=","abstract":false,"args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"args_string":"(access_key : String)","args_html":"(access_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L10"},"def":{"name":"access_key=","args":[{"name":"access_key","external_name":"access_key","restriction":"String"}],"visibility":"Public","body":"@access_key = access_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fixer.io/documentation#supportedsymbols>","summary":"<p><a href=\"https://fixer.io/documentation#supportedsymbols\">https://fixer.io/documentation#supportedsymbols</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_207 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      access_key: access_key,\n    }\n    request(\"/api/symbols\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(RateProviderError.new(result.dig(\"error\", \"type\")))\n      end\n\n      currencies = result[\"symbols\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_207\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fixer.io/documentation#latestrates>","summary":"<p><a href=\"https://fixer.io/documentation#latestrates\">https://fixer.io/documentation#latestrates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L42"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  access_key: access_key,\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/api/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(RateProviderError.new(result.dig(\"error\", \"type\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_206 = @host).nil?\n  @host = (URI.parse(\"https://data.fixer.io\"))\nelse\n  __temp_206\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/fixer.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fixer.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FloatRates","path":"Money/Currency/RateProvider/FloatRates.html","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L6"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FloatRates](https://www.floatrates.com/) currency rate provider.","summary":"<p><a href=\"https://www.floatrates.com/\">FloatRates</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L6"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"float_rates\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FloatRates](https://www.floatrates.com/) currency rate provider.","summary":"<p><a href=\"https://www.floatrates.com/\">FloatRates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":15,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L15"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://www.floatrates.com/json-feeds.html>","summary":"<p><a href=\"https://www.floatrates.com/json-feeds.html\">https://www.floatrates.com/json-feeds.html</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":19,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L19"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_209 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    request(\"/json-feeds.html\") do |response|\n      result = XML.parse_html(response.body_io)\n      currencies = result.xpath_nodes(\"//li/a[starts-with(@href, 'https://www.floatrates.com/daily/')]\")\n\n      currencies.map do |node|\n        (node[\"href\"].match!(/(\\w+)\\.json$/))[1].upcase\n      end\n    end\n  end)\nelse\n  __temp_209\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":33,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L33"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\npath = \"/daily/%s.json\" % (URI.encode_path_segment(base.code.downcase))\n\nrequest(path) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(target.code.downcase, \"rate\")).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L11"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_208 = @host).nil?\n  @host = (URI.parse(\"https://www.floatrates.com\"))\nelse\n  __temp_208\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/float_rates.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/float_rates.cr#L11"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","path":"Money/Currency/RateProvider/FreecurrencyAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FreecurrencyAPI](https://freecurrencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://freecurrencyapi.com/\">FreecurrencyAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"freecurrency_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FreecurrencyAPI](https://freecurrencyapi.com/) currency rate provider.","summary":"<p><a href=\"https://freecurrencyapi.com/\">FreecurrencyAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_210 = @api_key).nil?\n  @api_key = (option_from_env(\"FREECURRENCY_API_KEY\"))\nelse\n  __temp_210\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://freecurrencyapi.com/docs/currencies>","summary":"<p><a href=\"https://freecurrencyapi.com/docs/currencies\">https://freecurrencyapi.com/docs/currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_212 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      apikey: api_key,\n    }\n    request(\"/v1/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"data\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_212\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://freecurrencyapi.com/docs/latest>","summary":"<p><a href=\"https://freecurrencyapi.com/docs/latest\">https://freecurrencyapi.com/docs/latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  apikey: api_key,\n  base_currency: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"data\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_211 = @host).nil?\n  @host = (URI.parse(\"https://api.freecurrencyapi.com\"))\nelse\n  __temp_211\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/freecurrency_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/freecurrency_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FXFeed","path":"Money/Currency/RateProvider/FXFeed.html","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FXFeed](https://fxfeed.io/) currency rate provider.","summary":"<p><a href=\"https://fxfeed.io/\">FXFeed</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fx_feed\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FXFeed](https://fxfeed.io/) currency rate provider.","summary":"<p><a href=\"https://fxfeed.io/\">FXFeed</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_213 = @api_key).nil?\n  @api_key = (option_from_env(\"FXFEED_API_KEY\"))\nelse\n  __temp_213\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fxfeed.io/docs#latest-currency-data>","summary":"<p><a href=\"https://fxfeed.io/docs#latest-currency-data\">https://fxfeed.io/docs#latest-currency-data</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_215 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/latest\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"]?.try(&.as_bool)\n      else\n        raise(RateProviderError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"message\")))\n      end\n\n      currencies = result[\"rates\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_215\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fxfeed.io/docs#latest-currency-data>","summary":"<p><a href=\"https://fxfeed.io/docs#latest-currency-data\">https://fxfeed.io/docs#latest-currency-data</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"]?.try(&.as_bool)\n  else\n    raise(RateProviderError.new(result.dig(\"error\", \"code\"), result.dig?(\"error\", \"message\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_214 = @host).nil?\n  @host = (URI.parse(\"https://api.fxfeed.io\"))\nelse\n  __temp_214\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/fx_feed.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_feed.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","path":"Money/Currency/RateProvider/FXRatesAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[FXRatesAPI](https://fxratesapi.com/) currency rate provider.","summary":"<p><a href=\"https://fxratesapi.com/\">FXRatesAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"fx_rates_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[FXRatesAPI](https://fxratesapi.com/) currency rate provider.","summary":"<p><a href=\"https://fxratesapi.com/\">FXRatesAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_216 = @api_key).nil?\n  @api_key = (option_from_env(\"FXRATES_API_KEY\"))\nelse\n  __temp_216\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://fxratesapi.com/docs/endpoints/list-available-currencies>","summary":"<p><a href=\"https://fxratesapi.com/docs/endpoints/list-available-currencies\">https://fxratesapi.com/docs/endpoints/list-available-currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_218 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_218\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://fxratesapi.com/docs/endpoints/latest-exchange-rates>","summary":"<p><a href=\"https://fxratesapi.com/docs/endpoints/latest-exchange-rates\">https://fxratesapi.com/docs/endpoints/latest-exchange-rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(RateProviderError.new(result[\"error\"], result[\"description\"]?))\n  end\n\n  if rate = result.dig?(\"rates\", target.code)\n    Rate.new(base, target, rate.to_s.to_big_d)\n  end\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_217 = @host).nil?\n  @host = (URI.parse(\"https://api.fxratesapi.com\"))\nelse\n  __temp_217\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/fx_rates_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/fx_rates_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/HTTP","path":"Money/Currency/RateProvider/HTTP.html","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP","abstract":false,"locations":[{"filename":"src/money/currency/rate_provider/http.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/http.cr#L8"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money/Currency/RateProvider/AbstractAPI","kind":"class","full_name":"Money::Currency::RateProvider::AbstractAPI","name":"AbstractAPI"},{"html_id":"money/Money/Currency/RateProvider/Coinlayer","kind":"class","full_name":"Money::Currency::RateProvider::Coinlayer","name":"Coinlayer"},{"html_id":"money/Money/Currency/RateProvider/CurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyAPI","name":"CurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/CurrencyBeacon","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyBeacon","name":"CurrencyBeacon"},{"html_id":"money/Money/Currency/RateProvider/CurrencyLayer","kind":"class","full_name":"Money::Currency::RateProvider::CurrencyLayer","name":"CurrencyLayer"},{"html_id":"money/Money/Currency/RateProvider/ECB","kind":"class","full_name":"Money::Currency::RateProvider::ECB","name":"ECB"},{"html_id":"money/Money/Currency/RateProvider/ExchangeRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::ExchangeRateAPI","name":"ExchangeRateAPI"},{"html_id":"money/Money/Currency/RateProvider/Fixer","kind":"class","full_name":"Money::Currency::RateProvider::Fixer","name":"Fixer"},{"html_id":"money/Money/Currency/RateProvider/FloatRates","kind":"class","full_name":"Money::Currency::RateProvider::FloatRates","name":"FloatRates"},{"html_id":"money/Money/Currency/RateProvider/FreecurrencyAPI","kind":"class","full_name":"Money::Currency::RateProvider::FreecurrencyAPI","name":"FreecurrencyAPI"},{"html_id":"money/Money/Currency/RateProvider/FXFeed","kind":"class","full_name":"Money::Currency::RateProvider::FXFeed","name":"FXFeed"},{"html_id":"money/Money/Currency/RateProvider/FXRatesAPI","kind":"class","full_name":"Money::Currency::RateProvider::FXRatesAPI","name":"FXRatesAPI"},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI"},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph"},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates"},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Module containing common HTTP methods used by currency rate providers.","summary":"<p>Module containing common HTTP methods used by currency rate providers.</p>","instance_methods":[{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":true,"location":{"filename":"src/money/currency/rate_provider/http.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/http.cr#L10"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":""},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/MetalpriceAPI","path":"Money/Currency/RateProvider/MetalpriceAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::MetalpriceAPI","name":"MetalpriceAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[MetalpriceAPI](https://metalpriceapi.com/) currency rate provider.","summary":"<p><a href=\"https://metalpriceapi.com/\">MetalpriceAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"metalprice_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[MetalpriceAPI](https://metalpriceapi.com/) currency rate provider.","summary":"<p><a href=\"https://metalpriceapi.com/\">MetalpriceAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_219 = @api_key).nil?\n  @api_key = (option_from_env(\"METALPRICE_API_KEY\"))\nelse\n  __temp_219\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://metalpriceapi.com/documentation#api_symbol>","summary":"<p><a href=\"https://metalpriceapi.com/documentation#api_symbol\">https://metalpriceapi.com/documentation#api_symbol</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_221 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/v1/symbols\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n\n      if result[\"success\"].as_bool\n      else\n        raise(RateProviderError.new(result.dig(\"error\", \"statusCode\"), result.dig?(\"error\", \"message\")))\n      end\n\n      currencies = result[\"symbols\"].as_h.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_221\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://metalpriceapi.com/documentation#api_realtime>","summary":"<p><a href=\"https://metalpriceapi.com/documentation#api_realtime\">https://metalpriceapi.com/documentation#api_realtime</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  base: base.code,\n  currencies: target.code,\n}\nrequest(\"/v1/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n\n  if result[\"success\"].as_bool\n  else\n    raise(RateProviderError.new(result.dig(\"error\", \"statusCode\"), result.dig?(\"error\", \"message\")))\n  end\n\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_220 = @host).nil?\n  @host = (URI.parse(\"https://api.metalpriceapi.com\"))\nelse\n  __temp_220\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/metalprice_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/metalprice_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/MoneyMorph","path":"Money/Currency/RateProvider/MoneyMorph.html","kind":"class","full_name":"Money::Currency::RateProvider::MoneyMorph","name":"MoneyMorph","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[MoneyMorph](https://moneymorph.dev/) currency rate provider.","summary":"<p><a href=\"https://moneymorph.dev/\">MoneyMorph</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"money_morph\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[MoneyMorph](https://moneymorph.dev/) currency rate provider.","summary":"<p><a href=\"https://moneymorph.dev/\">MoneyMorph</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, host : Nil | URI = nil)","args_html":"(*, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L14"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://moneymorph.dev/#currencies>","summary":"<p><a href=\"https://moneymorph.dev/#currencies\">https://moneymorph.dev/#currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L18"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_223 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    request(\"/api/currencies\") do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_223\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://moneymorph.dev/#latest>","summary":"<p><a href=\"https://moneymorph.dev/#latest\">https://moneymorph.dev/#latest</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L31"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  base: base.code,\n  symbols: target.code,\n}\nrequest(\"/api/latest\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L10"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_222 = @host).nil?\n  @host = (URI.parse(\"https://moneymorph.dev\"))\nelse\n  __temp_222\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/money_morph.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/money_morph.cr#L10"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/Null","path":"Money/Currency/RateProvider/Null.html","kind":"class","full_name":"Money::Currency::RateProvider::Null","name":"Null","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L3"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"Currency rate provider that always returns `nil`.","summary":"<p>Currency rate provider that always returns <code>nil</code>.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L3"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"null\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Currency rate provider that always returns `nil`.","summary":"<p>Currency rate provider that always returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/null.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L3"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/money/currency/rate_provider/null.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L4"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"Returns an array of supported base currency codes.","summary":"<p>Returns an array of supported base currency codes.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/null.cr","line_number":7,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L7"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_224 = @base_currency_codes).nil?\n  @base_currency_codes = ([] of String)\nelse\n  __temp_224\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"Returns the exchange rate between *base* and *target* currency, or `nil` if not found.","summary":"<p>Returns the exchange rate between <em>base</em> and <em>target</em> currency, or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/null.cr","line_number":11,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/null.cr#L11"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"nil"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/OpenExchangeRates","path":"Money/Currency/RateProvider/OpenExchangeRates.html","kind":"class","full_name":"Money::Currency::RateProvider::OpenExchangeRates","name":"OpenExchangeRates","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[Open Exchange Rates](https://openexchangerates.org/) currency rate provider.","summary":"<p><a href=\"https://openexchangerates.org/\">Open Exchange Rates</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"open_exchange_rates\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[Open Exchange Rates](https://openexchangerates.org/) currency rate provider.","summary":"<p><a href=\"https://openexchangerates.org/\">Open Exchange Rates</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,app_id:Nil|String=nil,host:Nil|URI=nil,show_alternative:Bool=true)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"app_id","default_value":"nil","external_name":"app_id","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"show_alternative","default_value":"true","external_name":"show_alternative","restriction":"::Bool"}],"args_string":"(*, app_id : Nil | String = nil, host : Nil | URI = nil, show_alternative : Bool = true)","args_html":"(*, app_id : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>, show_alternative : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":18,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L18"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"app_id","default_value":"nil","external_name":"app_id","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"},{"name":"show_alternative","default_value":"true","external_name":"show_alternative","restriction":"::Bool"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(app_id: app_id, host: host, show_alternative: show_alternative)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"app_id:String-instance-method","name":"app_id","abstract":false,"location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L10"},"def":{"name":"app_id","return_type":"String","visibility":"Public","body":"if (__temp_225 = @app_id).nil?\n  @app_id = (option_from_env(\"OPEN_EXCHANGE_RATES_APP_ID\"))\nelse\n  __temp_225\nend"},"external_var":false},{"html_id":"app_id=(app_id:String)-instance-method","name":"app_id=","abstract":false,"args":[{"name":"app_id","external_name":"app_id","restriction":"String"}],"args_string":"(app_id : String)","args_html":"(app_id : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L10"},"def":{"name":"app_id=","args":[{"name":"app_id","external_name":"app_id","restriction":"String"}],"visibility":"Public","body":"@app_id = app_id"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://docs.openexchangerates.org/reference/currencies-json>","summary":"<p><a href=\"https://docs.openexchangerates.org/reference/currencies-json\">https://docs.openexchangerates.org/reference/currencies-json</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":27,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L27"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_227 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      app_id: app_id,\n      show_alternative: show_alternative?.to_s,\n    }\n    request(\"/api/currencies.json\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result.keys\n\n      currencies\n    end\n  end)\nelse\n  __temp_227\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://docs.openexchangerates.org/reference/latest-json>","summary":"<p><a href=\"https://docs.openexchangerates.org/reference/latest-json\">https://docs.openexchangerates.org/reference/latest-json</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":44,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L44"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  app_id: app_id,\n  base: base.code,\n  symbols: target.code,\n  show_alternative: show_alternative?.to_s,\n}\nrequest(\"/api/latest.json\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = (result.dig(\"rates\", target.code)).to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_226 = @host).nil?\n  @host = (URI.parse(\"https://openexchangerates.org\"))\nelse\n  __temp_226\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false},{"html_id":"show_alternative=(show_alternative:Bool)-instance-method","name":"show_alternative=","abstract":false,"args":[{"name":"show_alternative","external_name":"show_alternative","restriction":"::Bool"}],"args_string":"(show_alternative : Bool)","args_html":"(show_alternative : Bool)","location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L16"},"def":{"name":"show_alternative=","args":[{"name":"show_alternative","external_name":"show_alternative","restriction":"::Bool"}],"visibility":"Public","body":"@show_alternative = show_alternative"},"external_var":false},{"html_id":"show_alternative?:Bool-instance-method","name":"show_alternative?","abstract":false,"location":{"filename":"src/money/currency/rate_provider/open_exchange_rates.cr","line_number":16,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/open_exchange_rates.cr#L16"},"def":{"name":"show_alternative?","visibility":"Public","body":"@show_alternative"},"external_var":false}]},{"html_id":"money/Money/Currency/RateProvider/UniRateAPI","path":"Money/Currency/RateProvider/UniRateAPI.html","kind":"class","full_name":"Money::Currency::RateProvider::UniRateAPI","name":"UniRateAPI","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"ancestors":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"},{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},{"html_id":"money/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L5"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"}],"included_modules":[{"html_id":"money/Money/Currency/RateProvider/HTTP","kind":"module","full_name":"Money::Currency::RateProvider::HTTP","name":"HTTP"}],"namespace":{"html_id":"money/Money/Currency/RateProvider","kind":"class","full_name":"Money::Currency::RateProvider","name":"RateProvider"},"doc":"[UniRateAPI](https://unirateapi.com/) currency rate provider.","summary":"<p><a href=\"https://unirateapi.com/\">UniRateAPI</a> currency rate provider.</p>","class_methods":[{"html_id":"key:String-class-method","name":"key","doc":"Returns the provider key.","summary":"<p>Returns the provider key.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L5"},"def":{"name":"key","return_type":"String","visibility":"Public","body":"\"uni_rate_api\""},"external_var":false}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"[UniRateAPI](https://unirateapi.com/) currency rate provider.","summary":"<p><a href=\"https://unirateapi.com/\">UniRateAPI</a> currency rate provider.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,api_key:Nil|String=nil,host:Nil|URI=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"args_string":"(*, api_key : Nil | String = nil, host : Nil | URI = nil)","args_html":"(*, api_key : Nil | <a href=\"../../../String.html\">String</a> = <span class=\"n\">nil</span>, host : Nil | URI = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L17"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"::Nil | ::String"},{"name":"host","default_value":"nil","external_name":"host","restriction":"::Nil | ::URI"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(api_key: api_key, host: host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"api_key:String-instance-method","name":"api_key","abstract":false,"location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L10"},"def":{"name":"api_key","return_type":"String","visibility":"Public","body":"if (__temp_228 = @api_key).nil?\n  @api_key = (option_from_env(\"UNIRATE_API_KEY\"))\nelse\n  __temp_228\nend"},"external_var":false},{"html_id":"api_key=(api_key:String)-instance-method","name":"api_key=","abstract":false,"args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"args_string":"(api_key : String)","args_html":"(api_key : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":10,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L10"},"def":{"name":"api_key=","args":[{"name":"api_key","external_name":"api_key","restriction":"String"}],"visibility":"Public","body":"@api_key = api_key"},"external_var":false},{"html_id":"base_currency_codes:Array(String)-instance-method","name":"base_currency_codes","doc":"<https://unirateapi.com/apidocs/#/Currency/get_api_currencies>","summary":"<p><a href=\"https://unirateapi.com/apidocs/#/Currency/get_api_currencies\">https://unirateapi.com/apidocs/#/Currency/get_api_currencies</a></p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L21"},"def":{"name":"base_currency_codes","return_type":"Array(String)","visibility":"Public","body":"if (__temp_230 = @base_currency_codes).nil?\n  @base_currency_codes = (begin\n    Log.debug do \"Fetching supported currencies\" end\n\n    params = {\n      api_key: api_key,\n    }\n    request(\"/api/currencies\", params) do |response|\n      result = (JSON.parse(response.body_io)).as_h\n      currencies = result[\"currencies\"].as_a.map(&.as_s)\n\n      currencies\n    end\n  end)\nelse\n  __temp_230\nend"},"external_var":false},{"html_id":"exchange_rate?(base:Currency,target:Currency):Rate|Nil-instance-method","name":"exchange_rate?","doc":"<https://unirateapi.com/apidocs/#/Currency/get_api_rates>","summary":"<p><a href=\"https://unirateapi.com/apidocs/#/Currency/get_api_rates\">https://unirateapi.com/apidocs/#/Currency/get_api_rates</a></p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency) : Rate | Nil","args_html":"(base : <a href=\"../../../Money/Currency.html\">Currency</a>, target : <a href=\"../../../Money/Currency.html\">Currency</a>) : <a href=\"../../../Money/Currency/Rate.html\">Rate</a> | Nil","location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":37,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L37"},"def":{"name":"exchange_rate?","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"return_type":"Rate | ::Nil","visibility":"Public","body":"Log.debug do \"Fetching rate for #{base} -> #{target}\" end\n\nparams = {\n  api_key: api_key,\n  from: base.code,\n  to: target.code,\n}\nrequest(\"/api/rates\", params) do |response|\n  result = (JSON.parse(response.body_io)).as_h\n  rate = result[\"rate\"].to_s.to_big_d\n\n  Rate.new(base, target, rate)\nend\n"},"external_var":false},{"html_id":"host:URI-instance-method","name":"host","doc":"Returns the host URI used by the HTTP `#client` instance.","summary":"<p>Returns the host URI used by the HTTP <code>#client</code> instance.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L13"},"def":{"name":"host","return_type":"URI","visibility":"Public","body":"if (__temp_229 = @host).nil?\n  @host = (URI.parse(\"https://api.unirateapi.com\"))\nelse\n  __temp_229\nend"},"external_var":false},{"html_id":"host=(host:URI)-instance-method","name":"host=","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"URI"}],"args_string":"(host : URI)","args_html":"(host : URI)","location":{"filename":"src/money/currency/rate_provider/uni_rate_api.cr","line_number":13,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_provider/uni_rate_api.cr#L13"},"def":{"name":"host=","args":[{"name":"host","external_name":"host","restriction":"URI"}],"visibility":"Public","body":"@host = host"},"external_var":false}]}]},{"html_id":"money/Money/Currency/RateStore","path":"Money/Currency/RateStore.html","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore","abstract":true,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"subclasses":[{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"constructors":[{"html_id":"new(*,ttl:Time::Span|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"args_string":"(*, ttl : Time::Span | Nil = nil)","args_html":"(*, ttl : Time::Span | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_store.cr","line_number":8,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L8"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(ttl: ttl)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"<<(rate:Rate):self-instance-method","name":"<<","doc":"Registers a conversion rate.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore << Rate.new(\n  Money::Currency.find(\"USD\"),\n  Money::Currency.find(\"CAD\"),\n  1.24515.to_big_d\n)\nstore << Rate.new(\n  Money::Currency.find(\"CAD\"),\n  Money::Currency.find(\"USD\"),\n  0.803115.to_big_d\n)\n```","summary":"<p>Registers a conversion rate.</p>","abstract":false,"args":[{"name":"rate","external_name":"rate","restriction":"Rate"}],"args_string":"(rate : Rate) : self","args_html":"(rate : <a href=\"../../Money/Currency/Rate.html\">Rate</a>) : <span class=\"k\">self</span>","location":{"filename":"src/money/currency/rate_store.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L62"},"def":{"name":"<<","args":[{"name":"rate","external_name":"rate","restriction":"Rate"}],"return_type":"self","visibility":"Public","body":"transaction(mutable: true) do\n  set_rate(rate)\nend\nself\n"},"external_var":false},{"html_id":"<<(rates:Enumerable(Rate)):self-instance-method","name":"<<","doc":"Registers multiple conversion rates.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore << [\n  Rate.new(\n    Money::Currency.find(\"USD\"),\n    Money::Currency.find(\"CAD\"),\n    1.24515.to_big_d\n  ),\n  Rate.new(\n    Money::Currency.find(\"CAD\"),\n    Money::Currency.find(\"USD\"),\n    0.803115.to_big_d\n  ),\n]\n```","summary":"<p>Registers multiple conversion rates.</p>","abstract":false,"args":[{"name":"rates","external_name":"rates","restriction":"Enumerable(Rate)"}],"args_string":"(rates : Enumerable(Rate)) : self","args_html":"(rates : Enumerable(<a href=\"../../Money/Currency/Rate.html\">Rate</a>)) : <span class=\"k\">self</span>","location":{"filename":"src/money/currency/rate_store.cr","line_number":86,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L86"},"def":{"name":"<<","args":[{"name":"rates","external_name":"rates","restriction":"Enumerable(Rate)"}],"return_type":"self","visibility":"Public","body":"transaction(mutable: true) do\n  set_rates(rates)\nend\nself\n"},"external_var":false},{"html_id":"[](base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal-instance-method","name":"[]","doc":"Retrieves the rate for the given currency pair or raises\n`UnknownRateError` if not found.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\n\nstore[\"USD\", \"CAD\"] # => 1.24515\nstore[\"CAD\", \"USD\"] # raises UnknownRateError\n```","summary":"<p>Retrieves the rate for the given currency pair or raises <code><a href=\"../../Money/UnknownRateError.html\">UnknownRateError</a></code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal","location":{"filename":"src/money/currency/rate_store.cr","line_number":126,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L126"},"def":{"name":"[]","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal","visibility":"Public","body":"self[base, target]? ||\n(raise(UnknownRateError.new(base, target)))"},"external_var":false},{"html_id":"[]=(base:String|Symbol|Currency,target:String|Symbol|Currency,value:Number):Nil-instance-method","name":"[]=","doc":"Registers a conversion rate.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\nstore[\"CAD\", \"USD\"] = 0.803115\n```","summary":"<p>Registers a conversion rate.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"},{"name":"value","external_name":"value","restriction":"Number"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency, value : Number) : Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, value : <a href=\"../../Number.html\">Number</a>) : Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":38,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L38"},"def":{"name":"[]=","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"},{"name":"value","external_name":"value","restriction":"Number"}],"return_type":"Nil","visibility":"Public","body":"base, target = Currency.wrap(base), Currency.wrap(target)\n\ntransaction(mutable: true) do\n  set_rate(Rate.new(base, target, value.to_big_d))\nend\n"},"external_var":false},{"html_id":"[]?(base:String|Symbol|Currency,target:String|Symbol|Currency):BigDecimal|Nil-instance-method","name":"[]?","doc":"Retrieves the rate for the given currency pair or `nil` if not found.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 1.24515\n\nstore[\"USD\", \"CAD\"]? # => 1.24515\nstore[\"CAD\", \"USD\"]? # => nil\n```","summary":"<p>Retrieves the rate for the given currency pair or <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency, target : String | Symbol | Currency) : BigDecimal | Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>, target : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : BigDecimal | Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":105,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L105"},"def":{"name":"[]?","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"},{"name":"target","external_name":"target","restriction":"String | Symbol | Currency"}],"return_type":"BigDecimal | ::Nil","visibility":"Public","body":"base, target = Currency.wrap(base), Currency.wrap(target)\n\ntransaction do\n  if rate = get_rate?(base, target)\n    stale_rate?(rate) ? nil : rate.value\n  end\nend\n"},"external_var":false},{"html_id":"clear(base:String|Symbol|Currency):Nil-instance-method","name":"clear","doc":"Removes rates for the given *base* currency.","summary":"<p>Removes rates for the given <em>base</em> currency.</p>","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"}],"args_string":"(base : String | Symbol | Currency) : Nil","args_html":"(base : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Money/Currency.html\">Currency</a>) : Nil","location":{"filename":"src/money/currency/rate_store.cr","line_number":169,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L169"},"def":{"name":"clear","args":[{"name":"base","external_name":"base","restriction":"String | Symbol | Currency"}],"return_type":"Nil","visibility":"Public","body":"transaction(mutable: true) do\n  clear_rates(Currency.wrap(base))\nend"},"external_var":false},{"html_id":"clear:Nil-instance-method","name":"clear","doc":"Empties currency rate index.","summary":"<p>Empties currency rate index.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":159,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L159"},"def":{"name":"clear","return_type":"Nil","visibility":"Public","body":"transaction(mutable: true) do\n  clear_rates\nend"},"external_var":false},{"html_id":"each(&:Rate->_):Nil-instance-method","name":"each","doc":"Iterates over list of `Rate` objects.\n\n```\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Iterates over list of <code><a href=\"../../Money/Currency/Rate.html\">Rate</a></code> objects.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":141,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L141"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Rate -> _)"},"return_type":"Nil","visibility":"Public","body":"transaction do\n  each_rate do |rate|\n    if stale_rate?(rate)\n    else\n      yield rate\n    end\n  end\nend"},"external_var":false},{"html_id":"rates:Array(Rate)-instance-method","name":"rates","doc":"Alias of `#to_a`.","summary":"<p>Alias of <code>#to_a</code>.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store.cr","line_number":151,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L151"},"def":{"name":"rates","return_type":"Array(Rate)","visibility":"Public","body":"to_a"},"external_var":false},{"html_id":"transaction(*,mutable:Bool=false,&:->_)-instance-method","name":"transaction","doc":"Wraps block execution in a concurrency-safe transaction.","summary":"<p>Wraps block execution in a concurrency-safe transaction.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"args_string":"(*, mutable : Bool = false, & :  -> _)","args_html":"(*, mutable : Bool = <span class=\"n\">false</span>, & :  -> _)","location":{"filename":"src/money/currency/rate_store.cr","line_number":12,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store.cr#L12"},"def":{"name":"transaction","args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"splat_index":0,"yields":0,"block_arity":0,"block_arg":{"name":"","external_name":"","restriction":"(-> _)"},"visibility":"Public","body":"@mutex.synchronize do yield end"},"external_var":false}],"types":[{"html_id":"money/Money/Currency/RateStore/File","path":"Money/Currency/RateStore/File.html","kind":"class","full_name":"Money::Currency::RateStore::File","name":"File","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"},"ancestors":[{"html_id":"money/Money/Currency/RateStore/Memory","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory"},{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store/file.cr","line_number":23,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L23"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Class for storage of exchange rate pairs in a JSON file.\n\nNOTE: Exchange rates are stored in memory and are automatically loaded from\n(upon initialization), and persisted to a JSON file (on every mutable\ntransaction commit).\n\n```\nstore = Money::Currency::RateStore::File.new(\"path/to/file.json\")\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n\n# Save rates\nstore.save\n```","summary":"<p>Class for storage of exchange rate pairs in a JSON file.</p>","constructors":[{"html_id":"new(filepath:Path|String,*,ttl:Time::Span|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"filepath","external_name":"filepath","restriction":"Path | String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"args_string":"(filepath : Path | String, *, ttl : Time::Span | Nil = nil)","args_html":"(filepath : Path | <a href=\"../../../String.html\">String</a>, *, ttl : Time::Span | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":24,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L24"},"def":{"name":"new","args":[{"name":"filepath","external_name":"filepath","restriction":"Path | String"},{"name":"","external_name":"","restriction":""},{"name":"ttl","default_value":"nil","external_name":"ttl","restriction":"Time::Span | ::Nil"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(filepath, ttl: ttl)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"load:Nil-instance-method","name":"load","doc":"Loads rates from a JSON file.","summary":"<p>Loads rates from a JSON file.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":39,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L39"},"def":{"name":"load","return_type":"Nil","visibility":"Public","body":"transaction do\n  if ::File.exists?(@filepath)\n  else\n    return\n  end\n\n  ::File.open(@filepath) do |file|\n    rates = Array(Rate).from_json(file)\n\n    clear_rates\n    set_rates(rates)\n  end\nend"},"external_var":false},{"html_id":"save:Nil-instance-method","name":"save","doc":"Saves rates to a JSON file.","summary":"<p>Saves rates to a JSON file.</p>","abstract":false,"location":{"filename":"src/money/currency/rate_store/file.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L56"},"def":{"name":"save","return_type":"Nil","visibility":"Public","body":"transaction do\n  ::File.open(@filepath, \"w\") do |file|\n    rates.to_pretty_json(file)\n  end\nend"},"external_var":false},{"html_id":"transaction(*,mutable:Bool=false,&:->_)-instance-method","name":"transaction","doc":"Wraps block execution in a concurrency-safe transaction.","summary":"<p>Wraps block execution in a concurrency-safe transaction.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"args_string":"(*, mutable : Bool = false, & :  -> _)","args_html":"(*, mutable : Bool = <span class=\"n\">false</span>, & :  -> _)","location":{"filename":"src/money/currency/rate_store/file.cr","line_number":30,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/file.cr#L30"},"def":{"name":"transaction","args":[{"name":"","external_name":"","restriction":""},{"name":"mutable","default_value":"false","external_name":"mutable","restriction":"Bool"}],"splat_index":0,"yields":0,"block_arity":0,"block_arg":{"name":"","external_name":"","restriction":"(-> _)"},"visibility":"Public","body":"super(mutable: mutable) do\n  (yield).tap do\n    if mutable\n      save\n    end\n  end\nend"},"external_var":false}]},{"html_id":"money/Money/Currency/RateStore/Memory","path":"Money/Currency/RateStore/Memory.html","kind":"class","full_name":"Money::Currency::RateStore::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"ancestors":[{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},{"html_id":"money/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/rate_store/memory.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/rate_store/memory.cr#L14"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/Currency/RateStore/File","kind":"class","full_name":"Money::Currency::RateStore::File","name":"File"}],"namespace":{"html_id":"money/Money/Currency/RateStore","kind":"class","full_name":"Money::Currency::RateStore","name":"RateStore"},"doc":"Class for in-memory concurrency-safe storage of exchange rate pairs.\n\n```\nstore = Money::Currency::RateStore::Memory.new\nstore[\"USD\", \"CAD\"] = 0.98\nstore[\"USD\", \"CAD\"] # => 0.98\n\n# Iterates rates\nstore.each do |rate|\n  puts rate\nend\n```","summary":"<p>Class for in-memory concurrency-safe storage of exchange rate pairs.</p>"}]},{"html_id":"money/Money/Currency/Type","path":"Money/Currency/Type.html","kind":"enum","full_name":"Money::Currency::Type","name":"Type","abstract":false,"ancestors":[{"html_id":"money/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/currency/type.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/type.cr#L3"}],"repository_name":"money","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Metal","name":"Metal","value":"0"},{"id":"Fiat","name":"Fiat","value":"1"},{"id":"Crypto","name":"Crypto","value":"2"}],"namespace":{"html_id":"money/Money/Currency","kind":"class","full_name":"Money::Currency","name":"Currency"},"doc":"Currency type.","summary":"<p>Currency type.</p>","instance_methods":[{"html_id":"crypto?-instance-method","name":"crypto?","doc":"Returns `true` if this enum value equals `Crypto`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Crypto\">Crypto</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":6,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/type.cr#L6"},"def":{"name":"crypto?","visibility":"Public","body":"self == Crypto"},"external_var":false},{"html_id":"fiat?-instance-method","name":"fiat?","doc":"Returns `true` if this enum value equals `Fiat`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Fiat\">Fiat</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/type.cr#L5"},"def":{"name":"fiat?","visibility":"Public","body":"self == Fiat"},"external_var":false},{"html_id":"metal?-instance-method","name":"metal?","doc":"Returns `true` if this enum value equals `Metal`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Money/Currency/Type.html#Metal\">Metal</a></code></p>","abstract":false,"location":{"filename":"src/money/currency/type.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/currency/type.cr#L4"},"def":{"name":"metal?","visibility":"Public","body":"self == Metal"},"external_var":false}]}]},{"html_id":"money/Money/DifferentCurrencyError","path":"Money/DifferentCurrencyError.html","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":85,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L85"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised by `Currency::Exchange::SingleCurrency` when trying to exchange currencies.","summary":"<p>Raised by <code><a href=\"../Money/Currency/Exchange/SingleCurrency.html\">Currency::Exchange::SingleCurrency</a></code> when trying to exchange currencies.</p>","constructors":[{"html_id":"new(base:Currency,target:Currency)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"args_string":"(base : Currency, target : Currency)","args_html":"(base : <a href=\"../Money/Currency.html\">Currency</a>, target : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/error.cr","line_number":86,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L86"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":"Currency"},{"name":"target","external_name":"target","restriction":"Currency"}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/Error","path":"Money/Error.html","kind":"class","full_name":"Money::Error","name":"Error","abstract":false,"superclass":{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L3"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"money/Money/AggregateError","kind":"class","full_name":"Money::AggregateError","name":"AggregateError"},{"html_id":"money/Money/DifferentCurrencyError","kind":"class","full_name":"Money::DifferentCurrencyError","name":"DifferentCurrencyError"},{"html_id":"money/Money/Parse/Error","kind":"class","full_name":"Money::Parse::Error","name":"Error"},{"html_id":"money/Money/RateProviderError","kind":"class","full_name":"Money::RateProviderError","name":"RateProviderError"},{"html_id":"money/Money/RateProviderRequestError","kind":"class","full_name":"Money::RateProviderRequestError","name":"RateProviderRequestError"},{"html_id":"money/Money/RateProviderRequiredOptionError","kind":"class","full_name":"Money::RateProviderRequiredOptionError","name":"RateProviderRequiredOptionError"},{"html_id":"money/Money/UndefinedSmallestDenominationError","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError"},{"html_id":"money/Money/UnknownCurrencyError","kind":"class","full_name":"Money::UnknownCurrencyError","name":"UnknownCurrencyError"},{"html_id":"money/Money/UnknownRateError","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError"},{"html_id":"money/Money/UnknownRateProviderError","kind":"class","full_name":"Money::UnknownRateProviderError","name":"UnknownRateProviderError"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Base exception class.","summary":"<p>Base exception class.</p>"},{"html_id":"money/Money/Exchange","path":"Money/Exchange.html","kind":"module","full_name":"Money::Exchange","name":"Exchange","abstract":false,"locations":[{"filename":"src/money/money/exchange.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/exchange.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"exchange_to(other_currency:String|Symbol|Currency):Money-instance-method","name":"exchange_to","doc":"Exchanges `self` to a new `Money` object in *other_currency*.","summary":"<p>Exchanges <code>self</code> to a new <code><a href=\"../Money.html\">Money</a></code> object in <em>other_currency</em>.</p>","abstract":false,"args":[{"name":"other_currency","external_name":"other_currency","restriction":"String | Symbol | Currency"}],"args_string":"(other_currency : String | Symbol | Currency) : Money","args_html":"(other_currency : <a href=\"../String.html\">String</a> | Symbol | <a href=\"../Money/Currency.html\">Currency</a>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/exchange.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/exchange.cr#L4"},"def":{"name":"exchange_to","args":[{"name":"other_currency","external_name":"other_currency","restriction":"String | Symbol | Currency"}],"return_type":"Money","visibility":"Public","body":"other_currency = Currency.wrap(other_currency)\ncase\nwhen other_currency == currency\n  self\nwhen zero?\n  with_currency(other_currency)\nelse\n  exchange.exchange(self, other_currency)\nend\n"},"external_var":false},{"html_id":"with_same_currency(other:Money,&)-instance-method","name":"with_same_currency","doc":"Yields *other* `Money` object exchanged to `self.currency`.","summary":"<p>Yields <em>other</em> <code><a href=\"../Money.html\">Money</a></code> object exchanged to <code>self.currency</code>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Money"}],"args_string":"(other : Money, &)","args_html":"(other : <a href=\"../Money.html\">Money</a>, &)","location":{"filename":"src/money/money/exchange.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/exchange.cr#L17"},"def":{"name":"with_same_currency","args":[{"name":"other","external_name":"other","restriction":"Money"}],"yields":1,"block_arity":1,"visibility":"Public","body":"yield other.exchange_to(currency)"},"external_var":false}]},{"html_id":"money/Money/Formatting","path":"Money/Formatting.html","kind":"module","full_name":"Money::Formatting","name":"Formatting","abstract":false,"locations":[{"filename":"src/money/money/formatting.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/formatting.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"format(options:NamedTuple):String-instance-method","name":"format","doc":"Creates a formatted price string according to several rules.\n\n**display_free** (`Bool | String`) — default: `false`\n\nWhether a zero amount of money should be formatted as the supplied string.\n\n```\nMoney.us_dollar(0).format(display_free: \"gratis\") # => \"gratis\"\nMoney.us_dollar(0).format                         # => \"$0.00\"\n```\n\n**sign_positive** (`Bool`) — default: `false`\n\nWhether positive numbers should be signed, too.\n\n```\n# You can specify to display the sign with positive numbers\nMoney.new(100, \"GBP\").format(sign_positive: true) # => \"+£1.00\"\nMoney.new(100, \"GBP\").format                      # => \"£1.00\"\n```\n\n**with_currency** (`Bool`) — default: `false`\n\nWhether the currency name should be appended to the result string.\n\n```\nMoney.us_dollar(100).format                      # => \"$1.00\"\nMoney.us_dollar(100).format(with_currency: true) # => \"$1.00 USD\"\nMoney.us_dollar(85).format(with_currency: true)  # => \"$0.85 USD\"\n```\n\n**no_cents** (`Bool`) — default: `false`\n\nWhether cents should be omitted.\n\n```\nMoney.us_dollar(100).format(no_cents: true) # => \"$1\"\nMoney.us_dollar(599).format(no_cents: true) # => \"$5\"\n```\n\n**no_cents_if_whole** (`Bool`) — default: `false`\n\nWhether cents should be omitted if the cent value is zero.\n\n```\nMoney.us_dollar(10000).format(no_cents_if_whole: true) # => \"$100\"\nMoney.us_dollar(10034).format(no_cents_if_whole: true) # => \"$100.34\"\n```\n\n**drop_trailing_zeros** (`Bool`) — default: `false`\n\n```\nMoney.new(89000, :btc).format(drop_trailing_zeros: true) # => ฿0.00089\nMoney.new(110, :usd).format(drop_trailing_zeros: true)   # => $1.1\n```\n\n**symbol_first** (`Bool`) — default: `false`\n\nWhether a money symbol should go before the amount.\n\n```\nMoney.new(10000, \"USD\").format(symbol_first: true)  # => \"$100.00\"\nMoney.new(10000, \"USD\").format(symbol_first: false) # => \"100.00 $\"\n```\n\n**symbol** (`Bool | String`) — default: `true`\n\nWhether a money symbol should be prepended to the result string.\nThis method attempts to pick a symbol that's suitable for the given currency.\n\n```\nMoney.new(100, \"USD\") # => \"$1.00\"\nMoney.new(100, \"GBP\") # => \"£1.00\"\nMoney.new(100, \"EUR\") # => \"€1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol: true) # => \"$1.00\"\nMoney.new(100, \"GBP\").format(symbol: true) # => \"£1.00\"\nMoney.new(100, \"EUR\").format(symbol: true) # => \"€1.00\"\n\n# You can pass `false` or an empty string to disable\n# prepending a money symbol.\nMoney.new(100, \"USD\").format(symbol: false) # => \"1.00\"\nMoney.new(100, \"GBP\").format(symbol: nil)   # => \"1.00\"\nMoney.new(100, \"EUR\").format(symbol: \"\")    # => \"1.00\"\n\n# If the symbol for the given currency isn't known, then it will default\n# to \"¤\" as symbol.\nMoney.new(100, \"XBC\").format(symbol: true) # => \"1.00 ¤\"\n\n# You can specify a string as value to enforce using a particular symbol.\nMoney.new(100, \"XBC\").format(symbol: \"ƒ\") # => \"1.00 ƒ\"\n```\n\n**disambiguate** (`Bool`) — default: `false`\n\nPrevents the result from being ambiguous due to equal symbols for different currencies.\nUses the `disambiguate_symbol`.\n\n```\nMoney.new(100, \"USD\").format(disambiguate: false) # => \"$100.00\"\nMoney.new(100, \"CAD\").format(disambiguate: false) # => \"$100.00\"\nMoney.new(100, \"USD\").format(disambiguate: true)  # => \"US$100.00\"\nMoney.new(100, \"CAD\").format(disambiguate: true)  # => \"C$100.00\"\n```\n\n**symbol_before_without_space** (`Bool`) — default: `true`\n\nWhether a space between the money symbol and the amount should be inserted\nwhen `:symbol_first` is `true`. The default is `true` (meaning no space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `false`.\n\n```\n# Default is to not insert a space.\nMoney.new(100, \"USD\").format # => \"$1.00\"\n\n# Same thing.\nMoney.new(100, \"USD\").format(symbol_before_without_space: true) # => \"$1.00\"\n\n# If set to false, will insert a space.\nMoney.new(100, \"USD\").format(symbol_before_without_space: false) # => \"$ 1.00\"\n```\n\n**symbol_after_without_space** (`Bool`) — default: `false`\n\nWhether a space between the amount and the money symbol should be inserted\nwhen `:symbol_first` is `false`. The default is `false` (meaning space).\nIgnored if `:symbol` is `false` or `:symbol_first` is `true`.\n\n```\n# Default is to insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false) # => \"1.00 $\"\n\n# If set to true, will not insert a space.\nMoney.new(100, \"USD\").format(symbol_first: false, symbol_after_without_space: true) # => \"1.00$\"\n```\n\n**separator** (`Bool | String`) — default: `true`\n\nWhether the currency should be separated by the specified character or \".\".\n\n```\n# If a string is specified, it's value is used.\nMoney.new(100, \"USD\").format(separator: \",\") # => \"$1,00\"\n\n# If the separator for a given currency isn't known, then it will default\n# to \".\" as separator.\nMoney.new(100, \"FOO\").format # => \"$1.00\"\n```\n\n**delimiter** (`Bool | String`) — default: `true`\n\nWhether the currency should be delimited by the specified character or \",\".\n\n```\n# If falsy value is specified, no delimiter is used.\nMoney.new(100000, \"USD\").format(delimiter: false) # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: nil)   # => \"1000.00\"\nMoney.new(100000, \"USD\").format(delimiter: \"\")    # => \"1000.00\"\n\n# If a string is specified, it's value is used.\nMoney.new(100000, \"USD\").format(delimiter: \".\") # => \"$1.000.00\"\n\n# If the delimiter for a given currency isn't known, then it will\n# default to \",\" as delimiter.\nMoney.new(100000, \"FOO\").format # => \"$1,000.00\"\n```\n\n**html** (`Bool`) — default: `false`\n\nWhether the currency should be HTML-formatted.\n\n```\nMoney.new(1999, \"RUB\").format(html: true, no_cents: true) # => \"19 &#x20BD;\"\n```","summary":"<p>Creates a formatted price string according to several rules.</p>","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"NamedTuple"}],"args_string":"(options : NamedTuple) : String","args_html":"(options : NamedTuple) : <a href=\"../String.html\">String</a>","location":{"filename":"src/money/money/formatting.cr","line_number":180,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/formatting.cr#L180"},"def":{"name":"format","args":[{"name":"options","external_name":"options","restriction":"NamedTuple"}],"return_type":"String","visibility":"Public","body":"default_options = {\n  display_free: false,\n  sign_positive: false,\n  with_currency: false,\n  html: false,\n  no_cents: false,\n  no_cents_if_whole: false,\n  drop_trailing_zeros: false,\n  disambiguate: false,\n  symbol_before_without_space: true,\n  symbol_after_without_space: false,\n  symbol_first: currency.symbol_first? || false,\n  separator: currency.decimal_mark || \".\",\n  delimiter: currency.thousands_separator || \",\",\n}\noptions = default_options.merge(options)\n\n{% for key in [:separator, :delimiter] of ::Symbol %}\n        if options[{{ key }}] === true\n          options = options.merge {{ key.id }}: default_options[{{ key }}]\n        end\n      {% end %}\n\nif zero?\n  display_free = options[:display_free]\n  if display_free.is_a?(String)\n    return display_free\n  end\nend\n\nparts = amount.abs.format(separator: '.', delimiter: nil).split('.')\nunit, subunit = parts[0], parts[1]?\nif subunit == \"0\"\n  subunit = nil\nend\n\nformatted = unit\n\ndelimiter = options[:delimiter]\nif delimiter\n  formatted = formatted.gsub(DELIMITER_REGEX) do |digit_to_delimit|\n    \"#{digit_to_delimit}#{delimiter}\"\n  end\nend\n\ndisplay_cents = true\nif options[:no_cents] || (options[:no_cents_if_whole] && (!subunit))\n  display_cents = false\nend\n\ndecimal_places = currency.decimal_places\nif display_cents && decimal_places > 0\n  subunit = subunit.to_s.ljust(decimal_places, '0')\n  if options[:drop_trailing_zeros]\n    subunit = subunit.rstrip('0')\n  end\n  if subunit.empty?\n  else\n    formatted = formatted + \"#{options[:separator]}#{subunit}\"\n  end\nend\n\nsign = negative? ? '-' : (options[:sign_positive] && positive?) ? '+' : nil\n\ndefault_symbol = if options[:disambiguate] && currency.disambiguate_symbol\n  currency.disambiguate_symbol\nelse\n  currency.symbol || \"¤\"\nend\n\nsymbol = case\nwhen options[:html] && currency.html_entity\n  currency.html_entity\nwhen options.has_key?(:symbol)\n  case options[:symbol]?\n  when true\n    default_symbol\n  when String\n    options[:symbol]?\n  end\nelse\n  default_symbol\nend\n\nif symbol.is_a?(String) && !symbol.empty?\n  if options[:symbol_first]\n    symbol_space = options[:symbol_before_without_space] ? nil : ' '\n    formatted = \"#{sign}#{symbol}#{symbol_space}#{formatted}\"\n  else\n    symbol_space = options[:symbol_after_without_space] ? nil : ' '\n    formatted = \"#{sign}#{formatted}#{symbol_space}#{symbol}\"\n  end\nelse\n  formatted = \"#{sign}#{formatted}\"\nend\n\nif options[:with_currency]\n  formatted = formatted + \" #{currency}\"\nend\nformatted\n"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"See also `#format`.","summary":"<p>See also <code><a href=\"../Money/Formatting.html#format%28options%3ANamedTuple%29%3AString-instance-method\">#format</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/money/money/formatting.cr","line_number":284,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/formatting.cr#L284"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << format"},"external_var":false}]},{"html_id":"money/Money/Parse","path":"Money/Parse.html","kind":"module","full_name":"Money::Parse","name":"Parse","abstract":false,"locations":[{"filename":"src/money/money/parse.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/parse.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"parse(str:String,*,allow_ambiguous=true):Money-instance-method","name":"parse","doc":"Creates a `Money` instance from a string.\n\nIf `allow_ambiguous` is `true` (default), returns the first matching\ncurrency for ambiguous values, otherwise raises `Error`.","summary":"<p>Creates a <code><a href=\"../Money.html\">Money</a></code> instance from a string.</p>","abstract":false,"args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(str : String, *, allow_ambiguous = true) : Money","args_html":"(str : <a href=\"../String.html\">String</a>, *, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/parse.cr","line_number":17,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/parse.cr#L17"},"def":{"name":"parse","args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":1,"return_type":"Money","visibility":"Public","body":"parse(str, allow_ambiguous) do |ex| raise(ex) end"},"external_var":false},{"html_id":"parse?(str:String,*,allow_ambiguous=true):Money|Nil-instance-method","name":"parse?","doc":"Creates a `Money` instance from a string, or returns `nil` on failure.\n\nIf `allow_ambiguous` is `true` (default), returns the first\nmatching currency for ambiguous values, otherwise returns `nil`.","summary":"<p>Creates a <code><a href=\"../Money.html\">Money</a></code> instance from a string, or returns <code>nil</code> on failure.</p>","abstract":false,"args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(str : String, *, allow_ambiguous = true) : Money | Nil","args_html":"(str : <a href=\"../String.html\">String</a>, *, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"../Money.html\">Money</a> | Nil","location":{"filename":"src/money/money/parse.cr","line_number":25,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/parse.cr#L25"},"def":{"name":"parse?","args":[{"name":"str","external_name":"str","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":1,"return_type":"Money | ::Nil","visibility":"Public","body":"parse(str, allow_ambiguous) do nil end"},"external_var":false}],"types":[{"html_id":"money/Money/Parse/Error","path":"Money/Parse/Error.html","kind":"class","full_name":"Money::Parse::Error","name":"Error","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/money/parse.cr","line_number":4,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/parse.cr#L4"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money/Parse","kind":"module","full_name":"Money::Parse","name":"Parse"},"doc":"Exception class for parse errors.","summary":"<p>Exception class for parse errors.</p>"}]},{"html_id":"money/Money/RateProviderError","path":"Money/RateProviderError.html","kind":"class","full_name":"Money::RateProviderError","name":"RateProviderError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":63,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L63"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when a rate provider returns an error.","summary":"<p>Raised when a rate provider returns an error.</p>","constructors":[{"html_id":"new(code,detail=nil)-class-method","name":"new","abstract":false,"args":[{"name":"code","external_name":"code","restriction":""},{"name":"detail","default_value":"nil","external_name":"detail","restriction":""}],"args_string":"(code, detail = nil)","args_html":"(code, detail = <span class=\"n\">nil</span>)","location":{"filename":"src/money/error.cr","line_number":64,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L64"},"def":{"name":"new","args":[{"name":"code","external_name":"code","restriction":""},{"name":"detail","default_value":"nil","external_name":"detail","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, detail)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/RateProviderRequestError","path":"Money/RateProviderRequestError.html","kind":"class","full_name":"Money::RateProviderRequestError","name":"RateProviderRequestError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":74,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L74"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when a request to a rate provider fails.","summary":"<p>Raised when a request to a rate provider fails.</p>","constructors":[{"html_id":"new(status)-class-method","name":"new","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""}],"args_string":"(status)","args_html":"(status)","location":{"filename":"src/money/error.cr","line_number":75,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L75"},"def":{"name":"new","args":[{"name":"status","external_name":"status","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(status)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/RateProviderRequiredOptionError","path":"Money/RateProviderRequiredOptionError.html","kind":"class","full_name":"Money::RateProviderRequiredOptionError","name":"RateProviderRequiredOptionError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":81,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L81"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when a rate provider is missing a required option.","summary":"<p>Raised when a rate provider is missing a required option.</p>"},{"html_id":"money/Money/Rounding","path":"Money/Rounding.html","kind":"module","full_name":"Money::Rounding","name":"Rounding","abstract":false,"locations":[{"filename":"src/money/money/rounding.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L2"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"}],"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"instance_methods":[{"html_id":"round(precision:Int=0,mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"round","doc":"Rounds the monetary amount to smallest unit of coinage, using\nrounding *mode* if given, or `Money.rounding_mode` otherwise.\n\n```\nMoney.new(10.1, \"USD\").round                   # => Money(@amount=10.0, @currency=\"USD\")\nMoney.new(10.5, \"USD\").round(mode: :ties_even) # => Money(@amount=10.0, @currency=\"USD\")\nMoney.new(10.5, \"USD\").round(mode: :ties_away) # => Money(@amount=11.0, @currency=\"USD\")\n```","summary":"<p>Rounds the monetary amount to smallest unit of coinage, using rounding <em>mode</em> if given, or <code>Money.rounding_mode</code> otherwise.</p>","abstract":false,"args":[{"name":"precision","default_value":"0","external_name":"precision","restriction":"Int"},{"name":"mode","default_value":"Money.rounding_mode","external_name":"mode","restriction":"Number::RoundingMode"}],"args_string":"(precision : Int = 0, mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(precision : Int = <span class=\"n\">0</span>, mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":62,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L62"},"def":{"name":"round","args":[{"name":"precision","default_value":"0","external_name":"precision","restriction":"Int"},{"name":"mode","default_value":"Money.rounding_mode","external_name":"mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"copy_with(amount: @amount.round(precision, mode: mode))"},"external_var":false},{"html_id":"rounded_to_nearest_cash_value(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"rounded_to_nearest_cash_value","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").rounded_to_nearest_cash_value? # nil\n```\n\nNOTE: This variant returns `self` if `#rounded_to_nearest_cash_value?`\nreturns `nil`.","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L50"},"def":{"name":"rounded_to_nearest_cash_value","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"(rounded_to_nearest_cash_value?(rounding_mode)) || self"},"external_var":false},{"html_id":"rounded_to_nearest_cash_value!(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money-instance-method","name":"rounded_to_nearest_cash_value!","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").rounded_to_nearest_cash_value? # nil\n```\n\nNOTE: This variant raises `UndefinedSmallestDenominationError` if\n`#rounded_to_nearest_cash_value?` returns `nil`.","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a>","location":{"filename":"src/money/money/rounding.cr","line_number":41,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L41"},"def":{"name":"rounded_to_nearest_cash_value!","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money","visibility":"Public","body":"(rounded_to_nearest_cash_value?(rounding_mode)) ||\n(raise(UndefinedSmallestDenominationError.new(currency)))"},"external_var":false},{"html_id":"rounded_to_nearest_cash_value?(rounding_mode:Number::RoundingMode=Money.rounding_mode):Money|Nil-instance-method","name":"rounded_to_nearest_cash_value?","doc":"Returns a new `Money` instance with the nearest possible amount in cash value\n(cents), or `nil` if the `#currency` has no smallest denomination defined.\n\nFor example, in Swiss franc (CHF), the smallest possible amount of\ncash value is CHF 0.05. Therefore, for CHF 0.07 this method returns CHF 0.05,\nand for CHF 0.08, CHF 0.10.\n\n```\nMoney.new(0.07, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.05)\nMoney.new(0.08, \"CHF\").rounded_to_nearest_cash_value? # => Money(@amount = 0.1)\nMoney.new(10.0, \"XAG\").rounded_to_nearest_cash_value? # nil\n```","summary":"<p>Returns a new <code><a href=\"../Money.html\">Money</a></code> instance with the nearest possible amount in cash value (cents), or <code>nil</code> if the <code>#currency</code> has no smallest denomination defined.</p>","abstract":false,"args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"args_string":"(rounding_mode : Number::RoundingMode = Money.rounding_mode) : Money | Nil","args_html":"(rounding_mode : Number::RoundingMode = <span class=\"t\">Money</span>.rounding_mode) : <a href=\"../Money.html\">Money</a> | Nil","location":{"filename":"src/money/money/rounding.cr","line_number":31,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/money/rounding.cr#L31"},"def":{"name":"rounded_to_nearest_cash_value?","args":[{"name":"rounding_mode","default_value":"Money.rounding_mode","external_name":"rounding_mode","restriction":"Number::RoundingMode"}],"return_type":"Money | ::Nil","visibility":"Public","body":"if nearest_cash_value = nearest_cash_value(rounding_mode)\n  copy_with(fractional: nearest_cash_value)\nend"},"external_var":false}]},{"html_id":"money/Money/UndefinedSmallestDenominationError","path":"Money/UndefinedSmallestDenominationError.html","kind":"class","full_name":"Money::UndefinedSmallestDenominationError","name":"UndefinedSmallestDenominationError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":92,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L92"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when smallest denomination of a currency is not defined.","summary":"<p>Raised when smallest denomination of a currency is not defined.</p>","constructors":[{"html_id":"new(currency:Currency)-class-method","name":"new","abstract":false,"args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"args_string":"(currency : Currency)","args_html":"(currency : <a href=\"../Money/Currency.html\">Currency</a>)","location":{"filename":"src/money/error.cr","line_number":93,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L93"},"def":{"name":"new","args":[{"name":"currency","external_name":"currency","restriction":"Currency"}],"visibility":"Public","body":"_ = allocate\n_.initialize(currency)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/UnknownCurrencyError","path":"Money/UnknownCurrencyError.html","kind":"class","full_name":"Money::UnknownCurrencyError","name":"UnknownCurrencyError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":42,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L42"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when trying to find an unknown currency.","summary":"<p>Raised when trying to find an unknown currency.</p>","constructors":[{"html_id":"new(key)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/money/error.cr","line_number":43,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L43"},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/UnknownRateError","path":"Money/UnknownRateError.html","kind":"class","full_name":"Money::UnknownRateError","name":"UnknownRateError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":56,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L56"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when trying to find an unknown exchange rate.","summary":"<p>Raised when trying to find an unknown exchange rate.</p>","constructors":[{"html_id":"new(base,target)-class-method","name":"new","abstract":false,"args":[{"name":"base","external_name":"base","restriction":""},{"name":"target","external_name":"target","restriction":""}],"args_string":"(base, target)","args_html":"(base, target)","location":{"filename":"src/money/error.cr","line_number":57,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L57"},"def":{"name":"new","args":[{"name":"base","external_name":"base","restriction":""},{"name":"target","external_name":"target","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(base, target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"money/Money/UnknownRateProviderError","path":"Money/UnknownRateProviderError.html","kind":"class","full_name":"Money::UnknownRateProviderError","name":"UnknownRateProviderError","abstract":false,"superclass":{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},"ancestors":[{"html_id":"money/Money/Error","kind":"class","full_name":"Money::Error","name":"Error"},{"html_id":"money/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/money/error.cr","line_number":49,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L49"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"money/Money","kind":"struct","full_name":"Money","name":"Money"},"doc":"Raised when trying to find an unknown rate provider.","summary":"<p>Raised when trying to find an unknown rate provider.</p>","constructors":[{"html_id":"new(key)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/money/error.cr","line_number":50,"url":"https://github.com/crystal-money/money/blob/61948cb/src/money/error.cr#L50"},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]},{"html_id":"money/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_float.cr","line_number":523,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_float.cr#L523"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/humanize.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/humanize.cr#L1"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/number.cr","line_number":2,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/number.cr#L2"},{"filename":"src/core_ext/to_money.cr","line_number":21,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L21"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"The top-level number type.","summary":"<p>The top-level number type.</p>","instance_methods":[{"html_id":"to_money(currency=Money.default_currency,exchange=nil):Money-instance-method","name":"to_money","doc":"Returns a `Money` instance parsed from `self`.\n\nSee also `Money.from_amount`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code>.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(currency = Money.default_currency, exchange = nil) : Money","args_html":"(currency = <span class=\"t\">Money</span>.default_currency, exchange = <span class=\"n\">nil</span>) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/core_ext/to_money.cr","line_number":32,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L32"},"def":{"name":"to_money","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"return_type":"Money","visibility":"Public","body":"Money.from_amount(self, currency, exchange)"},"external_var":false},{"html_id":"to_money?(currency=Money.default_currency,exchange=nil):Money|Nil-instance-method","name":"to_money?","doc":"Returns a `Money` instance parsed from `self` if possible, `nil` otherwise.\n\nSee also `Money.from_amount`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code> if possible, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"args_string":"(currency = Money.default_currency, exchange = nil) : Money | Nil","args_html":"(currency = <span class=\"t\">Money</span>.default_currency, exchange = <span class=\"n\">nil</span>) : <a href=\"Money.html\">Money</a> | Nil","location":{"filename":"src/core_ext/to_money.cr","line_number":25,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L25"},"def":{"name":"to_money?","args":[{"name":"currency","default_value":"Money.default_currency","external_name":"currency","restriction":""},{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""}],"return_type":"Money | ::Nil","visibility":"Public","body":"begin\n  Money.from_amount(self, currency, exchange)\nrescue\n  nil\nend"},"external_var":false}]},{"html_id":"money/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"money/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"money/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_decimal.cr","line_number":850,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_decimal.cr#L850"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_float.cr","line_number":583,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_float.cr#L583"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_int.cr","line_number":895,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/big/big_int.cr#L895"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/json/to_json.cr","line_number":63,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/json/to_json.cr#L63"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/string.cr","line_number":145,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/string.cr#L145"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/string/grapheme.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/string/grapheme.cr#L3"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/string/grapheme/grapheme.cr","line_number":3,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/string/grapheme/grapheme.cr#L3"},{"filename":"../../_temp/crystal-latest-true-undefined/share/crystal/src/string/utf16.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/../../_temp/crystal-latest-true-undefined/share/crystal/src/string/utf16.cr#L1"},{"filename":"src/core_ext/to_money.cr","line_number":1,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L1"}],"repository_name":"money","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"money/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nSee [`String` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/string.html) in the language reference.\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nA string might end up being composed of bytes which form an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but every\nbyte that doesn't start a valid UTF-8 byte sequence is interpreted as though\nit encodes the Unicode replacement character (U+FFFD) by itself. For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.\n\nNote that this interpretation only applies to methods inside Crystal; calling\n`#to_slice` or `#to_unsafe`, e.g. when passing a string to a C library, will\nexpose the invalid UTF-8 byte sequences. In particular, `Regex`'s underlying\nengine may reject strings that are not valid UTF-8, or it may invoke undefined\nbehavior on invalid strings. If this is undesired, `#scrub` could be used to\nremove the offending byte sequences first.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","instance_methods":[{"html_id":"to_money(exchange=nil,*,allow_ambiguous=true):Money-instance-method","name":"to_money","doc":"Returns a `Money` instance parsed from `self`.\n\nSee also `Money.parse`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code>.</p>","abstract":false,"args":[{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(exchange = nil, *, allow_ambiguous = true) : Money","args_html":"(exchange = <span class=\"n\">nil</span>, *, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"Money.html\">Money</a>","location":{"filename":"src/core_ext/to_money.cr","line_number":14,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L14"},"def":{"name":"to_money","args":[{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":1,"return_type":"Money","visibility":"Public","body":"money = Money.parse(self, allow_ambiguous: allow_ambiguous)\nif exchange\n  money.exchange = exchange\nend\nmoney\n"},"external_var":false},{"html_id":"to_money?(exchange=nil,*,allow_ambiguous=true):Money|Nil-instance-method","name":"to_money?","doc":"Returns a `Money` instance parsed from `self` if possible, `nil` otherwise.\n\nSee also `Money.parse?`.","summary":"<p>Returns a <code><a href=\"Money.html\">Money</a></code> instance parsed from <code>self</code> if possible, <code>nil</code> otherwise.</p>","abstract":false,"args":[{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"args_string":"(exchange = nil, *, allow_ambiguous = true) : Money | Nil","args_html":"(exchange = <span class=\"n\">nil</span>, *, allow_ambiguous = <span class=\"n\">true</span>) : <a href=\"Money.html\">Money</a> | Nil","location":{"filename":"src/core_ext/to_money.cr","line_number":5,"url":"https://github.com/crystal-money/money/blob/61948cb/src/core_ext/to_money.cr#L5"},"def":{"name":"to_money?","args":[{"name":"exchange","default_value":"nil","external_name":"exchange","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"allow_ambiguous","default_value":"true","external_name":"allow_ambiguous","restriction":""}],"splat_index":1,"return_type":"Money | ::Nil","visibility":"Public","body":"money = Money.parse?(self, allow_ambiguous: allow_ambiguous)\nif exchange && money\n  money.exchange = exchange\nend\nmoney\n"},"external_var":false}]}]}})